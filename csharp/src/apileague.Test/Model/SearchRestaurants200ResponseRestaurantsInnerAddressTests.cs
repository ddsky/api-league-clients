/*
 * API League
 *
 * API League is a Hub for World Class APIs.
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: mail@apileague.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using apileague.Model;
using apileague.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace apileague.Test.Model
{
    /// <summary>
    ///  Class for testing SearchRestaurants200ResponseRestaurantsInnerAddress
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class SearchRestaurants200ResponseRestaurantsInnerAddressTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for SearchRestaurants200ResponseRestaurantsInnerAddress
        //private SearchRestaurants200ResponseRestaurantsInnerAddress instance;

        public SearchRestaurants200ResponseRestaurantsInnerAddressTests()
        {
            // TODO uncomment below to create an instance of SearchRestaurants200ResponseRestaurantsInnerAddress
            //instance = new SearchRestaurants200ResponseRestaurantsInnerAddress();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SearchRestaurants200ResponseRestaurantsInnerAddress
        /// </summary>
        [Fact]
        public void SearchRestaurants200ResponseRestaurantsInnerAddressInstanceTest()
        {
            // TODO uncomment below to test "IsType" SearchRestaurants200ResponseRestaurantsInnerAddress
            //Assert.IsType<SearchRestaurants200ResponseRestaurantsInnerAddress>(instance);
        }

        /// <summary>
        /// Test the property 'Zipcode'
        /// </summary>
        [Fact]
        public void ZipcodeTest()
        {
            // TODO unit test for the property 'Zipcode'
        }

        /// <summary>
        /// Test the property 'Country'
        /// </summary>
        [Fact]
        public void CountryTest()
        {
            // TODO unit test for the property 'Country'
        }

        /// <summary>
        /// Test the property 'City'
        /// </summary>
        [Fact]
        public void CityTest()
        {
            // TODO unit test for the property 'City'
        }

        /// <summary>
        /// Test the property 'Latitude'
        /// </summary>
        [Fact]
        public void LatitudeTest()
        {
            // TODO unit test for the property 'Latitude'
        }

        /// <summary>
        /// Test the property 'Lon'
        /// </summary>
        [Fact]
        public void LonTest()
        {
            // TODO unit test for the property 'Lon'
        }

        /// <summary>
        /// Test the property 'StreetAddr2'
        /// </summary>
        [Fact]
        public void StreetAddr2Test()
        {
            // TODO unit test for the property 'StreetAddr2'
        }

        /// <summary>
        /// Test the property 'State'
        /// </summary>
        [Fact]
        public void StateTest()
        {
            // TODO unit test for the property 'State'
        }

        /// <summary>
        /// Test the property 'StreetAddr'
        /// </summary>
        [Fact]
        public void StreetAddrTest()
        {
            // TODO unit test for the property 'StreetAddr'
        }

        /// <summary>
        /// Test the property 'Lat'
        /// </summary>
        [Fact]
        public void LatTest()
        {
            // TODO unit test for the property 'Lat'
        }

        /// <summary>
        /// Test the property 'Longitude'
        /// </summary>
        [Fact]
        public void LongitudeTest()
        {
            // TODO unit test for the property 'Longitude'
        }
    }
}

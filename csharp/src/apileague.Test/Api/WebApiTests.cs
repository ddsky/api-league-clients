/*
 * API League
 *
 * API League is a Hub for World Class APIs.
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: mail@apileague.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using apileague.Client;
using apileague.Api;
// uncomment below to import models
//using apileague.Model;

namespace apileague.Test.Api
{
    /// <summary>
    ///  Class for testing WebApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class WebApiTests : IDisposable
    {
        private WebApi instance;

        public WebApiTests()
        {
            instance = new WebApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of WebApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' WebApi
            //Assert.IsType<WebApi>(instance);
        }

        /// <summary>
        /// Test ExtractAuthors
        /// </summary>
        [Fact]
        public void ExtractAuthorsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string url = null;
            //var response = instance.ExtractAuthors(url);
            //Assert.IsType<ExtractAuthors200Response>(response);
        }

        /// <summary>
        /// Test ExtractContentFromAWebPage
        /// </summary>
        [Fact]
        public void ExtractContentFromAWebPageTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string url = null;
            //var response = instance.ExtractContentFromAWebPage(url);
            //Assert.IsType<ExtractContentFromAWebPage200Response>(response);
        }

        /// <summary>
        /// Test ExtractPublishDate
        /// </summary>
        [Fact]
        public void ExtractPublishDateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string url = null;
            //var response = instance.ExtractPublishDate(url);
            //Assert.IsType<ExtractPublishDate200Response>(response);
        }

        /// <summary>
        /// Test RetrievePageRank
        /// </summary>
        [Fact]
        public void RetrievePageRankTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string domain = null;
            //var response = instance.RetrievePageRank(domain);
            //Assert.IsType<RetrievePageRank200Response>(response);
        }

        /// <summary>
        /// Test SearchWeb
        /// </summary>
        [Fact]
        public void SearchWebTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string query = null;
            //int? number = null;
            //var response = instance.SearchWeb(query, number);
            //Assert.IsType<SearchWeb200Response>(response);
        }

        /// <summary>
        /// Test VerifyEmailAddress
        /// </summary>
        [Fact]
        public void VerifyEmailAddressTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string email = null;
            //var response = instance.VerifyEmailAddress(email);
            //Assert.IsType<VerifyEmailAddress200Response>(response);
        }
    }
}

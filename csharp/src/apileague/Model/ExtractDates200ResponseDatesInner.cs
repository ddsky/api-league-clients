/*
 * API League
 *
 * API League is a Hub for World Class APIs.
 *
 * The version of the OpenAPI document: 1.4.0
 * Contact: mail@apileague.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = apileague.Client.OpenAPIDateConverter;

namespace apileague.Model
{
    /// <summary>
    /// ExtractDates200ResponseDatesInner
    /// </summary>
    [DataContract(Name = "extractDates_200_response_dates_inner")]
    public partial class ExtractDates200ResponseDatesInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ExtractDates200ResponseDatesInner" /> class.
        /// </summary>
        /// <param name="startPosition">startPosition.</param>
        /// <param name="date">date.</param>
        /// <param name="normalizedDate">normalizedDate.</param>
        /// <param name="tag">tag.</param>
        /// <param name="endPosition">endPosition.</param>
        public ExtractDates200ResponseDatesInner(int startPosition = default(int), string date = default(string), decimal normalizedDate = default(decimal), string tag = default(string), int endPosition = default(int))
        {
            this.StartPosition = startPosition;
            this.Date = date;
            this.NormalizedDate = normalizedDate;
            this.Tag = tag;
            this.EndPosition = endPosition;
        }

        /// <summary>
        /// Gets or Sets StartPosition
        /// </summary>
        [DataMember(Name = "start_position", EmitDefaultValue = false)]
        public int StartPosition { get; set; }

        /// <summary>
        /// Gets or Sets Date
        /// </summary>
        [DataMember(Name = "date", EmitDefaultValue = true)]
        public string Date { get; set; }

        /// <summary>
        /// Gets or Sets NormalizedDate
        /// </summary>
        [DataMember(Name = "normalized_date", EmitDefaultValue = false)]
        public decimal NormalizedDate { get; set; }

        /// <summary>
        /// Gets or Sets Tag
        /// </summary>
        [DataMember(Name = "tag", EmitDefaultValue = true)]
        public string Tag { get; set; }

        /// <summary>
        /// Gets or Sets EndPosition
        /// </summary>
        [DataMember(Name = "end_position", EmitDefaultValue = false)]
        public int EndPosition { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ExtractDates200ResponseDatesInner {\n");
            sb.Append("  StartPosition: ").Append(StartPosition).Append("\n");
            sb.Append("  Date: ").Append(Date).Append("\n");
            sb.Append("  NormalizedDate: ").Append(NormalizedDate).Append("\n");
            sb.Append("  Tag: ").Append(Tag).Append("\n");
            sb.Append("  EndPosition: ").Append(EndPosition).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

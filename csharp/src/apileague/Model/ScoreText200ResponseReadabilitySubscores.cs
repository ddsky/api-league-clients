/*
 * API League
 *
 * API League is a Hub for World Class APIs.
 *
 * The version of the OpenAPI document: 1.4.0
 * Contact: mail@apileague.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = apileague.Client.OpenAPIDateConverter;

namespace apileague.Model
{
    /// <summary>
    /// ScoreText200ResponseReadabilitySubscores
    /// </summary>
    [DataContract(Name = "scoreText_200_response_readability_subscores")]
    public partial class ScoreText200ResponseReadabilitySubscores : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ScoreText200ResponseReadabilitySubscores" /> class.
        /// </summary>
        /// <param name="readingTimeSeconds">readingTimeSeconds.</param>
        /// <param name="forcast">forcast.</param>
        /// <param name="flesch">flesch.</param>
        /// <param name="smog">smog.</param>
        /// <param name="ari">ari.</param>
        /// <param name="lix">lix.</param>
        /// <param name="colemanLiau">colemanLiau.</param>
        /// <param name="kincaid">kincaid.</param>
        /// <param name="fog">fog.</param>
        public ScoreText200ResponseReadabilitySubscores(int readingTimeSeconds = default(int), decimal forcast = default(decimal), decimal flesch = default(decimal), decimal smog = default(decimal), decimal ari = default(decimal), decimal lix = default(decimal), decimal colemanLiau = default(decimal), decimal kincaid = default(decimal), decimal fog = default(decimal))
        {
            this.ReadingTimeSeconds = readingTimeSeconds;
            this.Forcast = forcast;
            this.Flesch = flesch;
            this.Smog = smog;
            this.Ari = ari;
            this.Lix = lix;
            this.ColemanLiau = colemanLiau;
            this.Kincaid = kincaid;
            this.Fog = fog;
        }

        /// <summary>
        /// Gets or Sets ReadingTimeSeconds
        /// </summary>
        [DataMember(Name = "reading_time_seconds", EmitDefaultValue = false)]
        public int ReadingTimeSeconds { get; set; }

        /// <summary>
        /// Gets or Sets Forcast
        /// </summary>
        [DataMember(Name = "forcast", EmitDefaultValue = false)]
        public decimal Forcast { get; set; }

        /// <summary>
        /// Gets or Sets Flesch
        /// </summary>
        [DataMember(Name = "flesch", EmitDefaultValue = false)]
        public decimal Flesch { get; set; }

        /// <summary>
        /// Gets or Sets Smog
        /// </summary>
        [DataMember(Name = "smog", EmitDefaultValue = false)]
        public decimal Smog { get; set; }

        /// <summary>
        /// Gets or Sets Ari
        /// </summary>
        [DataMember(Name = "ari", EmitDefaultValue = false)]
        public decimal Ari { get; set; }

        /// <summary>
        /// Gets or Sets Lix
        /// </summary>
        [DataMember(Name = "lix", EmitDefaultValue = false)]
        public decimal Lix { get; set; }

        /// <summary>
        /// Gets or Sets ColemanLiau
        /// </summary>
        [DataMember(Name = "coleman_liau", EmitDefaultValue = false)]
        public decimal ColemanLiau { get; set; }

        /// <summary>
        /// Gets or Sets Kincaid
        /// </summary>
        [DataMember(Name = "kincaid", EmitDefaultValue = false)]
        public decimal Kincaid { get; set; }

        /// <summary>
        /// Gets or Sets Fog
        /// </summary>
        [DataMember(Name = "fog", EmitDefaultValue = false)]
        public decimal Fog { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ScoreText200ResponseReadabilitySubscores {\n");
            sb.Append("  ReadingTimeSeconds: ").Append(ReadingTimeSeconds).Append("\n");
            sb.Append("  Forcast: ").Append(Forcast).Append("\n");
            sb.Append("  Flesch: ").Append(Flesch).Append("\n");
            sb.Append("  Smog: ").Append(Smog).Append("\n");
            sb.Append("  Ari: ").Append(Ari).Append("\n");
            sb.Append("  Lix: ").Append(Lix).Append("\n");
            sb.Append("  ColemanLiau: ").Append(ColemanLiau).Append("\n");
            sb.Append("  Kincaid: ").Append(Kincaid).Append("\n");
            sb.Append("  Fog: ").Append(Fog).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

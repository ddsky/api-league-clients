/*
 * API League
 *
 * API League is a Hub for World Class APIs.
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: mail@apileague.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = apileague.Client.OpenAPIDateConverter;

namespace apileague.Model
{
    /// <summary>
    /// ScoreText200ResponseInterestingnessSubscores
    /// </summary>
    [DataContract(Name = "scoreText_200_response_interestingness_subscores")]
    public partial class ScoreText200ResponseInterestingnessSubscores : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ScoreText200ResponseInterestingnessSubscores" /> class.
        /// </summary>
        /// <param name="titleRatingScore">titleRatingScore.</param>
        /// <param name="quoteScore">quoteScore.</param>
        /// <param name="lengthScore">lengthScore.</param>
        /// <param name="linkScore">linkScore.</param>
        /// <param name="googleHitsScore">googleHitsScore.</param>
        public ScoreText200ResponseInterestingnessSubscores(List<int> titleRatingScore = default(List<int>), List<int> quoteScore = default(List<int>), List<int> lengthScore = default(List<int>), List<int> linkScore = default(List<int>), List<int> googleHitsScore = default(List<int>))
        {
            this.TitleRatingScore = titleRatingScore;
            this.QuoteScore = quoteScore;
            this.LengthScore = lengthScore;
            this.LinkScore = linkScore;
            this.GoogleHitsScore = googleHitsScore;
        }

        /// <summary>
        /// Gets or Sets TitleRatingScore
        /// </summary>
        [DataMember(Name = "title_rating_score", EmitDefaultValue = false)]
        public List<int> TitleRatingScore { get; set; }

        /// <summary>
        /// Gets or Sets QuoteScore
        /// </summary>
        [DataMember(Name = "quote_score", EmitDefaultValue = false)]
        public List<int> QuoteScore { get; set; }

        /// <summary>
        /// Gets or Sets LengthScore
        /// </summary>
        [DataMember(Name = "length_score", EmitDefaultValue = false)]
        public List<int> LengthScore { get; set; }

        /// <summary>
        /// Gets or Sets LinkScore
        /// </summary>
        [DataMember(Name = "link_score", EmitDefaultValue = false)]
        public List<int> LinkScore { get; set; }

        /// <summary>
        /// Gets or Sets GoogleHitsScore
        /// </summary>
        [DataMember(Name = "google_hits_score", EmitDefaultValue = false)]
        public List<int> GoogleHitsScore { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ScoreText200ResponseInterestingnessSubscores {\n");
            sb.Append("  TitleRatingScore: ").Append(TitleRatingScore).Append("\n");
            sb.Append("  QuoteScore: ").Append(QuoteScore).Append("\n");
            sb.Append("  LengthScore: ").Append(LengthScore).Append("\n");
            sb.Append("  LinkScore: ").Append(LinkScore).Append("\n");
            sb.Append("  GoogleHitsScore: ").Append(GoogleHitsScore).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

/*
 * API League
 *
 * API League is a Hub for World Class APIs.
 *
 * The version of the OpenAPI document: 1.6.4
 * Contact: mail@apileague.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = apileague.Client.OpenAPIDateConverter;

namespace apileague.Model
{
    /// <summary>
    /// ExtractEntitiesAPI200ResponseEntitiesInner
    /// </summary>
    [DataContract(Name = "extractEntitiesAPI_200_response_entities_inner")]
    public partial class ExtractEntitiesAPI200ResponseEntitiesInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ExtractEntitiesAPI200ResponseEntitiesInner" /> class.
        /// </summary>
        /// <param name="startPosition">startPosition.</param>
        /// <param name="image">image.</param>
        /// <param name="type">type.</param>
        /// <param name="value">value.</param>
        /// <param name="endPosition">endPosition.</param>
        public ExtractEntitiesAPI200ResponseEntitiesInner(int startPosition = default(int), string image = default(string), string type = default(string), string value = default(string), int endPosition = default(int))
        {
            this.StartPosition = startPosition;
            this.Image = image;
            this.Type = type;
            this.Value = value;
            this.EndPosition = endPosition;
        }

        /// <summary>
        /// Gets or Sets StartPosition
        /// </summary>
        [DataMember(Name = "start_position", EmitDefaultValue = false)]
        public int StartPosition { get; set; }

        /// <summary>
        /// Gets or Sets Image
        /// </summary>
        [DataMember(Name = "image", EmitDefaultValue = true)]
        public string Image { get; set; }

        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        [DataMember(Name = "type", EmitDefaultValue = true)]
        public string Type { get; set; }

        /// <summary>
        /// Gets or Sets Value
        /// </summary>
        [DataMember(Name = "value", EmitDefaultValue = true)]
        public string Value { get; set; }

        /// <summary>
        /// Gets or Sets EndPosition
        /// </summary>
        [DataMember(Name = "end_position", EmitDefaultValue = false)]
        public int EndPosition { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ExtractEntitiesAPI200ResponseEntitiesInner {\n");
            sb.Append("  StartPosition: ").Append(StartPosition).Append("\n");
            sb.Append("  Image: ").Append(Image).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  Value: ").Append(Value).Append("\n");
            sb.Append("  EndPosition: ").Append(EndPosition).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

/*
 * API League
 *
 * API League is a Hub for World Class APIs.
 *
 * The version of the OpenAPI document: 1.6.4
 * Contact: mail@apileague.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = apileague.Client.OpenAPIDateConverter;

namespace apileague.Model
{
    /// <summary>
    /// SearchDrinksAPI200ResponseDrinksInnerCredits
    /// </summary>
    [DataContract(Name = "searchDrinksAPI_200_response_drinks_inner_credits")]
    public partial class SearchDrinksAPI200ResponseDrinksInnerCredits : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SearchDrinksAPI200ResponseDrinksInnerCredits" /> class.
        /// </summary>
        /// <param name="text">text.</param>
        /// <param name="sourceName">sourceName.</param>
        /// <param name="sourceUrl">sourceUrl.</param>
        public SearchDrinksAPI200ResponseDrinksInnerCredits(string text = default(string), string sourceName = default(string), string sourceUrl = default(string))
        {
            this.Text = text;
            this.SourceName = sourceName;
            this.SourceUrl = sourceUrl;
        }

        /// <summary>
        /// Gets or Sets Text
        /// </summary>
        [DataMember(Name = "text", EmitDefaultValue = true)]
        public string Text { get; set; }

        /// <summary>
        /// Gets or Sets SourceName
        /// </summary>
        [DataMember(Name = "source_name", EmitDefaultValue = true)]
        public string SourceName { get; set; }

        /// <summary>
        /// Gets or Sets SourceUrl
        /// </summary>
        [DataMember(Name = "source_url", EmitDefaultValue = true)]
        public string SourceUrl { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class SearchDrinksAPI200ResponseDrinksInnerCredits {\n");
            sb.Append("  Text: ").Append(Text).Append("\n");
            sb.Append("  SourceName: ").Append(SourceName).Append("\n");
            sb.Append("  SourceUrl: ").Append(SourceUrl).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

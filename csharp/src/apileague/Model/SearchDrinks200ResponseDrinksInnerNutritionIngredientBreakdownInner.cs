/*
 * API League
 *
 * API League is a Hub for World Class APIs.
 *
 * The version of the OpenAPI document: 1.5.0
 * Contact: mail@apileague.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = apileague.Client.OpenAPIDateConverter;

namespace apileague.Model
{
    /// <summary>
    /// SearchDrinks200ResponseDrinksInnerNutritionIngredientBreakdownInner
    /// </summary>
    [DataContract(Name = "searchDrinks_200_response_drinks_inner_nutrition_ingredient_breakdown_inner")]
    public partial class SearchDrinks200ResponseDrinksInnerNutritionIngredientBreakdownInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SearchDrinks200ResponseDrinksInnerNutritionIngredientBreakdownInner" /> class.
        /// </summary>
        /// <param name="name">name.</param>
        /// <param name="amount">amount.</param>
        /// <param name="unit">unit.</param>
        /// <param name="id">id.</param>
        /// <param name="nutrients">nutrients.</param>
        public SearchDrinks200ResponseDrinksInnerNutritionIngredientBreakdownInner(string name = default(string), int amount = default(int), string unit = default(string), int id = default(int), List<SearchDrinks200ResponseDrinksInnerNutritionIngredientBreakdownInnerNutrientsInner> nutrients = default(List<SearchDrinks200ResponseDrinksInnerNutritionIngredientBreakdownInnerNutrientsInner>))
        {
            this.Name = name;
            this.Amount = amount;
            this.Unit = unit;
            this.Id = id;
            this.Nutrients = nutrients;
        }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name = "name", EmitDefaultValue = true)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets Amount
        /// </summary>
        [DataMember(Name = "amount", EmitDefaultValue = false)]
        public int Amount { get; set; }

        /// <summary>
        /// Gets or Sets Unit
        /// </summary>
        [DataMember(Name = "unit", EmitDefaultValue = true)]
        public string Unit { get; set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public int Id { get; set; }

        /// <summary>
        /// Gets or Sets Nutrients
        /// </summary>
        [DataMember(Name = "nutrients", EmitDefaultValue = false)]
        public List<SearchDrinks200ResponseDrinksInnerNutritionIngredientBreakdownInnerNutrientsInner> Nutrients { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class SearchDrinks200ResponseDrinksInnerNutritionIngredientBreakdownInner {\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Amount: ").Append(Amount).Append("\n");
            sb.Append("  Unit: ").Append(Unit).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Nutrients: ").Append(Nutrients).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

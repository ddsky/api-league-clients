/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.apileague

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import com.apileague.WebApi
import com.apileague.client.model.ExtractAuthorsAPI200Response
import com.apileague.client.model.ExtractContentFromAWebPageAPI200Response
import com.apileague.client.model.ExtractPublishDateAPI200Response
import com.apileague.client.model.RetrievePageRankAPI200Response
import com.apileague.client.model.SearchWebAPI200Response
import com.apileague.client.model.VerifyEmailAddressAPI200Response

class WebApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of WebApi
        //val apiInstance = WebApi()

        // to test extractAuthorsAPI
        should("test extractAuthorsAPI") {
            // uncomment below to test extractAuthorsAPI
            //val url : kotlin.String = https://www.nytimes.com/2024/03/27/world/australia/economy-cost-of-living.html // kotlin.String | The url with the article from which authors should be extracted.
            //val result : ExtractAuthorsAPI200Response = apiInstance.extractAuthorsAPI(url)
            //result shouldBe ("TODO")
        }

        // to test extractContentFromAWebPageAPI
        should("test extractContentFromAWebPageAPI") {
            // uncomment below to test extractContentFromAWebPageAPI
            //val url : kotlin.String = https://www.nytimes.com/2024/03/27/world/australia/economy-cost-of-living.html // kotlin.String | The url for which the content will be extracted.
            //val result : ExtractContentFromAWebPageAPI200Response = apiInstance.extractContentFromAWebPageAPI(url)
            //result shouldBe ("TODO")
        }

        // to test extractPublishDateAPI
        should("test extractPublishDateAPI") {
            // uncomment below to test extractPublishDateAPI
            //val url : kotlin.String = https://www.nytimes.com/2024/03/27/world/australia/economy-cost-of-living.html // kotlin.String | The url for which the publish date should be extracted.
            //val result : ExtractPublishDateAPI200Response = apiInstance.extractPublishDateAPI(url)
            //result shouldBe ("TODO")
        }

        // to test retrievePageRankAPI
        should("test retrievePageRankAPI") {
            // uncomment below to test retrievePageRankAPI
            //val domain : kotlin.String = amazon.com // kotlin.String | The domain for which the page rank should be returned.
            //val result : RetrievePageRankAPI200Response = apiInstance.retrievePageRankAPI(domain)
            //result shouldBe ("TODO")
        }

        // to test searchWebAPI
        should("test searchWebAPI") {
            // uncomment below to test searchWebAPI
            //val query : kotlin.String = penguins // kotlin.String | The search query.
            //val number : kotlin.Int = 5 // kotlin.Int | The number of results to return in range [1,50]
            //val result : SearchWebAPI200Response = apiInstance.searchWebAPI(query, number)
            //result shouldBe ("TODO")
        }

        // to test verifyEmailAddressAPI
        should("test verifyEmailAddressAPI") {
            // uncomment below to test verifyEmailAddressAPI
            //val email : kotlin.String = maxtest@gmail.com // kotlin.String | The email address to verify.
            //val result : VerifyEmailAddressAPI200Response = apiInstance.verifyEmailAddressAPI(email)
            //result shouldBe ("TODO")
        }

    }
}

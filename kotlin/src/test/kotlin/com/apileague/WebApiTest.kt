/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.apileague

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import com.apileague.WebApi
import com.apileague.client.model.ExtractAuthors200Response
import com.apileague.client.model.ExtractContentFromAWebPage200Response
import com.apileague.client.model.ExtractPublishDate200Response
import com.apileague.client.model.RetrievePageRank200Response
import com.apileague.client.model.SearchWeb200Response
import com.apileague.client.model.VerifyEmailAddress200Response

class WebApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of WebApi
        //val apiInstance = WebApi()

        // to test extractAuthors
        should("test extractAuthors") {
            // uncomment below to test extractAuthors
            //val url : kotlin.String = https://www.nytimes.com/2024/03/27/world/australia/economy-cost-of-living.html // kotlin.String | The url with the article from which authors should be extracted.
            //val result : ExtractAuthors200Response = apiInstance.extractAuthors(url)
            //result shouldBe ("TODO")
        }

        // to test extractContentFromAWebPage
        should("test extractContentFromAWebPage") {
            // uncomment below to test extractContentFromAWebPage
            //val url : kotlin.String = https://www.nytimes.com/2024/03/27/world/australia/economy-cost-of-living.html // kotlin.String | The url for which the content will be extracted.
            //val result : ExtractContentFromAWebPage200Response = apiInstance.extractContentFromAWebPage(url)
            //result shouldBe ("TODO")
        }

        // to test extractPublishDate
        should("test extractPublishDate") {
            // uncomment below to test extractPublishDate
            //val url : kotlin.String = https://www.nytimes.com/2024/03/27/world/australia/economy-cost-of-living.html // kotlin.String | The url for which the publish date should be extracted.
            //val result : ExtractPublishDate200Response = apiInstance.extractPublishDate(url)
            //result shouldBe ("TODO")
        }

        // to test retrievePageRank
        should("test retrievePageRank") {
            // uncomment below to test retrievePageRank
            //val domain : kotlin.String = amazon.com // kotlin.String | The domain for which the page rank should be returned.
            //val result : RetrievePageRank200Response = apiInstance.retrievePageRank(domain)
            //result shouldBe ("TODO")
        }

        // to test searchWeb
        should("test searchWeb") {
            // uncomment below to test searchWeb
            //val query : kotlin.String = penguins // kotlin.String | The search query.
            //val number : kotlin.Int = 5 // kotlin.Int | The number of results to return in range [1,50]
            //val result : SearchWeb200Response = apiInstance.searchWeb(query, number)
            //result shouldBe ("TODO")
        }

        // to test verifyEmailAddress
        should("test verifyEmailAddress") {
            // uncomment below to test verifyEmailAddress
            //val email : kotlin.String = maxtest@gmail.com // kotlin.String | The email address to verify.
            //val result : VerifyEmailAddress200Response = apiInstance.verifyEmailAddress(email)
            //result shouldBe ("TODO")
        }

    }
}

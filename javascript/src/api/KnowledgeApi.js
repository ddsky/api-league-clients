/**
 * API League
 * API League is a Hub for World Class APIs.
 *
 * The version of the OpenAPI document: 1.6.4
 * Contact: mail@apileague.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import RandomQuoteAPI200Response from '../model/RandomQuoteAPI200Response';
import RandomRiddleAPI200Response from '../model/RandomRiddleAPI200Response';
import RandomTriviaAPI200Response from '../model/RandomTriviaAPI200Response';

/**
* Knowledge service.
* @module api/KnowledgeApi
* @version 1.6.4
*/
export default class KnowledgeApi {

    /**
    * Constructs a new KnowledgeApi. 
    * @alias module:api/KnowledgeApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the randomQuoteAPI operation.
     * @callback module:api/KnowledgeApi~randomQuoteAPICallback
     * @param {String} error Error message, if any.
     * @param {module:model/RandomQuoteAPI200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Random Quote API
     * This API returns a random quote from a collection of quotes. The quotes are from famous people and are in English.
     * @param {Object} opts Optional parameters
     * @param {Number} [minLength] The minimum length of the quote in letters.
     * @param {Number} [maxLength] The maximum length of the quote in letters.
     * @param {module:api/KnowledgeApi~randomQuoteAPICallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RandomQuoteAPI200Response}
     */
    randomQuoteAPI(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'min-length': opts['minLength'],
        'max-length': opts['maxLength']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey', 'headerApiKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = RandomQuoteAPI200Response;
      return this.apiClient.callApi(
        '/retrieve-random-quote', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the randomRiddleAPI operation.
     * @callback module:api/KnowledgeApi~randomRiddleAPICallback
     * @param {String} error Error message, if any.
     * @param {module:model/RandomRiddleAPI200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Random Riddle API
     * The riddles API returns a random riddle or brain-teaser. Riddles are a great way to exercise your brain and keep it sharp. The API supports brain-teasers in three difficulty levels: easy, medium, and hard. You can also get a random riddle without specifying a difficulty level.
     * @param {Object} opts Optional parameters
     * @param {String} [difficulty] The difficulty of the riddle, either \"easy\", \"medium\", or \"hard\".
     * @param {module:api/KnowledgeApi~randomRiddleAPICallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RandomRiddleAPI200Response}
     */
    randomRiddleAPI(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'difficulty': opts['difficulty']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey', 'headerApiKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = RandomRiddleAPI200Response;
      return this.apiClient.callApi(
        '/retrieve-random-riddle', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the randomTriviaAPI operation.
     * @callback module:api/KnowledgeApi~randomTriviaAPICallback
     * @param {String} error Error message, if any.
     * @param {module:model/RandomTriviaAPI200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Random Trivia API
     * This endpoint returns a random piece of trivia like \"Rio de Janeiro was once the capital of Portugal, making it the only European capital outside of Europe.\".
     * @param {Object} opts Optional parameters
     * @param {Number} [maxLength] The maximum length of the trivia in letters.
     * @param {module:api/KnowledgeApi~randomTriviaAPICallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RandomTriviaAPI200Response}
     */
    randomTriviaAPI(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'max-length': opts['maxLength']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey', 'headerApiKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = RandomTriviaAPI200Response;
      return this.apiClient.callApi(
        '/retrieve-random-trivia', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}

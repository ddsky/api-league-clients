/**
 * API League
 * API League is a Hub for World Class APIs.
 *
 * The version of the OpenAPI document: 1.6.4
 * Contact: mail@apileague.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ReadKeyValueFromStoreAPI200Response from '../model/ReadKeyValueFromStoreAPI200Response';
import StoreKeyValueGETAPI200Response from '../model/StoreKeyValueGETAPI200Response';

/**
* Storage service.
* @module api/StorageApi
* @version 1.6.4
*/
export default class StorageApi {

    /**
    * Constructs a new StorageApi. 
    * @alias module:api/StorageApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the readKeyValueFromStoreAPI operation.
     * @callback module:api/StorageApi~readKeyValueFromStoreAPICallback
     * @param {String} error Error message, if any.
     * @param {module:model/ReadKeyValueFromStoreAPI200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Read Key Value from Store API
     * Read a value from the key-value store. The key-value store is a simple storage system that allows you to store and retrieve data using a key. The data is stored in the cloud and can be accessed from anywhere. You can use the key-value store to store any type of data, such as text or numbers. The key-value store is a great way to store data that you want to access from multiple devices or locations.
     * @param {String} key The key for which the value is stored (max length 255 characters).
     * @param {module:api/StorageApi~readKeyValueFromStoreAPICallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ReadKeyValueFromStoreAPI200Response}
     */
    readKeyValueFromStoreAPI(key, callback) {
      let postBody = null;
      // verify the required parameter 'key' is set
      if (key === undefined || key === null) {
        throw new Error("Missing the required parameter 'key' when calling readKeyValueFromStoreAPI");
      }

      let pathParams = {
      };
      let queryParams = {
        'key': key
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey', 'headerApiKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ReadKeyValueFromStoreAPI200Response;
      return this.apiClient.callApi(
        '/read-key-value', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the storeKeyValueGETAPI operation.
     * @callback module:api/StorageApi~storeKeyValueGETAPICallback
     * @param {String} error Error message, if any.
     * @param {module:model/StoreKeyValueGETAPI200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Store Key Value (GET) API
     * Store a value in the key-value store. The key-value store is a simple storage system that allows you to store and retrieve data using a key. The data is stored in the cloud and can be accessed from anywhere. You can use the key-value store to store any type of data, such as text or numbers. The key-value store is a great way to store data that you want to access from multiple devices or locations.
     * @param {String} key The key for which the value is stored (max length 255 characters).
     * @param {String} value The value that is supposed to be stored (max length 10,000 characters).
     * @param {module:api/StorageApi~storeKeyValueGETAPICallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/StoreKeyValueGETAPI200Response}
     */
    storeKeyValueGETAPI(key, value, callback) {
      let postBody = null;
      // verify the required parameter 'key' is set
      if (key === undefined || key === null) {
        throw new Error("Missing the required parameter 'key' when calling storeKeyValueGETAPI");
      }
      // verify the required parameter 'value' is set
      if (value === undefined || value === null) {
        throw new Error("Missing the required parameter 'value' when calling storeKeyValueGETAPI");
      }

      let pathParams = {
      };
      let queryParams = {
        'key': key,
        'value': value
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey', 'headerApiKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = StoreKeyValueGETAPI200Response;
      return this.apiClient.callApi(
        '/store-key-value', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}

/**
 * API League
 * API League is a Hub for World Class APIs.
 *
 * The version of the OpenAPI document: 1.6.4
 * Contact: mail@apileague.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ScoreTextAPI200ResponseInterestingness from './ScoreTextAPI200ResponseInterestingness';
import ScoreTextAPI200ResponseReadability from './ScoreTextAPI200ResponseReadability';
import ScoreTextAPI200ResponseSkimmability from './ScoreTextAPI200ResponseSkimmability';
import ScoreTextAPI200ResponseStyle from './ScoreTextAPI200ResponseStyle';

/**
 * The ScoreTextAPI200Response model module.
 * @module model/ScoreTextAPI200Response
 * @version 1.6.4
 */
class ScoreTextAPI200Response {
    /**
     * Constructs a new <code>ScoreTextAPI200Response</code>.
     * @alias module:model/ScoreTextAPI200Response
     */
    constructor() { 
        
        ScoreTextAPI200Response.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ScoreTextAPI200Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ScoreTextAPI200Response} obj Optional instance to populate.
     * @return {module:model/ScoreTextAPI200Response} The populated <code>ScoreTextAPI200Response</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ScoreTextAPI200Response();

            if (data.hasOwnProperty('number_of_words')) {
                obj['number_of_words'] = ApiClient.convertToType(data['number_of_words'], 'Number');
            }
            if (data.hasOwnProperty('number_of_sentences')) {
                obj['number_of_sentences'] = ApiClient.convertToType(data['number_of_sentences'], 'Number');
            }
            if (data.hasOwnProperty('readability')) {
                obj['readability'] = ScoreTextAPI200ResponseReadability.constructFromObject(data['readability']);
            }
            if (data.hasOwnProperty('skimmability')) {
                obj['skimmability'] = ScoreTextAPI200ResponseSkimmability.constructFromObject(data['skimmability']);
            }
            if (data.hasOwnProperty('interestingness')) {
                obj['interestingness'] = ScoreTextAPI200ResponseInterestingness.constructFromObject(data['interestingness']);
            }
            if (data.hasOwnProperty('style')) {
                obj['style'] = ScoreTextAPI200ResponseStyle.constructFromObject(data['style']);
            }
            if (data.hasOwnProperty('total_score')) {
                obj['total_score'] = ApiClient.convertToType(data['total_score'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ScoreTextAPI200Response</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ScoreTextAPI200Response</code>.
     */
    static validateJSON(data) {
        // validate the optional field `readability`
        if (data['readability']) { // data not null
          ScoreTextAPI200ResponseReadability.validateJSON(data['readability']);
        }
        // validate the optional field `skimmability`
        if (data['skimmability']) { // data not null
          ScoreTextAPI200ResponseSkimmability.validateJSON(data['skimmability']);
        }
        // validate the optional field `interestingness`
        if (data['interestingness']) { // data not null
          ScoreTextAPI200ResponseInterestingness.validateJSON(data['interestingness']);
        }
        // validate the optional field `style`
        if (data['style']) { // data not null
          ScoreTextAPI200ResponseStyle.validateJSON(data['style']);
        }

        return true;
    }


}



/**
 * @member {Number} number_of_words
 */
ScoreTextAPI200Response.prototype['number_of_words'] = undefined;

/**
 * @member {Number} number_of_sentences
 */
ScoreTextAPI200Response.prototype['number_of_sentences'] = undefined;

/**
 * @member {module:model/ScoreTextAPI200ResponseReadability} readability
 */
ScoreTextAPI200Response.prototype['readability'] = undefined;

/**
 * @member {module:model/ScoreTextAPI200ResponseSkimmability} skimmability
 */
ScoreTextAPI200Response.prototype['skimmability'] = undefined;

/**
 * @member {module:model/ScoreTextAPI200ResponseInterestingness} interestingness
 */
ScoreTextAPI200Response.prototype['interestingness'] = undefined;

/**
 * @member {module:model/ScoreTextAPI200ResponseStyle} style
 */
ScoreTextAPI200Response.prototype['style'] = undefined;

/**
 * @member {Number} total_score
 */
ScoreTextAPI200Response.prototype['total_score'] = undefined;






export default ScoreTextAPI200Response;


/**
 * API League
 * API League is a Hub for World Class APIs.
 *
 * The version of the OpenAPI document: 1.6.4
 * Contact: mail@apileague.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DetectSentimentAPI200ResponseDocument from './DetectSentimentAPI200ResponseDocument';
import DetectSentimentAPI200ResponseSentencesInner from './DetectSentimentAPI200ResponseSentencesInner';

/**
 * The DetectSentimentAPI200Response model module.
 * @module model/DetectSentimentAPI200Response
 * @version 1.6.4
 */
class DetectSentimentAPI200Response {
    /**
     * Constructs a new <code>DetectSentimentAPI200Response</code>.
     * @alias module:model/DetectSentimentAPI200Response
     */
    constructor() { 
        
        DetectSentimentAPI200Response.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DetectSentimentAPI200Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DetectSentimentAPI200Response} obj Optional instance to populate.
     * @return {module:model/DetectSentimentAPI200Response} The populated <code>DetectSentimentAPI200Response</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DetectSentimentAPI200Response();

            if (data.hasOwnProperty('document')) {
                obj['document'] = DetectSentimentAPI200ResponseDocument.constructFromObject(data['document']);
            }
            if (data.hasOwnProperty('sentences')) {
                obj['sentences'] = ApiClient.convertToType(data['sentences'], [DetectSentimentAPI200ResponseSentencesInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DetectSentimentAPI200Response</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DetectSentimentAPI200Response</code>.
     */
    static validateJSON(data) {
        // validate the optional field `document`
        if (data['document']) { // data not null
          DetectSentimentAPI200ResponseDocument.validateJSON(data['document']);
        }
        if (data['sentences']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['sentences'])) {
                throw new Error("Expected the field `sentences` to be an array in the JSON data but got " + data['sentences']);
            }
            // validate the optional field `sentences` (array)
            for (const item of data['sentences']) {
                DetectSentimentAPI200ResponseSentencesInner.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {module:model/DetectSentimentAPI200ResponseDocument} document
 */
DetectSentimentAPI200Response.prototype['document'] = undefined;

/**
 * @member {Array.<module:model/DetectSentimentAPI200ResponseSentencesInner>} sentences
 */
DetectSentimentAPI200Response.prototype['sentences'] = undefined;






export default DetectSentimentAPI200Response;


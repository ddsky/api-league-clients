/**
 * API League
 * API League is a Hub for World Class APIs.
 *
 * The version of the OpenAPI document: 1.6.4
 * Contact: mail@apileague.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SearchDrinksAPI200ResponseDrinksInnerInstructionsInnerStepsInnerIngredientsInner from './SearchDrinksAPI200ResponseDrinksInnerInstructionsInnerStepsInnerIngredientsInner';

/**
 * The RetrieveRecipeInformationAPI200ResponseInstructionsInnerStepsInner model module.
 * @module model/RetrieveRecipeInformationAPI200ResponseInstructionsInnerStepsInner
 * @version 1.6.4
 */
class RetrieveRecipeInformationAPI200ResponseInstructionsInnerStepsInner {
    /**
     * Constructs a new <code>RetrieveRecipeInformationAPI200ResponseInstructionsInnerStepsInner</code>.
     * @alias module:model/RetrieveRecipeInformationAPI200ResponseInstructionsInnerStepsInner
     */
    constructor() { 
        
        RetrieveRecipeInformationAPI200ResponseInstructionsInnerStepsInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RetrieveRecipeInformationAPI200ResponseInstructionsInnerStepsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RetrieveRecipeInformationAPI200ResponseInstructionsInnerStepsInner} obj Optional instance to populate.
     * @return {module:model/RetrieveRecipeInformationAPI200ResponseInstructionsInnerStepsInner} The populated <code>RetrieveRecipeInformationAPI200ResponseInstructionsInnerStepsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RetrieveRecipeInformationAPI200ResponseInstructionsInnerStepsInner();

            if (data.hasOwnProperty('number')) {
                obj['number'] = ApiClient.convertToType(data['number'], 'Number');
            }
            if (data.hasOwnProperty('ingredients')) {
                obj['ingredients'] = ApiClient.convertToType(data['ingredients'], [SearchDrinksAPI200ResponseDrinksInnerInstructionsInnerStepsInnerIngredientsInner]);
            }
            if (data.hasOwnProperty('equipment')) {
                obj['equipment'] = ApiClient.convertToType(data['equipment'], [SearchDrinksAPI200ResponseDrinksInnerInstructionsInnerStepsInnerIngredientsInner]);
            }
            if (data.hasOwnProperty('step')) {
                obj['step'] = ApiClient.convertToType(data['step'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RetrieveRecipeInformationAPI200ResponseInstructionsInnerStepsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RetrieveRecipeInformationAPI200ResponseInstructionsInnerStepsInner</code>.
     */
    static validateJSON(data) {
        if (data['ingredients']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['ingredients'])) {
                throw new Error("Expected the field `ingredients` to be an array in the JSON data but got " + data['ingredients']);
            }
            // validate the optional field `ingredients` (array)
            for (const item of data['ingredients']) {
                SearchDrinksAPI200ResponseDrinksInnerInstructionsInnerStepsInnerIngredientsInner.validateJSON(item);
            };
        }
        if (data['equipment']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['equipment'])) {
                throw new Error("Expected the field `equipment` to be an array in the JSON data but got " + data['equipment']);
            }
            // validate the optional field `equipment` (array)
            for (const item of data['equipment']) {
                SearchDrinksAPI200ResponseDrinksInnerInstructionsInnerStepsInnerIngredientsInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['step'] && !(typeof data['step'] === 'string' || data['step'] instanceof String)) {
            throw new Error("Expected the field `step` to be a primitive type in the JSON string but got " + data['step']);
        }

        return true;
    }


}



/**
 * @member {Number} number
 */
RetrieveRecipeInformationAPI200ResponseInstructionsInnerStepsInner.prototype['number'] = undefined;

/**
 * @member {Array.<module:model/SearchDrinksAPI200ResponseDrinksInnerInstructionsInnerStepsInnerIngredientsInner>} ingredients
 */
RetrieveRecipeInformationAPI200ResponseInstructionsInnerStepsInner.prototype['ingredients'] = undefined;

/**
 * @member {Array.<module:model/SearchDrinksAPI200ResponseDrinksInnerInstructionsInnerStepsInnerIngredientsInner>} equipment
 */
RetrieveRecipeInformationAPI200ResponseInstructionsInnerStepsInner.prototype['equipment'] = undefined;

/**
 * @member {String} step
 */
RetrieveRecipeInformationAPI200ResponseInstructionsInnerStepsInner.prototype['step'] = undefined;






export default RetrieveRecipeInformationAPI200ResponseInstructionsInnerStepsInner;


/**
 * API League
 * API League is a Hub for World Class APIs.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: mail@apileague.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import ConvertUnits200Response from './model/ConvertUnits200Response';
import CorrectSpelling200Response from './model/CorrectSpelling200Response';
import DetectLanguage200ResponseInner from './model/DetectLanguage200ResponseInner';
import DetectMainImageColor200ResponseInner from './model/DetectMainImageColor200ResponseInner';
import DetectSentiment200Response from './model/DetectSentiment200Response';
import DetectSentiment200ResponseDocument from './model/DetectSentiment200ResponseDocument';
import DetectSentiment200ResponseSentencesInner from './model/DetectSentiment200ResponseSentencesInner';
import ExtractAuthors200Response from './model/ExtractAuthors200Response';
import ExtractAuthors200ResponseAuthorsInner from './model/ExtractAuthors200ResponseAuthorsInner';
import ExtractContentFromAWebPage200Response from './model/ExtractContentFromAWebPage200Response';
import ExtractDates200Response from './model/ExtractDates200Response';
import ExtractDates200ResponseDatesInner from './model/ExtractDates200ResponseDatesInner';
import ExtractEntities200Response from './model/ExtractEntities200Response';
import ExtractEntities200ResponseEntitiesInner from './model/ExtractEntities200ResponseEntitiesInner';
import ExtractNews200Response from './model/ExtractNews200Response';
import ExtractPublishDate200Response from './model/ExtractPublishDate200Response';
import FindSimilarBooks200Response from './model/FindSimilarBooks200Response';
import GenerateNonsenseWord200Response from './model/GenerateNonsenseWord200Response';
import ListWordSynonyms200Response from './model/ListWordSynonyms200Response';
import PartOfSpeechTagging200Response from './model/PartOfSpeechTagging200Response';
import PluralizeWord200Response from './model/PluralizeWord200Response';
import RandomMeme200Response from './model/RandomMeme200Response';
import RandomPoem200Response from './model/RandomPoem200Response';
import RandomQuote200Response from './model/RandomQuote200Response';
import RandomTrivia200Response from './model/RandomTrivia200Response';
import ReadKeyValueFromStore200Response from './model/ReadKeyValueFromStore200Response';
import ScoreReadability200Response from './model/ScoreReadability200Response';
import ScoreText200Response from './model/ScoreText200Response';
import ScoreText200ResponseInterestingness from './model/ScoreText200ResponseInterestingness';
import ScoreText200ResponseInterestingnessSubscores from './model/ScoreText200ResponseInterestingnessSubscores';
import ScoreText200ResponseReadability from './model/ScoreText200ResponseReadability';
import ScoreText200ResponseReadabilityMainscores from './model/ScoreText200ResponseReadabilityMainscores';
import ScoreText200ResponseReadabilitySubscores from './model/ScoreText200ResponseReadabilitySubscores';
import ScoreText200ResponseSkimmability from './model/ScoreText200ResponseSkimmability';
import ScoreText200ResponseSkimmabilityMainscores from './model/ScoreText200ResponseSkimmabilityMainscores';
import ScoreText200ResponseSkimmabilitySubscores from './model/ScoreText200ResponseSkimmabilitySubscores';
import ScoreText200ResponseStyle from './model/ScoreText200ResponseStyle';
import ScoreText200ResponseStyleSubscores from './model/ScoreText200ResponseStyleSubscores';
import SearchBooks200Response from './model/SearchBooks200Response';
import SearchBooks200ResponseBooksInner from './model/SearchBooks200ResponseBooksInner';
import SearchGifs200Response from './model/SearchGifs200Response';
import SearchGifs200ResponseImagesInner from './model/SearchGifs200ResponseImagesInner';
import SearchJokes200Response from './model/SearchJokes200Response';
import SearchJokes200ResponseJokesInner from './model/SearchJokes200ResponseJokesInner';
import SearchMemes200Response from './model/SearchMemes200Response';
import SearchMemes200ResponseMemesInner from './model/SearchMemes200ResponseMemesInner';
import SearchNews200Response from './model/SearchNews200Response';
import SearchNews200ResponseNewsInner from './model/SearchNews200ResponseNewsInner';
import SearchRoyaltyFreeImages200Response from './model/SearchRoyaltyFreeImages200Response';
import SearchRoyaltyFreeImages200ResponseImagesInner from './model/SearchRoyaltyFreeImages200ResponseImagesInner';
import SearchRoyaltyFreeImages200ResponseImagesInnerLicense from './model/SearchRoyaltyFreeImages200ResponseImagesInnerLicense';
import SearchWeb200Response from './model/SearchWeb200Response';
import SearchWeb200ResponseResultsInner from './model/SearchWeb200ResponseResultsInner';
import SingularizeWord200Response from './model/SingularizeWord200Response';
import StoreKeyValueGET200Response from './model/StoreKeyValueGET200Response';
import TextStemming200Response from './model/TextStemming200Response';
import ArtApi from './api/ArtApi';
import BooksApi from './api/BooksApi';
import HumorApi from './api/HumorApi';
import KnowledgeApi from './api/KnowledgeApi';
import MathApi from './api/MathApi';
import MediaApi from './api/MediaApi';
import NewsApi from './api/NewsApi';
import StorageApi from './api/StorageApi';
import TextApi from './api/TextApi';
import WebApi from './api/WebApi';


/**
* API League is a Hub for World Class APIs..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var ApiLeague = require('index'); // See note below*.
* var xxxSvc = new ApiLeague.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new ApiLeague.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new ApiLeague.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new ApiLeague.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The ConvertUnits200Response model constructor.
     * @property {module:model/ConvertUnits200Response}
     */
    ConvertUnits200Response,

    /**
     * The CorrectSpelling200Response model constructor.
     * @property {module:model/CorrectSpelling200Response}
     */
    CorrectSpelling200Response,

    /**
     * The DetectLanguage200ResponseInner model constructor.
     * @property {module:model/DetectLanguage200ResponseInner}
     */
    DetectLanguage200ResponseInner,

    /**
     * The DetectMainImageColor200ResponseInner model constructor.
     * @property {module:model/DetectMainImageColor200ResponseInner}
     */
    DetectMainImageColor200ResponseInner,

    /**
     * The DetectSentiment200Response model constructor.
     * @property {module:model/DetectSentiment200Response}
     */
    DetectSentiment200Response,

    /**
     * The DetectSentiment200ResponseDocument model constructor.
     * @property {module:model/DetectSentiment200ResponseDocument}
     */
    DetectSentiment200ResponseDocument,

    /**
     * The DetectSentiment200ResponseSentencesInner model constructor.
     * @property {module:model/DetectSentiment200ResponseSentencesInner}
     */
    DetectSentiment200ResponseSentencesInner,

    /**
     * The ExtractAuthors200Response model constructor.
     * @property {module:model/ExtractAuthors200Response}
     */
    ExtractAuthors200Response,

    /**
     * The ExtractAuthors200ResponseAuthorsInner model constructor.
     * @property {module:model/ExtractAuthors200ResponseAuthorsInner}
     */
    ExtractAuthors200ResponseAuthorsInner,

    /**
     * The ExtractContentFromAWebPage200Response model constructor.
     * @property {module:model/ExtractContentFromAWebPage200Response}
     */
    ExtractContentFromAWebPage200Response,

    /**
     * The ExtractDates200Response model constructor.
     * @property {module:model/ExtractDates200Response}
     */
    ExtractDates200Response,

    /**
     * The ExtractDates200ResponseDatesInner model constructor.
     * @property {module:model/ExtractDates200ResponseDatesInner}
     */
    ExtractDates200ResponseDatesInner,

    /**
     * The ExtractEntities200Response model constructor.
     * @property {module:model/ExtractEntities200Response}
     */
    ExtractEntities200Response,

    /**
     * The ExtractEntities200ResponseEntitiesInner model constructor.
     * @property {module:model/ExtractEntities200ResponseEntitiesInner}
     */
    ExtractEntities200ResponseEntitiesInner,

    /**
     * The ExtractNews200Response model constructor.
     * @property {module:model/ExtractNews200Response}
     */
    ExtractNews200Response,

    /**
     * The ExtractPublishDate200Response model constructor.
     * @property {module:model/ExtractPublishDate200Response}
     */
    ExtractPublishDate200Response,

    /**
     * The FindSimilarBooks200Response model constructor.
     * @property {module:model/FindSimilarBooks200Response}
     */
    FindSimilarBooks200Response,

    /**
     * The GenerateNonsenseWord200Response model constructor.
     * @property {module:model/GenerateNonsenseWord200Response}
     */
    GenerateNonsenseWord200Response,

    /**
     * The ListWordSynonyms200Response model constructor.
     * @property {module:model/ListWordSynonyms200Response}
     */
    ListWordSynonyms200Response,

    /**
     * The PartOfSpeechTagging200Response model constructor.
     * @property {module:model/PartOfSpeechTagging200Response}
     */
    PartOfSpeechTagging200Response,

    /**
     * The PluralizeWord200Response model constructor.
     * @property {module:model/PluralizeWord200Response}
     */
    PluralizeWord200Response,

    /**
     * The RandomMeme200Response model constructor.
     * @property {module:model/RandomMeme200Response}
     */
    RandomMeme200Response,

    /**
     * The RandomPoem200Response model constructor.
     * @property {module:model/RandomPoem200Response}
     */
    RandomPoem200Response,

    /**
     * The RandomQuote200Response model constructor.
     * @property {module:model/RandomQuote200Response}
     */
    RandomQuote200Response,

    /**
     * The RandomTrivia200Response model constructor.
     * @property {module:model/RandomTrivia200Response}
     */
    RandomTrivia200Response,

    /**
     * The ReadKeyValueFromStore200Response model constructor.
     * @property {module:model/ReadKeyValueFromStore200Response}
     */
    ReadKeyValueFromStore200Response,

    /**
     * The ScoreReadability200Response model constructor.
     * @property {module:model/ScoreReadability200Response}
     */
    ScoreReadability200Response,

    /**
     * The ScoreText200Response model constructor.
     * @property {module:model/ScoreText200Response}
     */
    ScoreText200Response,

    /**
     * The ScoreText200ResponseInterestingness model constructor.
     * @property {module:model/ScoreText200ResponseInterestingness}
     */
    ScoreText200ResponseInterestingness,

    /**
     * The ScoreText200ResponseInterestingnessSubscores model constructor.
     * @property {module:model/ScoreText200ResponseInterestingnessSubscores}
     */
    ScoreText200ResponseInterestingnessSubscores,

    /**
     * The ScoreText200ResponseReadability model constructor.
     * @property {module:model/ScoreText200ResponseReadability}
     */
    ScoreText200ResponseReadability,

    /**
     * The ScoreText200ResponseReadabilityMainscores model constructor.
     * @property {module:model/ScoreText200ResponseReadabilityMainscores}
     */
    ScoreText200ResponseReadabilityMainscores,

    /**
     * The ScoreText200ResponseReadabilitySubscores model constructor.
     * @property {module:model/ScoreText200ResponseReadabilitySubscores}
     */
    ScoreText200ResponseReadabilitySubscores,

    /**
     * The ScoreText200ResponseSkimmability model constructor.
     * @property {module:model/ScoreText200ResponseSkimmability}
     */
    ScoreText200ResponseSkimmability,

    /**
     * The ScoreText200ResponseSkimmabilityMainscores model constructor.
     * @property {module:model/ScoreText200ResponseSkimmabilityMainscores}
     */
    ScoreText200ResponseSkimmabilityMainscores,

    /**
     * The ScoreText200ResponseSkimmabilitySubscores model constructor.
     * @property {module:model/ScoreText200ResponseSkimmabilitySubscores}
     */
    ScoreText200ResponseSkimmabilitySubscores,

    /**
     * The ScoreText200ResponseStyle model constructor.
     * @property {module:model/ScoreText200ResponseStyle}
     */
    ScoreText200ResponseStyle,

    /**
     * The ScoreText200ResponseStyleSubscores model constructor.
     * @property {module:model/ScoreText200ResponseStyleSubscores}
     */
    ScoreText200ResponseStyleSubscores,

    /**
     * The SearchBooks200Response model constructor.
     * @property {module:model/SearchBooks200Response}
     */
    SearchBooks200Response,

    /**
     * The SearchBooks200ResponseBooksInner model constructor.
     * @property {module:model/SearchBooks200ResponseBooksInner}
     */
    SearchBooks200ResponseBooksInner,

    /**
     * The SearchGifs200Response model constructor.
     * @property {module:model/SearchGifs200Response}
     */
    SearchGifs200Response,

    /**
     * The SearchGifs200ResponseImagesInner model constructor.
     * @property {module:model/SearchGifs200ResponseImagesInner}
     */
    SearchGifs200ResponseImagesInner,

    /**
     * The SearchJokes200Response model constructor.
     * @property {module:model/SearchJokes200Response}
     */
    SearchJokes200Response,

    /**
     * The SearchJokes200ResponseJokesInner model constructor.
     * @property {module:model/SearchJokes200ResponseJokesInner}
     */
    SearchJokes200ResponseJokesInner,

    /**
     * The SearchMemes200Response model constructor.
     * @property {module:model/SearchMemes200Response}
     */
    SearchMemes200Response,

    /**
     * The SearchMemes200ResponseMemesInner model constructor.
     * @property {module:model/SearchMemes200ResponseMemesInner}
     */
    SearchMemes200ResponseMemesInner,

    /**
     * The SearchNews200Response model constructor.
     * @property {module:model/SearchNews200Response}
     */
    SearchNews200Response,

    /**
     * The SearchNews200ResponseNewsInner model constructor.
     * @property {module:model/SearchNews200ResponseNewsInner}
     */
    SearchNews200ResponseNewsInner,

    /**
     * The SearchRoyaltyFreeImages200Response model constructor.
     * @property {module:model/SearchRoyaltyFreeImages200Response}
     */
    SearchRoyaltyFreeImages200Response,

    /**
     * The SearchRoyaltyFreeImages200ResponseImagesInner model constructor.
     * @property {module:model/SearchRoyaltyFreeImages200ResponseImagesInner}
     */
    SearchRoyaltyFreeImages200ResponseImagesInner,

    /**
     * The SearchRoyaltyFreeImages200ResponseImagesInnerLicense model constructor.
     * @property {module:model/SearchRoyaltyFreeImages200ResponseImagesInnerLicense}
     */
    SearchRoyaltyFreeImages200ResponseImagesInnerLicense,

    /**
     * The SearchWeb200Response model constructor.
     * @property {module:model/SearchWeb200Response}
     */
    SearchWeb200Response,

    /**
     * The SearchWeb200ResponseResultsInner model constructor.
     * @property {module:model/SearchWeb200ResponseResultsInner}
     */
    SearchWeb200ResponseResultsInner,

    /**
     * The SingularizeWord200Response model constructor.
     * @property {module:model/SingularizeWord200Response}
     */
    SingularizeWord200Response,

    /**
     * The StoreKeyValueGET200Response model constructor.
     * @property {module:model/StoreKeyValueGET200Response}
     */
    StoreKeyValueGET200Response,

    /**
     * The TextStemming200Response model constructor.
     * @property {module:model/TextStemming200Response}
     */
    TextStemming200Response,

    /**
    * The ArtApi service constructor.
    * @property {module:api/ArtApi}
    */
    ArtApi,

    /**
    * The BooksApi service constructor.
    * @property {module:api/BooksApi}
    */
    BooksApi,

    /**
    * The HumorApi service constructor.
    * @property {module:api/HumorApi}
    */
    HumorApi,

    /**
    * The KnowledgeApi service constructor.
    * @property {module:api/KnowledgeApi}
    */
    KnowledgeApi,

    /**
    * The MathApi service constructor.
    * @property {module:api/MathApi}
    */
    MathApi,

    /**
    * The MediaApi service constructor.
    * @property {module:api/MediaApi}
    */
    MediaApi,

    /**
    * The NewsApi service constructor.
    * @property {module:api/NewsApi}
    */
    NewsApi,

    /**
    * The StorageApi service constructor.
    * @property {module:api/StorageApi}
    */
    StorageApi,

    /**
    * The TextApi service constructor.
    * @property {module:api/TextApi}
    */
    TextApi,

    /**
    * The WebApi service constructor.
    * @property {module:api/WebApi}
    */
    WebApi
};

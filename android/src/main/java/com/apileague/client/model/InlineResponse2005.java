/**
 * API League
 * API League is a Hub for World Class APIs.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: mail@apileague.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.apileague.client.model;

import com.apileague.client.model.InlineResponse2005Memes;
import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class InlineResponse2005 {
  
  @SerializedName("memes")
  private List<InlineResponse2005Memes> memes = null;
  @SerializedName("available")
  private Integer available = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public List<InlineResponse2005Memes> getMemes() {
    return memes;
  }
  public void setMemes(List<InlineResponse2005Memes> memes) {
    this.memes = memes;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Integer getAvailable() {
    return available;
  }
  public void setAvailable(Integer available) {
    this.available = available;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2005 inlineResponse2005 = (InlineResponse2005) o;
    return (this.memes == null ? inlineResponse2005.memes == null : this.memes.equals(inlineResponse2005.memes)) &&
        (this.available == null ? inlineResponse2005.available == null : this.available.equals(inlineResponse2005.available));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.memes == null ? 0: this.memes.hashCode());
    result = 31 * result + (this.available == null ? 0: this.available.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2005 {\n");
    
    sb.append("  memes: ").append(memes).append("\n");
    sb.append("  available: ").append(available).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}

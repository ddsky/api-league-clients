/**
 * API League
 * API League is a Hub for World Class APIs.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: mail@apileague.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.apileague.client.model;

import java.math.BigDecimal;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class InlineResponse20017 {
  
  @SerializedName("language")
  private String language = null;
  @SerializedName("confidence")
  private BigDecimal confidence = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public String getLanguage() {
    return language;
  }
  public void setLanguage(String language) {
    this.language = language;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getConfidence() {
    return confidence;
  }
  public void setConfidence(BigDecimal confidence) {
    this.confidence = confidence;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse20017 inlineResponse20017 = (InlineResponse20017) o;
    return (this.language == null ? inlineResponse20017.language == null : this.language.equals(inlineResponse20017.language)) &&
        (this.confidence == null ? inlineResponse20017.confidence == null : this.confidence.equals(inlineResponse20017.confidence));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.language == null ? 0: this.language.hashCode());
    result = 31 * result + (this.confidence == null ? 0: this.confidence.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse20017 {\n");
    
    sb.append("  language: ").append(language).append("\n");
    sb.append("  confidence: ").append(confidence).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}

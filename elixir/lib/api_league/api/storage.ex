# NOTE: This file is auto generated by OpenAPI Generator 7.8.0-SNAPSHOT (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule APILeague.Api.Storage do
  @moduledoc """
  API calls for all endpoints tagged `Storage`.
  """

  alias APILeague.Connection
  import APILeague.RequestBuilder

  @doc """
  Read Key Value from Store API
  Read a value from the key-value store. The key-value store is a simple storage system that allows you to store and retrieve data using a key. The data is stored in the cloud and can be accessed from anywhere. You can use the key-value store to store any type of data, such as text or numbers. The key-value store is a great way to store data that you want to access from multiple devices or locations.

  ### Parameters

  - `connection` (APILeague.Connection): Connection to server
  - `key` (String.t): The key for which the value is stored (max length 255 characters).
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, APILeague.Model.ReadKeyValueFromStoreApi200Response.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec read_key_value_from_store_api(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:ok, APILeague.Model.ReadKeyValueFromStoreApi200Response.t} | {:error, Tesla.Env.t}
  def read_key_value_from_store_api(connection, key, _opts \\ []) do
    request =
      %{}
      |> method(:get)
      |> url("/read-key-value")
      |> add_param(:query, :key, key)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, APILeague.Model.ReadKeyValueFromStoreApi200Response},
      {401, false},
      {402, false},
      {403, false},
      {404, false},
      {406, false},
      {429, false}
    ])
  end

  @doc """
  Store Key Value (GET) API
  Store a value in the key-value store. The key-value store is a simple storage system that allows you to store and retrieve data using a key. The data is stored in the cloud and can be accessed from anywhere. You can use the key-value store to store any type of data, such as text or numbers. The key-value store is a great way to store data that you want to access from multiple devices or locations.

  ### Parameters

  - `connection` (APILeague.Connection): Connection to server
  - `key` (String.t): The key for which the value is stored (max length 255 characters).
  - `value` (String.t): The value that is supposed to be stored (max length 10,000 characters).
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, APILeague.Model.StoreKeyValueGetapi200Response.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec store_key_value_getapi(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:ok, APILeague.Model.StoreKeyValueGetapi200Response.t} | {:error, Tesla.Env.t}
  def store_key_value_getapi(connection, key, value, _opts \\ []) do
    request =
      %{}
      |> method(:get)
      |> url("/store-key-value")
      |> add_param(:query, :key, key)
      |> add_param(:query, :value, value)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, APILeague.Model.StoreKeyValueGetapi200Response},
      {401, false},
      {402, false},
      {403, false},
      {404, false},
      {406, false},
      {429, false}
    ])
  end
end

# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule com.apileague.client.Api.Knowledge do
  @moduledoc """
  API calls for all endpoints tagged `Knowledge`.
  """

  alias com.apileague.client.Connection
  import com.apileague.client.RequestBuilder


  @doc """
  Random Quote
  This API returns a random quote from a collection of quotes. The quotes are from famous people and are in English.

  ## Parameters

  - connection (com.apileague.client.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters
    - :min_length (integer()): The minimum length of the quote in letters.
    - :max_length (integer()): The maximum length of the quote in letters.
  ## Returns

  {:ok, com.apileague.client.Model.InlineResponse20010.t} on success
  {:error, Tesla.Env.t} on failure
  """
  @spec random_quote(Tesla.Env.client, keyword()) :: {:ok, nil} | {:ok, com.apileague.client.Model.InlineResponse20010.t} | {:error, Tesla.Env.t}
  def random_quote(connection, opts \\ []) do
    optional_params = %{
      :"min-length" => :query,
      :"max-length" => :query
    }
    %{}
    |> method(:get)
    |> url("/retrieve-random-quote")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      { 200, %com.apileague.client.Model.InlineResponse20010{}},
      { 401, false},
      { 402, false},
      { 403, false},
      { 404, false},
      { 406, false},
      { 429, false}
    ])
  end

  @doc """
  Random Trivia
  This endpoint returns a random piece of trivia.

  ## Parameters

  - connection (com.apileague.client.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters
    - :max_length (integer()): The maximum length of the trivia in letters.
  ## Returns

  {:ok, com.apileague.client.Model.InlineResponse2009.t} on success
  {:error, Tesla.Env.t} on failure
  """
  @spec random_trivia(Tesla.Env.client, keyword()) :: {:ok, nil} | {:ok, com.apileague.client.Model.InlineResponse2009.t} | {:error, Tesla.Env.t}
  def random_trivia(connection, opts \\ []) do
    optional_params = %{
      :"max-length" => :query
    }
    %{}
    |> method(:get)
    |> url("/retrieve-random-trivia")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      { 200, %com.apileague.client.Model.InlineResponse2009{}},
      { 401, false},
      { 402, false},
      { 403, false},
      { 404, false},
      { 406, false},
      { 429, false}
    ])
  end
end

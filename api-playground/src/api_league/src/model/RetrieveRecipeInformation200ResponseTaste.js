/**
 * API League
 * API League is a Hub for World Class APIs.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: mail@apileague.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RetrieveRecipeInformation200ResponseTaste model module.
 * @module model/RetrieveRecipeInformation200ResponseTaste
 * @version 1.0.0
 */
class RetrieveRecipeInformation200ResponseTaste {
    /**
     * Constructs a new <code>RetrieveRecipeInformation200ResponseTaste</code>.
     * @alias module:model/RetrieveRecipeInformation200ResponseTaste
     */
    constructor() { 
        
        RetrieveRecipeInformation200ResponseTaste.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RetrieveRecipeInformation200ResponseTaste</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RetrieveRecipeInformation200ResponseTaste} obj Optional instance to populate.
     * @return {module:model/RetrieveRecipeInformation200ResponseTaste} The populated <code>RetrieveRecipeInformation200ResponseTaste</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RetrieveRecipeInformation200ResponseTaste();

            if (data.hasOwnProperty('fattiness')) {
                obj['fattiness'] = ApiClient.convertToType(data['fattiness'], 'Number');
            }
            if (data.hasOwnProperty('spiciness')) {
                obj['spiciness'] = ApiClient.convertToType(data['spiciness'], 'Number');
            }
            if (data.hasOwnProperty('saltiness')) {
                obj['saltiness'] = ApiClient.convertToType(data['saltiness'], 'Number');
            }
            if (data.hasOwnProperty('bitterness')) {
                obj['bitterness'] = ApiClient.convertToType(data['bitterness'], 'Number');
            }
            if (data.hasOwnProperty('savoriness')) {
                obj['savoriness'] = ApiClient.convertToType(data['savoriness'], 'Number');
            }
            if (data.hasOwnProperty('sweetness')) {
                obj['sweetness'] = ApiClient.convertToType(data['sweetness'], 'Number');
            }
            if (data.hasOwnProperty('sourness')) {
                obj['sourness'] = ApiClient.convertToType(data['sourness'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RetrieveRecipeInformation200ResponseTaste</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RetrieveRecipeInformation200ResponseTaste</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * @member {Number} fattiness
 */
RetrieveRecipeInformation200ResponseTaste.prototype['fattiness'] = undefined;

/**
 * @member {Number} spiciness
 */
RetrieveRecipeInformation200ResponseTaste.prototype['spiciness'] = undefined;

/**
 * @member {Number} saltiness
 */
RetrieveRecipeInformation200ResponseTaste.prototype['saltiness'] = undefined;

/**
 * @member {Number} bitterness
 */
RetrieveRecipeInformation200ResponseTaste.prototype['bitterness'] = undefined;

/**
 * @member {Number} savoriness
 */
RetrieveRecipeInformation200ResponseTaste.prototype['savoriness'] = undefined;

/**
 * @member {Number} sweetness
 */
RetrieveRecipeInformation200ResponseTaste.prototype['sweetness'] = undefined;

/**
 * @member {Number} sourness
 */
RetrieveRecipeInformation200ResponseTaste.prototype['sourness'] = undefined;






export default RetrieveRecipeInformation200ResponseTaste;


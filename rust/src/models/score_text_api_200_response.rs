/*
 * API League
 *
 * API League is a Hub for World Class APIs.
 *
 * The version of the OpenAPI document: 1.6.4
 * Contact: mail@apileague.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ScoreTextApi200Response {
    #[serde(rename = "number_of_words", skip_serializing_if = "Option::is_none")]
    pub number_of_words: Option<i32>,
    #[serde(rename = "number_of_sentences", skip_serializing_if = "Option::is_none")]
    pub number_of_sentences: Option<i32>,
    #[serde(rename = "readability", skip_serializing_if = "Option::is_none")]
    pub readability: Option<Box<models::ScoreTextApi200ResponseReadability>>,
    #[serde(rename = "skimmability", skip_serializing_if = "Option::is_none")]
    pub skimmability: Option<Box<models::ScoreTextApi200ResponseSkimmability>>,
    #[serde(rename = "interestingness", skip_serializing_if = "Option::is_none")]
    pub interestingness: Option<Box<models::ScoreTextApi200ResponseInterestingness>>,
    #[serde(rename = "style", skip_serializing_if = "Option::is_none")]
    pub style: Option<Box<models::ScoreTextApi200ResponseStyle>>,
    #[serde(rename = "total_score", skip_serializing_if = "Option::is_none")]
    pub total_score: Option<f64>,
}

impl ScoreTextApi200Response {
    pub fn new() -> ScoreTextApi200Response {
        ScoreTextApi200Response {
            number_of_words: None,
            number_of_sentences: None,
            readability: None,
            skimmability: None,
            interestingness: None,
            style: None,
            total_score: None,
        }
    }
}


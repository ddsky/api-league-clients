/*
 * API League
 *
 * API League is a Hub for World Class APIs.
 *
 * The version of the OpenAPI document: 1.6.4
 * Contact: mail@apileague.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SearchMemesApi200Response {
    #[serde(rename = "memes", skip_serializing_if = "Option::is_none")]
    pub memes: Option<Vec<models::SearchMemesApi200ResponseMemesInner>>,
    #[serde(rename = "available", skip_serializing_if = "Option::is_none")]
    pub available: Option<i32>,
}

impl SearchMemesApi200Response {
    pub fn new() -> SearchMemesApi200Response {
        SearchMemesApi200Response {
            memes: None,
            available: None,
        }
    }
}


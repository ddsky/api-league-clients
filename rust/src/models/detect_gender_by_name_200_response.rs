/*
 * API League
 *
 * API League is a Hub for World Class APIs.
 *
 * The version of the OpenAPI document: 1.4.2
 * Contact: mail@apileague.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DetectGenderByName200Response {
    #[serde(rename = "name", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub name: Option<Option<String>>,
    #[serde(rename = "probability_male", skip_serializing_if = "Option::is_none")]
    pub probability_male: Option<f64>,
}

impl DetectGenderByName200Response {
    pub fn new() -> DetectGenderByName200Response {
        DetectGenderByName200Response {
            name: None,
            probability_male: None,
        }
    }
}


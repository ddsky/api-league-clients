/*
 * API League
 *
 * API League is a Hub for World Class APIs.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: mail@apileague.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DetectMainImageColor200ResponseInner {
    #[serde(rename = "specific_color", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub specific_color: Option<Option<String>>,
    #[serde(rename = "main_color", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub main_color: Option<Option<String>>,
    #[serde(rename = "hex_code", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub hex_code: Option<Option<String>>,
}

impl DetectMainImageColor200ResponseInner {
    pub fn new() -> DetectMainImageColor200ResponseInner {
        DetectMainImageColor200ResponseInner {
            specific_color: None,
            main_color: None,
            hex_code: None,
        }
    }
}


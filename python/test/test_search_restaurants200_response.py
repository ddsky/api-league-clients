# coding: utf-8

"""
    API League

    API League is a Hub for World Class APIs.

    The version of the OpenAPI document: 1.4.0
    Contact: mail@apileague.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from apileague.models.search_restaurants200_response import SearchRestaurants200Response

class TestSearchRestaurants200Response(unittest.TestCase):
    """SearchRestaurants200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SearchRestaurants200Response:
        """Test SearchRestaurants200Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SearchRestaurants200Response`
        """
        model = SearchRestaurants200Response()
        if include_optional:
            return SearchRestaurants200Response(
                restaurants = [
                    apileague.models.search_restaurants_200_response_restaurants_inner.searchRestaurants_200_response_restaurants_inner(
                        offers_third_party_delivery = True, 
                        address = apileague.models.search_restaurants_200_response_restaurants_inner_address.searchRestaurants_200_response_restaurants_inner_address(
                            zipcode = '', 
                            country = '', 
                            city = '', 
                            latitude = 1.337, 
                            lon = 1.337, 
                            street_addr_2 = '', 
                            state = '', 
                            street_addr = '', 
                            lat = 1.337, 
                            longitude = 1.337, ), 
                        supports_upc_codes = True, 
                        is_open = True, 
                        description = '', 
                        weighted_rating_value = 56, 
                        type = '', 
                        offers_first_party_delivery = True, 
                        aggregated_rating_count = 56, 
                        pickup_enabled = True, 
                        cuisines = [
                            ''
                            ], 
                        miles = 1.337, 
                        dollar_signs = 56, 
                        delivery_enabled = True, 
                        name = '', 
                        phone_number = 1.337, 
                        _id = '', 
                        local_hours = apileague.models.search_restaurants_200_response_restaurants_inner_local_hours.searchRestaurants_200_response_restaurants_inner_local_hours(
                            operational = apileague.models.search_restaurants_200_response_restaurants_inner_local_hours_operational.searchRestaurants_200_response_restaurants_inner_local_hours_operational(
                                sunday = '', 
                                saturday = '', 
                                tuesday = '', 
                                thursday = '', 
                                friday = '', 
                                wednesday = '', 
                                monday = '', ), 
                            delivery = apileague.models.search_restaurants_200_response_restaurants_inner_local_hours_operational.searchRestaurants_200_response_restaurants_inner_local_hours_operational(
                                sunday = '', 
                                saturday = '', 
                                tuesday = '', 
                                thursday = '', 
                                friday = '', 
                                wednesday = '', 
                                monday = '', ), 
                            pickup = , 
                            dine_in = , ), )
                    ]
            )
        else:
            return SearchRestaurants200Response(
        )
        """

    def testSearchRestaurants200Response(self):
        """Test SearchRestaurants200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

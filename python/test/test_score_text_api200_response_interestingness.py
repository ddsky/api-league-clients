# coding: utf-8

"""
    API League

    API League is a Hub for World Class APIs.

    The version of the OpenAPI document: 1.6.4
    Contact: mail@apileague.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from apileague.models.score_text_api200_response_interestingness import ScoreTextAPI200ResponseInterestingness

class TestScoreTextAPI200ResponseInterestingness(unittest.TestCase):
    """ScoreTextAPI200ResponseInterestingness unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ScoreTextAPI200ResponseInterestingness:
        """Test ScoreTextAPI200ResponseInterestingness
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ScoreTextAPI200ResponseInterestingness`
        """
        model = ScoreTextAPI200ResponseInterestingness()
        if include_optional:
            return ScoreTextAPI200ResponseInterestingness(
                mainscores = apileague.models.score_text_api_200_response_skimmability_mainscores.scoreTextAPI_200_response_skimmability_mainscores(
                    total_possible = 56, 
                    total = 1.337, ),
                subscores = apileague.models.score_text_api_200_response_interestingness_subscores.scoreTextAPI_200_response_interestingness_subscores(
                    title_rating_score = [
                        56
                        ], 
                    quote_score = [
                        56
                        ], 
                    length_score = [
                        56
                        ], 
                    link_score = [
                        56
                        ], 
                    google_hits_score = [
                        56
                        ], )
            )
        else:
            return ScoreTextAPI200ResponseInterestingness(
        )
        """

    def testScoreTextAPI200ResponseInterestingness(self):
        """Test ScoreTextAPI200ResponseInterestingness"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

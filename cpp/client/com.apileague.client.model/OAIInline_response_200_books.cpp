/**
 * API League
 * API League is a Hub for World Class APIs.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: mail@apileague.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInline_response_200_books.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInline_response_200_books::OAIInline_response_200_books(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInline_response_200_books::OAIInline_response_200_books() {
    this->initializeModel();
}

OAIInline_response_200_books::~OAIInline_response_200_books() {}

void OAIInline_response_200_books::initializeModel() {

    m_title_isSet = false;
    m_title_isValid = false;

    m_image_isSet = false;
    m_image_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;
}

void OAIInline_response_200_books::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInline_response_200_books::fromJsonObject(QJsonObject json) {

    m_title_isValid = ::OpenAPI::fromJsonValue(title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;

    m_image_isValid = ::OpenAPI::fromJsonValue(image, json[QString("image")]);
    m_image_isSet = !json[QString("image")].isNull() && m_image_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;
}

QString OAIInline_response_200_books::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInline_response_200_books::asJsonObject() const {
    QJsonObject obj;
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(title));
    }
    if (m_image_isSet) {
        obj.insert(QString("image"), ::OpenAPI::toJsonValue(image));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(id));
    }
    return obj;
}

QString OAIInline_response_200_books::getTitle() const {
    return title;
}
void OAIInline_response_200_books::setTitle(const QString &title) {
    this->title = title;
    this->m_title_isSet = true;
}

bool OAIInline_response_200_books::is_title_Set() const{
    return m_title_isSet;
}

bool OAIInline_response_200_books::is_title_Valid() const{
    return m_title_isValid;
}

QString OAIInline_response_200_books::getImage() const {
    return image;
}
void OAIInline_response_200_books::setImage(const QString &image) {
    this->image = image;
    this->m_image_isSet = true;
}

bool OAIInline_response_200_books::is_image_Set() const{
    return m_image_isSet;
}

bool OAIInline_response_200_books::is_image_Valid() const{
    return m_image_isValid;
}

qint32 OAIInline_response_200_books::getId() const {
    return id;
}
void OAIInline_response_200_books::setId(const qint32 &id) {
    this->id = id;
    this->m_id_isSet = true;
}

bool OAIInline_response_200_books::is_id_Set() const{
    return m_id_isSet;
}

bool OAIInline_response_200_books::is_id_Valid() const{
    return m_id_isValid;
}

bool OAIInline_response_200_books::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_image_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInline_response_200_books::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI

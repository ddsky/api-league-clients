/**
 * API League
 * API League is a Hub for World Class APIs.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: mail@apileague.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInline_response_200_14_authors.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInline_response_200_14_authors::OAIInline_response_200_14_authors(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInline_response_200_14_authors::OAIInline_response_200_14_authors() {
    this->initializeModel();
}

OAIInline_response_200_14_authors::~OAIInline_response_200_14_authors() {}

void OAIInline_response_200_14_authors::initializeModel() {

    m_link_isSet = false;
    m_link_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIInline_response_200_14_authors::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInline_response_200_14_authors::fromJsonObject(QJsonObject json) {

    m_link_isValid = ::OpenAPI::fromJsonValue(link, json[QString("link")]);
    m_link_isSet = !json[QString("link")].isNull() && m_link_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIInline_response_200_14_authors::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInline_response_200_14_authors::asJsonObject() const {
    QJsonObject obj;
    if (m_link_isSet) {
        obj.insert(QString("link"), ::OpenAPI::toJsonValue(link));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(name));
    }
    return obj;
}

QString OAIInline_response_200_14_authors::getLink() const {
    return link;
}
void OAIInline_response_200_14_authors::setLink(const QString &link) {
    this->link = link;
    this->m_link_isSet = true;
}

bool OAIInline_response_200_14_authors::is_link_Set() const{
    return m_link_isSet;
}

bool OAIInline_response_200_14_authors::is_link_Valid() const{
    return m_link_isValid;
}

QString OAIInline_response_200_14_authors::getName() const {
    return name;
}
void OAIInline_response_200_14_authors::setName(const QString &name) {
    this->name = name;
    this->m_name_isSet = true;
}

bool OAIInline_response_200_14_authors::is_name_Set() const{
    return m_name_isSet;
}

bool OAIInline_response_200_14_authors::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIInline_response_200_14_authors::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_link_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInline_response_200_14_authors::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI

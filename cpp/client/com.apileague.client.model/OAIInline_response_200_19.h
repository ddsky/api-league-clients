/**
 * API League
 * API League is a Hub for World Class APIs.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: mail@apileague.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInline_response_200_19.h
 *
 * 
 */

#ifndef OAIInline_response_200_19_H
#define OAIInline_response_200_19_H

#include <QJsonObject>

#include "com.apileague.client.model\OAIInline_response_200_19_interestingness.h"
#include "com.apileague.client.model\OAIInline_response_200_19_readability.h"
#include "com.apileague.client.model\OAIInline_response_200_19_skimmability.h"
#include "com.apileague.client.model\OAIInline_response_200_19_style.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIInline_response_200_19 : public OAIObject {
public:
    OAIInline_response_200_19();
    OAIInline_response_200_19(QString json);
    ~OAIInline_response_200_19() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getNumberOfWords() const;
    void setNumberOfWords(const qint32 &number_of_words);
    bool is_number_of_words_Set() const;
    bool is_number_of_words_Valid() const;

    qint32 getNumberOfSentences() const;
    void setNumberOfSentences(const qint32 &number_of_sentences);
    bool is_number_of_sentences_Set() const;
    bool is_number_of_sentences_Valid() const;

    OAIInline_response_200_19_readability getReadability() const;
    void setReadability(const OAIInline_response_200_19_readability &readability);
    bool is_readability_Set() const;
    bool is_readability_Valid() const;

    OAIInline_response_200_19_skimmability getSkimmability() const;
    void setSkimmability(const OAIInline_response_200_19_skimmability &skimmability);
    bool is_skimmability_Set() const;
    bool is_skimmability_Valid() const;

    OAIInline_response_200_19_interestingness getInterestingness() const;
    void setInterestingness(const OAIInline_response_200_19_interestingness &interestingness);
    bool is_interestingness_Set() const;
    bool is_interestingness_Valid() const;

    OAIInline_response_200_19_style getStyle() const;
    void setStyle(const OAIInline_response_200_19_style &style);
    bool is_style_Set() const;
    bool is_style_Valid() const;

    double getTotalScore() const;
    void setTotalScore(const double &total_score);
    bool is_total_score_Set() const;
    bool is_total_score_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 number_of_words;
    bool m_number_of_words_isSet;
    bool m_number_of_words_isValid;

    qint32 number_of_sentences;
    bool m_number_of_sentences_isSet;
    bool m_number_of_sentences_isValid;

    OAIInline_response_200_19_readability readability;
    bool m_readability_isSet;
    bool m_readability_isValid;

    OAIInline_response_200_19_skimmability skimmability;
    bool m_skimmability_isSet;
    bool m_skimmability_isValid;

    OAIInline_response_200_19_interestingness interestingness;
    bool m_interestingness_isSet;
    bool m_interestingness_isValid;

    OAIInline_response_200_19_style style;
    bool m_style_isSet;
    bool m_style_isValid;

    double total_score;
    bool m_total_score_isSet;
    bool m_total_score_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInline_response_200_19)

#endif // OAIInline_response_200_19_H

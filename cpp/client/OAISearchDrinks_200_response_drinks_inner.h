/**
 * API League
 * API League is a Hub for World Class APIs.
 *
 * The version of the OpenAPI document: 1.5.0
 * Contact: mail@apileague.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISearchDrinks_200_response_drinks_inner.h
 *
 * 
 */

#ifndef OAISearchDrinks_200_response_drinks_inner_H
#define OAISearchDrinks_200_response_drinks_inner_H

#include <QJsonObject>

#include "OAISearchDrinks_200_response_drinks_inner_credits.h"
#include "OAISearchDrinks_200_response_drinks_inner_ingredients_inner.h"
#include "OAISearchDrinks_200_response_drinks_inner_instructions_inner.h"
#include "OAISearchDrinks_200_response_drinks_inner_nutrition.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISearchDrinks_200_response_drinks_inner_instructions_inner;
class OAISearchDrinks_200_response_drinks_inner_nutrition;
class OAISearchDrinks_200_response_drinks_inner_credits;
class OAISearchDrinks_200_response_drinks_inner_ingredients_inner;

class OAISearchDrinks_200_response_drinks_inner : public OAIObject {
public:
    OAISearchDrinks_200_response_drinks_inner();
    OAISearchDrinks_200_response_drinks_inner(QString json);
    ~OAISearchDrinks_200_response_drinks_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getFlavors() const;
    void setFlavors(const QList<QString> &flavors);
    bool is_flavors_Set() const;
    bool is_flavors_Valid() const;

    QList<OAISearchDrinks_200_response_drinks_inner_instructions_inner> getInstructions() const;
    void setInstructions(const QList<OAISearchDrinks_200_response_drinks_inner_instructions_inner> &instructions);
    bool is_instructions_Set() const;
    bool is_instructions_Valid() const;

    QList<QString> getImages() const;
    void setImages(const QList<QString> &images);
    bool is_images_Set() const;
    bool is_images_Valid() const;

    OAISearchDrinks_200_response_drinks_inner_nutrition getNutrition() const;
    void setNutrition(const OAISearchDrinks_200_response_drinks_inner_nutrition &nutrition);
    bool is_nutrition_Set() const;
    bool is_nutrition_Valid() const;

    QString getGlassType() const;
    void setGlassType(const QString &glass_type);
    bool is_glass_type_Set() const;
    bool is_glass_type_Valid() const;

    OAISearchDrinks_200_response_drinks_inner_credits getCredits() const;
    void setCredits(const OAISearchDrinks_200_response_drinks_inner_credits &credits);
    bool is_credits_Set() const;
    bool is_credits_Valid() const;

    double getPricePerServing() const;
    void setPricePerServing(const double &price_per_serving);
    bool is_price_per_serving_Set() const;
    bool is_price_per_serving_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QList<OAISearchDrinks_200_response_drinks_inner_ingredients_inner> getIngredients() const;
    void setIngredients(const QList<OAISearchDrinks_200_response_drinks_inner_ingredients_inner> &ingredients);
    bool is_ingredients_Set() const;
    bool is_ingredients_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QList<QString> getCuisines() const;
    void setCuisines(const QList<QString> &cuisines);
    bool is_cuisines_Set() const;
    bool is_cuisines_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_flavors;
    bool m_flavors_isSet;
    bool m_flavors_isValid;

    QList<OAISearchDrinks_200_response_drinks_inner_instructions_inner> m_instructions;
    bool m_instructions_isSet;
    bool m_instructions_isValid;

    QList<QString> m_images;
    bool m_images_isSet;
    bool m_images_isValid;

    OAISearchDrinks_200_response_drinks_inner_nutrition m_nutrition;
    bool m_nutrition_isSet;
    bool m_nutrition_isValid;

    QString m_glass_type;
    bool m_glass_type_isSet;
    bool m_glass_type_isValid;

    OAISearchDrinks_200_response_drinks_inner_credits m_credits;
    bool m_credits_isSet;
    bool m_credits_isValid;

    double m_price_per_serving;
    bool m_price_per_serving_isSet;
    bool m_price_per_serving_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QList<OAISearchDrinks_200_response_drinks_inner_ingredients_inner> m_ingredients;
    bool m_ingredients_isSet;
    bool m_ingredients_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QList<QString> m_cuisines;
    bool m_cuisines_isSet;
    bool m_cuisines_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISearchDrinks_200_response_drinks_inner)

#endif // OAISearchDrinks_200_response_drinks_inner_H

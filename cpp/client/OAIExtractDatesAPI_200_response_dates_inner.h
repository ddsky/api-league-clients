/**
 * API League
 * API League is a Hub for World Class APIs.
 *
 * The version of the OpenAPI document: 1.6.4
 * Contact: mail@apileague.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIExtractDatesAPI_200_response_dates_inner.h
 *
 * 
 */

#ifndef OAIExtractDatesAPI_200_response_dates_inner_H
#define OAIExtractDatesAPI_200_response_dates_inner_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIExtractDatesAPI_200_response_dates_inner : public OAIObject {
public:
    OAIExtractDatesAPI_200_response_dates_inner();
    OAIExtractDatesAPI_200_response_dates_inner(QString json);
    ~OAIExtractDatesAPI_200_response_dates_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getStartPosition() const;
    void setStartPosition(const qint32 &start_position);
    bool is_start_position_Set() const;
    bool is_start_position_Valid() const;

    QString getDate() const;
    void setDate(const QString &date);
    bool is_date_Set() const;
    bool is_date_Valid() const;

    double getNormalizedDate() const;
    void setNormalizedDate(const double &normalized_date);
    bool is_normalized_date_Set() const;
    bool is_normalized_date_Valid() const;

    QString getTag() const;
    void setTag(const QString &tag);
    bool is_tag_Set() const;
    bool is_tag_Valid() const;

    qint32 getEndPosition() const;
    void setEndPosition(const qint32 &end_position);
    bool is_end_position_Set() const;
    bool is_end_position_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_start_position;
    bool m_start_position_isSet;
    bool m_start_position_isValid;

    QString m_date;
    bool m_date_isSet;
    bool m_date_isValid;

    double m_normalized_date;
    bool m_normalized_date_isSet;
    bool m_normalized_date_isValid;

    QString m_tag;
    bool m_tag_isSet;
    bool m_tag_isValid;

    qint32 m_end_position;
    bool m_end_position_isSet;
    bool m_end_position_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIExtractDatesAPI_200_response_dates_inner)

#endif // OAIExtractDatesAPI_200_response_dates_inner_H

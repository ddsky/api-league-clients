/*
 * API League
 * API League is a Hub for World Class APIs.
 *
 * The version of the OpenAPI document: 1.6.4
 * Contact: mail@apileague.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.apileague;

import com.apileague.client.ApiException;
import com.apileague.client.model.ExtractAuthorsAPI200Response;
import com.apileague.client.model.ExtractContentFromAWebPageAPI200Response;
import com.apileague.client.model.ExtractPublishDateAPI200Response;
import com.apileague.client.model.RetrievePageRankAPI200Response;
import com.apileague.client.model.SearchWebAPI200Response;
import com.apileague.client.model.VerifyEmailAddressAPI200Response;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WebApi
 */
@Disabled
public class WebApiTest {

    private final WebApi api = new WebApi();

    /**
     * Extract Authors API
     *
     * Extracts the authors from a given URL. This API is useful for extracting the authors from a blog post or news article. The API will return a list of authors with their names and links to their profiles if available.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void extractAuthorsAPITest() throws ApiException {
        String url = null;
        ExtractAuthorsAPI200Response response = api.extractAuthorsAPI(url);
        // TODO: test validations
    }

    /**
     * Extract Content from a Web Page API
     *
     * Extract the main content from a web page. This API is useful for extracting the main text, title, and images from a web page. It can be used to create a summary of the content of a web page, or to extract the main content of a web page to display it in a different format.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void extractContentFromAWebPageAPITest() throws ApiException {
        String url = null;
        ExtractContentFromAWebPageAPI200Response response = api.extractContentFromAWebPageAPI(url);
        // TODO: test validations
    }

    /**
     * Extract Publish Date API
     *
     * Extract the publish date of an article (news or blog). The API will return the publish date of the article if it can be found. The date returned is in the format YYYY-MM-DD.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void extractPublishDateAPITest() throws ApiException {
        String url = null;
        ExtractPublishDateAPI200Response response = api.extractPublishDateAPI(url);
        // TODO: test validations
    }

    /**
     * Retrieve Page Rank API
     *
     * This API allows you to retrieve the page rank of a given URL. The API returns the page rank, the position of the URL in the search results, and the percentile of the page rank.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void retrievePageRankAPITest() throws ApiException {
        String domain = null;
        RetrievePageRankAPI200Response response = api.retrievePageRankAPI(domain);
        // TODO: test validations
    }

    /**
     * Search Web API
     *
     * Search the web for a given query. The API returns a list of results with the title, summary, and URL.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchWebAPITest() throws ApiException {
        String query = null;
        Integer number = null;
        SearchWebAPI200Response response = api.searchWebAPI(query, number);
        // TODO: test validations
    }

    /**
     * Verify Email Address API
     *
     * This email checker API allows you to validate an email address. The validation will parse the name if possible and check whether the email is not just a disposable junk email address. The API will also check if the email is from a free provider like Gmail, Yahoo, or Hotmail.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void verifyEmailAddressAPITest() throws ApiException {
        String email = null;
        VerifyEmailAddressAPI200Response response = api.verifyEmailAddressAPI(email);
        // TODO: test validations
    }

}

/*
 * API League
 * API League is a Hub for World Class APIs.
 *
 * The version of the OpenAPI document: 1.6.4
 * Contact: mail@apileague.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.apileague;

import com.apileague.client.ApiCallback;
import com.apileague.client.ApiClient;
import com.apileague.client.ApiException;
import com.apileague.client.ApiResponse;
import com.apileague.client.Configuration;
import com.apileague.client.Pair;
import com.apileague.client.ProgressRequestBody;
import com.apileague.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.apileague.client.model.ExtractNewsAPI200Response;
import com.apileague.client.model.SearchNewsAPI200Response;
import com.apileague.client.model.TopNewsAPI200Response;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class NewsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public NewsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public NewsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for extractNewsAPI
     * @param url The url of the news. (required)
     * @param analyze Whether to analyze the news (extract entities etc.) (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 402 </td><td> Payment Required </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Forbidden </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> Not Acceptable </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests </td><td>  -  </td></tr>
     </table>
     * Read entire docs
     * @see <a href="https://apileague.com/apis/extract-news-api/">Extract News API Documentation</a>
     */
    public okhttp3.Call extractNewsAPICall(String url, Boolean analyze, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/extract-news";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (url != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("url", url));
        }

        if (analyze != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("analyze", analyze));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "apiKey", "headerApiKey" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call extractNewsAPIValidateBeforeCall(String url, Boolean analyze, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'url' is set
        if (url == null) {
            throw new ApiException("Missing the required parameter 'url' when calling extractNewsAPI(Async)");
        }

        // verify the required parameter 'analyze' is set
        if (analyze == null) {
            throw new ApiException("Missing the required parameter 'analyze' when calling extractNewsAPI(Async)");
        }

        return extractNewsAPICall(url, analyze, _callback);

    }

    /**
     * Extract News API
     * Extract a news article from a website to a well structure JSON object. The API will return the title, text, URL, image, publish date, author, language, source country, and sentiment of the news article.
     * @param url The url of the news. (required)
     * @param analyze Whether to analyze the news (extract entities etc.) (required)
     * @return ExtractNewsAPI200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 402 </td><td> Payment Required </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Forbidden </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> Not Acceptable </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests </td><td>  -  </td></tr>
     </table>
     * Read entire docs
     * @see <a href="https://apileague.com/apis/extract-news-api/">Extract News API Documentation</a>
     */
    public ExtractNewsAPI200Response extractNewsAPI(String url, Boolean analyze) throws ApiException {
        ApiResponse<ExtractNewsAPI200Response> localVarResp = extractNewsAPIWithHttpInfo(url, analyze);
        return localVarResp.getData();
    }

    /**
     * Extract News API
     * Extract a news article from a website to a well structure JSON object. The API will return the title, text, URL, image, publish date, author, language, source country, and sentiment of the news article.
     * @param url The url of the news. (required)
     * @param analyze Whether to analyze the news (extract entities etc.) (required)
     * @return ApiResponse&lt;ExtractNewsAPI200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 402 </td><td> Payment Required </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Forbidden </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> Not Acceptable </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests </td><td>  -  </td></tr>
     </table>
     * Read entire docs
     * @see <a href="https://apileague.com/apis/extract-news-api/">Extract News API Documentation</a>
     */
    public ApiResponse<ExtractNewsAPI200Response> extractNewsAPIWithHttpInfo(String url, Boolean analyze) throws ApiException {
        okhttp3.Call localVarCall = extractNewsAPIValidateBeforeCall(url, analyze, null);
        Type localVarReturnType = new TypeToken<ExtractNewsAPI200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Extract News API (asynchronously)
     * Extract a news article from a website to a well structure JSON object. The API will return the title, text, URL, image, publish date, author, language, source country, and sentiment of the news article.
     * @param url The url of the news. (required)
     * @param analyze Whether to analyze the news (extract entities etc.) (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 402 </td><td> Payment Required </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Forbidden </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> Not Acceptable </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests </td><td>  -  </td></tr>
     </table>
     * Read entire docs
     * @see <a href="https://apileague.com/apis/extract-news-api/">Extract News API Documentation</a>
     */
    public okhttp3.Call extractNewsAPIAsync(String url, Boolean analyze, final ApiCallback<ExtractNewsAPI200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = extractNewsAPIValidateBeforeCall(url, analyze, _callback);
        Type localVarReturnType = new TypeToken<ExtractNewsAPI200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for searchNewsAPI
     * @param text The text to match in the news content (at least 3 characters, maximum 100 characters). By default all query terms are expected, you can use an uppercase OR to search for any terms, e.g. tesla OR ford. You can also exclude terms by putting a minus sign (-) in front of the term, e.g. tesla -ford. (optional)
     * @param sourceCountries A comma-separated list of ISO 3166 country codes from which the news should originate. (optional)
     * @param language The ISO 6391 language code of the news. (optional)
     * @param minSentiment The minimal sentiment of the news in range [-1,1]. (optional)
     * @param maxSentiment The maximal sentiment of the news in range [-1,1]. (optional)
     * @param earliestPublishDate The news must have been published after this date. (optional)
     * @param latestPublishDate The news must have been published before this date. (optional)
     * @param newsSources A comma-separated list of news sources from which the news should originate. (optional)
     * @param authors A comma-separated list of author names. Only news from any of the given authors will be returned. (optional)
     * @param categories A comma-separated list of categories. Only news from any of the given categories will be returned. Possible categories are politics, sports, business, technology, entertainment, health, science, lifestyle, travel, culture, education, environment, other. (optional)
     * @param entities Filter news by entities (ORG, PER, or LOC). (optional)
     * @param locationFilter Filter news by radius around a certain location. Format is \&quot;latitude,longitude,radius in kilometers\&quot; (optional)
     * @param sort The sorting criteria (publish-time). (optional)
     * @param sortDirection Whether to sort ascending or descending (ASC or DESC). (optional)
     * @param offset The number of news to skip in range [0,10000] (optional)
     * @param number The number of news to return in range [1,100] (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 402 </td><td> Payment Required </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Forbidden </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> Not Acceptable </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests </td><td>  -  </td></tr>
     </table>
     * Read entire docs
     * @see <a href="https://apileague.com/apis/search-news-api/">Search News API Documentation</a>
     */
    public okhttp3.Call searchNewsAPICall(String text, String sourceCountries, String language, Double minSentiment, Double maxSentiment, String earliestPublishDate, String latestPublishDate, String newsSources, String authors, String categories, String entities, String locationFilter, String sort, String sortDirection, Integer offset, Integer number, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/search-news";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (text != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("text", text));
        }

        if (sourceCountries != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("source-countries", sourceCountries));
        }

        if (language != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("language", language));
        }

        if (minSentiment != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("min-sentiment", minSentiment));
        }

        if (maxSentiment != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("max-sentiment", maxSentiment));
        }

        if (earliestPublishDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("earliest-publish-date", earliestPublishDate));
        }

        if (latestPublishDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("latest-publish-date", latestPublishDate));
        }

        if (newsSources != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("news-sources", newsSources));
        }

        if (authors != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("authors", authors));
        }

        if (categories != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("categories", categories));
        }

        if (entities != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("entities", entities));
        }

        if (locationFilter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("location-filter", locationFilter));
        }

        if (sort != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort", sort));
        }

        if (sortDirection != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort-direction", sortDirection));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        if (number != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("number", number));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "apiKey", "headerApiKey" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call searchNewsAPIValidateBeforeCall(String text, String sourceCountries, String language, Double minSentiment, Double maxSentiment, String earliestPublishDate, String latestPublishDate, String newsSources, String authors, String categories, String entities, String locationFilter, String sort, String sortDirection, Integer offset, Integer number, final ApiCallback _callback) throws ApiException {
        return searchNewsAPICall(text, sourceCountries, language, minSentiment, maxSentiment, earliestPublishDate, latestPublishDate, newsSources, authors, categories, entities, locationFilter, sort, sortDirection, offset, number, _callback);

    }

    /**
     * Search News API
     * Search and filter millions of news from over 200 countries in 90 languages by text, date, location, category, language, and more. The API returns a list of news articles matching the given criteria. You can set as many filtering parameters as you like, but you have to set at least one, e.g. text or language.
     * @param text The text to match in the news content (at least 3 characters, maximum 100 characters). By default all query terms are expected, you can use an uppercase OR to search for any terms, e.g. tesla OR ford. You can also exclude terms by putting a minus sign (-) in front of the term, e.g. tesla -ford. (optional)
     * @param sourceCountries A comma-separated list of ISO 3166 country codes from which the news should originate. (optional)
     * @param language The ISO 6391 language code of the news. (optional)
     * @param minSentiment The minimal sentiment of the news in range [-1,1]. (optional)
     * @param maxSentiment The maximal sentiment of the news in range [-1,1]. (optional)
     * @param earliestPublishDate The news must have been published after this date. (optional)
     * @param latestPublishDate The news must have been published before this date. (optional)
     * @param newsSources A comma-separated list of news sources from which the news should originate. (optional)
     * @param authors A comma-separated list of author names. Only news from any of the given authors will be returned. (optional)
     * @param categories A comma-separated list of categories. Only news from any of the given categories will be returned. Possible categories are politics, sports, business, technology, entertainment, health, science, lifestyle, travel, culture, education, environment, other. (optional)
     * @param entities Filter news by entities (ORG, PER, or LOC). (optional)
     * @param locationFilter Filter news by radius around a certain location. Format is \&quot;latitude,longitude,radius in kilometers\&quot; (optional)
     * @param sort The sorting criteria (publish-time). (optional)
     * @param sortDirection Whether to sort ascending or descending (ASC or DESC). (optional)
     * @param offset The number of news to skip in range [0,10000] (optional)
     * @param number The number of news to return in range [1,100] (optional)
     * @return SearchNewsAPI200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 402 </td><td> Payment Required </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Forbidden </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> Not Acceptable </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests </td><td>  -  </td></tr>
     </table>
     * Read entire docs
     * @see <a href="https://apileague.com/apis/search-news-api/">Search News API Documentation</a>
     */
    public SearchNewsAPI200Response searchNewsAPI(String text, String sourceCountries, String language, Double minSentiment, Double maxSentiment, String earliestPublishDate, String latestPublishDate, String newsSources, String authors, String categories, String entities, String locationFilter, String sort, String sortDirection, Integer offset, Integer number) throws ApiException {
        ApiResponse<SearchNewsAPI200Response> localVarResp = searchNewsAPIWithHttpInfo(text, sourceCountries, language, minSentiment, maxSentiment, earliestPublishDate, latestPublishDate, newsSources, authors, categories, entities, locationFilter, sort, sortDirection, offset, number);
        return localVarResp.getData();
    }

    /**
     * Search News API
     * Search and filter millions of news from over 200 countries in 90 languages by text, date, location, category, language, and more. The API returns a list of news articles matching the given criteria. You can set as many filtering parameters as you like, but you have to set at least one, e.g. text or language.
     * @param text The text to match in the news content (at least 3 characters, maximum 100 characters). By default all query terms are expected, you can use an uppercase OR to search for any terms, e.g. tesla OR ford. You can also exclude terms by putting a minus sign (-) in front of the term, e.g. tesla -ford. (optional)
     * @param sourceCountries A comma-separated list of ISO 3166 country codes from which the news should originate. (optional)
     * @param language The ISO 6391 language code of the news. (optional)
     * @param minSentiment The minimal sentiment of the news in range [-1,1]. (optional)
     * @param maxSentiment The maximal sentiment of the news in range [-1,1]. (optional)
     * @param earliestPublishDate The news must have been published after this date. (optional)
     * @param latestPublishDate The news must have been published before this date. (optional)
     * @param newsSources A comma-separated list of news sources from which the news should originate. (optional)
     * @param authors A comma-separated list of author names. Only news from any of the given authors will be returned. (optional)
     * @param categories A comma-separated list of categories. Only news from any of the given categories will be returned. Possible categories are politics, sports, business, technology, entertainment, health, science, lifestyle, travel, culture, education, environment, other. (optional)
     * @param entities Filter news by entities (ORG, PER, or LOC). (optional)
     * @param locationFilter Filter news by radius around a certain location. Format is \&quot;latitude,longitude,radius in kilometers\&quot; (optional)
     * @param sort The sorting criteria (publish-time). (optional)
     * @param sortDirection Whether to sort ascending or descending (ASC or DESC). (optional)
     * @param offset The number of news to skip in range [0,10000] (optional)
     * @param number The number of news to return in range [1,100] (optional)
     * @return ApiResponse&lt;SearchNewsAPI200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 402 </td><td> Payment Required </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Forbidden </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> Not Acceptable </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests </td><td>  -  </td></tr>
     </table>
     * Read entire docs
     * @see <a href="https://apileague.com/apis/search-news-api/">Search News API Documentation</a>
     */
    public ApiResponse<SearchNewsAPI200Response> searchNewsAPIWithHttpInfo(String text, String sourceCountries, String language, Double minSentiment, Double maxSentiment, String earliestPublishDate, String latestPublishDate, String newsSources, String authors, String categories, String entities, String locationFilter, String sort, String sortDirection, Integer offset, Integer number) throws ApiException {
        okhttp3.Call localVarCall = searchNewsAPIValidateBeforeCall(text, sourceCountries, language, minSentiment, maxSentiment, earliestPublishDate, latestPublishDate, newsSources, authors, categories, entities, locationFilter, sort, sortDirection, offset, number, null);
        Type localVarReturnType = new TypeToken<SearchNewsAPI200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Search News API (asynchronously)
     * Search and filter millions of news from over 200 countries in 90 languages by text, date, location, category, language, and more. The API returns a list of news articles matching the given criteria. You can set as many filtering parameters as you like, but you have to set at least one, e.g. text or language.
     * @param text The text to match in the news content (at least 3 characters, maximum 100 characters). By default all query terms are expected, you can use an uppercase OR to search for any terms, e.g. tesla OR ford. You can also exclude terms by putting a minus sign (-) in front of the term, e.g. tesla -ford. (optional)
     * @param sourceCountries A comma-separated list of ISO 3166 country codes from which the news should originate. (optional)
     * @param language The ISO 6391 language code of the news. (optional)
     * @param minSentiment The minimal sentiment of the news in range [-1,1]. (optional)
     * @param maxSentiment The maximal sentiment of the news in range [-1,1]. (optional)
     * @param earliestPublishDate The news must have been published after this date. (optional)
     * @param latestPublishDate The news must have been published before this date. (optional)
     * @param newsSources A comma-separated list of news sources from which the news should originate. (optional)
     * @param authors A comma-separated list of author names. Only news from any of the given authors will be returned. (optional)
     * @param categories A comma-separated list of categories. Only news from any of the given categories will be returned. Possible categories are politics, sports, business, technology, entertainment, health, science, lifestyle, travel, culture, education, environment, other. (optional)
     * @param entities Filter news by entities (ORG, PER, or LOC). (optional)
     * @param locationFilter Filter news by radius around a certain location. Format is \&quot;latitude,longitude,radius in kilometers\&quot; (optional)
     * @param sort The sorting criteria (publish-time). (optional)
     * @param sortDirection Whether to sort ascending or descending (ASC or DESC). (optional)
     * @param offset The number of news to skip in range [0,10000] (optional)
     * @param number The number of news to return in range [1,100] (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 402 </td><td> Payment Required </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Forbidden </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> Not Acceptable </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests </td><td>  -  </td></tr>
     </table>
     * Read entire docs
     * @see <a href="https://apileague.com/apis/search-news-api/">Search News API Documentation</a>
     */
    public okhttp3.Call searchNewsAPIAsync(String text, String sourceCountries, String language, Double minSentiment, Double maxSentiment, String earliestPublishDate, String latestPublishDate, String newsSources, String authors, String categories, String entities, String locationFilter, String sort, String sortDirection, Integer offset, Integer number, final ApiCallback<SearchNewsAPI200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = searchNewsAPIValidateBeforeCall(text, sourceCountries, language, minSentiment, maxSentiment, earliestPublishDate, latestPublishDate, newsSources, authors, categories, entities, locationFilter, sort, sortDirection, offset, number, _callback);
        Type localVarReturnType = new TypeToken<SearchNewsAPI200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for topNewsAPI
     * @param sourceCountry The ISO 3166 country code of the country for which top news should be retrieved. (required)
     * @param language The ISO 6391 language code of the top news. The language must be one spoken in the source-country. (required)
     * @param date The date for which the top news should be retrieved. If no date is given, the current day is assumed. (optional)
     * @param headlinesOnly Whether to only return basic information such as id, title, and url of the news. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 402 </td><td> Payment Required </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Forbidden </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> Not Acceptable </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests </td><td>  -  </td></tr>
     </table>
     * Read entire docs
     * @see <a href="https://apileague.com/apis/top-news-api/">Top News API Documentation</a>
     */
    public okhttp3.Call topNewsAPICall(String sourceCountry, String language, String date, Boolean headlinesOnly, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/retrieve-top-news";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (sourceCountry != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("source-country", sourceCountry));
        }

        if (language != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("language", language));
        }

        if (date != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("date", date));
        }

        if (headlinesOnly != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("headlines-only", headlinesOnly));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "apiKey", "headerApiKey" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call topNewsAPIValidateBeforeCall(String sourceCountry, String language, String date, Boolean headlinesOnly, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'sourceCountry' is set
        if (sourceCountry == null) {
            throw new ApiException("Missing the required parameter 'sourceCountry' when calling topNewsAPI(Async)");
        }

        // verify the required parameter 'language' is set
        if (language == null) {
            throw new ApiException("Missing the required parameter 'language' when calling topNewsAPI(Async)");
        }

        return topNewsAPICall(sourceCountry, language, date, headlinesOnly, _callback);

    }

    /**
     * Top News API
     * Get the top news from a country (over 220 are supported) in a language (over 90 are supported) for a specific date. The top news are clustered from multiple sources in the given country. The more news in a cluster the higher the cluster is ranked.
     * @param sourceCountry The ISO 3166 country code of the country for which top news should be retrieved. (required)
     * @param language The ISO 6391 language code of the top news. The language must be one spoken in the source-country. (required)
     * @param date The date for which the top news should be retrieved. If no date is given, the current day is assumed. (optional)
     * @param headlinesOnly Whether to only return basic information such as id, title, and url of the news. (optional)
     * @return TopNewsAPI200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 402 </td><td> Payment Required </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Forbidden </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> Not Acceptable </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests </td><td>  -  </td></tr>
     </table>
     * Read entire docs
     * @see <a href="https://apileague.com/apis/top-news-api/">Top News API Documentation</a>
     */
    public TopNewsAPI200Response topNewsAPI(String sourceCountry, String language, String date, Boolean headlinesOnly) throws ApiException {
        ApiResponse<TopNewsAPI200Response> localVarResp = topNewsAPIWithHttpInfo(sourceCountry, language, date, headlinesOnly);
        return localVarResp.getData();
    }

    /**
     * Top News API
     * Get the top news from a country (over 220 are supported) in a language (over 90 are supported) for a specific date. The top news are clustered from multiple sources in the given country. The more news in a cluster the higher the cluster is ranked.
     * @param sourceCountry The ISO 3166 country code of the country for which top news should be retrieved. (required)
     * @param language The ISO 6391 language code of the top news. The language must be one spoken in the source-country. (required)
     * @param date The date for which the top news should be retrieved. If no date is given, the current day is assumed. (optional)
     * @param headlinesOnly Whether to only return basic information such as id, title, and url of the news. (optional)
     * @return ApiResponse&lt;TopNewsAPI200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 402 </td><td> Payment Required </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Forbidden </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> Not Acceptable </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests </td><td>  -  </td></tr>
     </table>
     * Read entire docs
     * @see <a href="https://apileague.com/apis/top-news-api/">Top News API Documentation</a>
     */
    public ApiResponse<TopNewsAPI200Response> topNewsAPIWithHttpInfo(String sourceCountry, String language, String date, Boolean headlinesOnly) throws ApiException {
        okhttp3.Call localVarCall = topNewsAPIValidateBeforeCall(sourceCountry, language, date, headlinesOnly, null);
        Type localVarReturnType = new TypeToken<TopNewsAPI200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Top News API (asynchronously)
     * Get the top news from a country (over 220 are supported) in a language (over 90 are supported) for a specific date. The top news are clustered from multiple sources in the given country. The more news in a cluster the higher the cluster is ranked.
     * @param sourceCountry The ISO 3166 country code of the country for which top news should be retrieved. (required)
     * @param language The ISO 6391 language code of the top news. The language must be one spoken in the source-country. (required)
     * @param date The date for which the top news should be retrieved. If no date is given, the current day is assumed. (optional)
     * @param headlinesOnly Whether to only return basic information such as id, title, and url of the news. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 402 </td><td> Payment Required </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Forbidden </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found </td><td>  -  </td></tr>
        <tr><td> 406 </td><td> Not Acceptable </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests </td><td>  -  </td></tr>
     </table>
     * Read entire docs
     * @see <a href="https://apileague.com/apis/top-news-api/">Top News API Documentation</a>
     */
    public okhttp3.Call topNewsAPIAsync(String sourceCountry, String language, String date, Boolean headlinesOnly, final ApiCallback<TopNewsAPI200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = topNewsAPIValidateBeforeCall(sourceCountry, language, date, headlinesOnly, _callback);
        Type localVarReturnType = new TypeToken<TopNewsAPI200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}

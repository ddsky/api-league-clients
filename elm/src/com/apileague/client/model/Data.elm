{-
   API League
   API League is a Hub for World Class APIs.

   The version of the OpenAPI document: 1.0
   Contact: mail@apileague.com

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git

   DO NOT EDIT THIS FILE MANUALLY.

   For more info on generating Elm code, see https://eriktim.github.io/openapi-elm/
-}


module Api.Data exposing
    ( InlineResponse200
    , InlineResponse2001
    , InlineResponse20010
    , InlineResponse20011
    , InlineResponse20012
    , InlineResponse20013
    , InlineResponse20014
    , InlineResponse20014Authors
    , InlineResponse20015
    , InlineResponse20015Results
    , InlineResponse20016
    , InlineResponse20017
    , InlineResponse20018
    , InlineResponse20018Document
    , InlineResponse20018Sentences
    , InlineResponse20019
    , InlineResponse20019Interestingness
    , InlineResponse20019InterestingnessSubscores
    , InlineResponse20019Readability
    , InlineResponse20019ReadabilityMainscores
    , InlineResponse20019ReadabilitySubscores
    , InlineResponse20019Skimmability
    , InlineResponse20019SkimmabilityMainscores
    , InlineResponse20019SkimmabilitySubscores
    , InlineResponse20019Style
    , InlineResponse20019StyleSubscores
    , InlineResponse2002
    , InlineResponse20020
    , InlineResponse20021
    , InlineResponse20021Dates
    , InlineResponse20022
    , InlineResponse20023
    , InlineResponse20024
    , InlineResponse20025
    , InlineResponse20026
    , InlineResponse20027
    , InlineResponse20027Entities
    , InlineResponse20028
    , InlineResponse20028Images
    , InlineResponse20028License
    , InlineResponse20029
    , InlineResponse2002News
    , InlineResponse2003
    , InlineResponse20030
    , InlineResponse20031
    , InlineResponse20032
    , InlineResponse2004
    , InlineResponse2004Jokes
    , InlineResponse2005
    , InlineResponse2005Memes
    , InlineResponse2006
    , InlineResponse2007
    , InlineResponse2007Images
    , InlineResponse2008
    , InlineResponse2009
    , InlineResponse200Books
    , encodeInlineResponse200
    , encodeInlineResponse2001
    , encodeInlineResponse20010
    , encodeInlineResponse20011
    , encodeInlineResponse20012
    , encodeInlineResponse20013
    , encodeInlineResponse20014
    , encodeInlineResponse20014Authors
    , encodeInlineResponse20015
    , encodeInlineResponse20015Results
    , encodeInlineResponse20016
    , encodeInlineResponse20017
    , encodeInlineResponse20018
    , encodeInlineResponse20018Document
    , encodeInlineResponse20018Sentences
    , encodeInlineResponse20019
    , encodeInlineResponse20019Interestingness
    , encodeInlineResponse20019InterestingnessSubscores
    , encodeInlineResponse20019Readability
    , encodeInlineResponse20019ReadabilityMainscores
    , encodeInlineResponse20019ReadabilitySubscores
    , encodeInlineResponse20019Skimmability
    , encodeInlineResponse20019SkimmabilityMainscores
    , encodeInlineResponse20019SkimmabilitySubscores
    , encodeInlineResponse20019Style
    , encodeInlineResponse20019StyleSubscores
    , encodeInlineResponse2002
    , encodeInlineResponse20020
    , encodeInlineResponse20021
    , encodeInlineResponse20021Dates
    , encodeInlineResponse20022
    , encodeInlineResponse20023
    , encodeInlineResponse20024
    , encodeInlineResponse20025
    , encodeInlineResponse20026
    , encodeInlineResponse20027
    , encodeInlineResponse20027Entities
    , encodeInlineResponse20028
    , encodeInlineResponse20028Images
    , encodeInlineResponse20028License
    , encodeInlineResponse20029
    , encodeInlineResponse2002News
    , encodeInlineResponse2003
    , encodeInlineResponse20030
    , encodeInlineResponse20031
    , encodeInlineResponse20032
    , encodeInlineResponse2004
    , encodeInlineResponse2004Jokes
    , encodeInlineResponse2005
    , encodeInlineResponse2005Memes
    , encodeInlineResponse2006
    , encodeInlineResponse2007
    , encodeInlineResponse2007Images
    , encodeInlineResponse2008
    , encodeInlineResponse2009
    , encodeInlineResponse200Books
    , inlineResponse200Decoder
    , inlineResponse2001Decoder
    , inlineResponse20010Decoder
    , inlineResponse20011Decoder
    , inlineResponse20012Decoder
    , inlineResponse20013Decoder
    , inlineResponse20014Decoder
    , inlineResponse20014AuthorsDecoder
    , inlineResponse20015Decoder
    , inlineResponse20015ResultsDecoder
    , inlineResponse20016Decoder
    , inlineResponse20017Decoder
    , inlineResponse20018Decoder
    , inlineResponse20018DocumentDecoder
    , inlineResponse20018SentencesDecoder
    , inlineResponse20019Decoder
    , inlineResponse20019InterestingnessDecoder
    , inlineResponse20019InterestingnessSubscoresDecoder
    , inlineResponse20019ReadabilityDecoder
    , inlineResponse20019ReadabilityMainscoresDecoder
    , inlineResponse20019ReadabilitySubscoresDecoder
    , inlineResponse20019SkimmabilityDecoder
    , inlineResponse20019SkimmabilityMainscoresDecoder
    , inlineResponse20019SkimmabilitySubscoresDecoder
    , inlineResponse20019StyleDecoder
    , inlineResponse20019StyleSubscoresDecoder
    , inlineResponse2002Decoder
    , inlineResponse20020Decoder
    , inlineResponse20021Decoder
    , inlineResponse20021DatesDecoder
    , inlineResponse20022Decoder
    , inlineResponse20023Decoder
    , inlineResponse20024Decoder
    , inlineResponse20025Decoder
    , inlineResponse20026Decoder
    , inlineResponse20027Decoder
    , inlineResponse20027EntitiesDecoder
    , inlineResponse20028Decoder
    , inlineResponse20028ImagesDecoder
    , inlineResponse20028LicenseDecoder
    , inlineResponse20029Decoder
    , inlineResponse2002NewsDecoder
    , inlineResponse2003Decoder
    , inlineResponse20030Decoder
    , inlineResponse20031Decoder
    , inlineResponse20032Decoder
    , inlineResponse2004Decoder
    , inlineResponse2004JokesDecoder
    , inlineResponse2005Decoder
    , inlineResponse2005MemesDecoder
    , inlineResponse2006Decoder
    , inlineResponse2007Decoder
    , inlineResponse2007ImagesDecoder
    , inlineResponse2008Decoder
    , inlineResponse2009Decoder
    , inlineResponse200BooksDecoder
    )

import Api
import Dict
import Json.Decode
import Json.Encode


-- MODEL


type alias InlineResponse200 =
    { available : Maybe Int
, number : Maybe Int
, offset : Maybe Int
, books : Maybe (List (InlineResponse200Books))
}


type alias InlineResponse2001 =
    { similarBooks : Maybe (List (InlineResponse200Books))
}


type alias InlineResponse20010 =
    { author : Maybe String
, quote : Maybe String
}


type alias InlineResponse20011 =
    { title : Maybe String
, author : Maybe String
, poem : Maybe String
}


type alias InlineResponse20012 =
    { title : Maybe String
, mainText : Maybe String
, mainHtml : Maybe String
, images : Maybe (List (Maybe String))
}


type alias InlineResponse20013 =
    { publishDate : Maybe String
}


type alias InlineResponse20014 =
    { authors : Maybe (List (InlineResponse20014Authors))
}


type alias InlineResponse20014Authors =
    { link : Maybe String
, name : Maybe String
}


type alias InlineResponse20015 =
    { results : Maybe (List (InlineResponse20015Results))
}


type alias InlineResponse20015Results =
    { title : Maybe String
, summary : Maybe String
, url : Maybe String
}


type alias InlineResponse20016 =
    { correctedText : Maybe String
}


type alias InlineResponse20017 =
    { language : Maybe String
, confidence : Maybe Float
}


type alias InlineResponse20018 =
    { document : Maybe InlineResponse20018Document
, sentences : Maybe (List (InlineResponse20018Sentences))
}


type alias InlineResponse20018Document =
    { sentiment : Maybe String
, confidence : Maybe Int
, averageConfidence : Maybe Int
}


type alias InlineResponse20018Sentences =
    { length : Maybe Int
, sentiment : Maybe String
, offset : Maybe Int
, confidence : Maybe Int
}


type alias InlineResponse20019 =
    { numberOfWords : Maybe Int
, numberOfSentences : Maybe Int
, readability : Maybe InlineResponse20019Readability
, skimmability : Maybe InlineResponse20019Skimmability
, interestingness : Maybe InlineResponse20019Interestingness
, style : Maybe InlineResponse20019Style
, totalScore : Maybe Float
}


type alias InlineResponse20019Interestingness =
    { mainscores : Maybe InlineResponse20019SkimmabilityMainscores
, subscores : Maybe InlineResponse20019InterestingnessSubscores
}


type alias InlineResponse20019InterestingnessSubscores =
    { titleRatingScore : Maybe (List (Int))
, quoteScore : Maybe (List (Int))
, lengthScore : Maybe (List (Int))
, linkScore : Maybe (List (Int))
, googleHitsScore : Maybe (List (Int))
}


type alias InlineResponse20019Readability =
    { mainscores : Maybe InlineResponse20019ReadabilityMainscores
, subscores : Maybe InlineResponse20019ReadabilitySubscores
}


type alias InlineResponse20019ReadabilityMainscores =
    { totalPossible : Maybe Int
, total : Maybe Int
}


type alias InlineResponse20019ReadabilitySubscores =
    { readingTimeSeconds : Maybe Int
, forcast : Maybe Float
, flesch : Maybe Float
, smog : Maybe Float
, ari : Maybe Float
, lix : Maybe Float
, colemanLiau : Maybe Float
, kincaid : Maybe Float
, fog : Maybe Float
}


type alias InlineResponse20019Skimmability =
    { mainscores : Maybe InlineResponse20019SkimmabilityMainscores
, subscores : Maybe InlineResponse20019SkimmabilitySubscores
}


type alias InlineResponse20019SkimmabilityMainscores =
    { totalPossible : Maybe Int
, total : Maybe Float
}


type alias InlineResponse20019SkimmabilitySubscores =
    { bulletPointRatioScore : Maybe (List (Int))
, imageScore : Maybe (List (Int))
, highlightedWordRatioScore : Maybe (List (Int))
, videoScore : Maybe (List (Int))
, paragraphScore : Maybe (List (Int))
, paragraphHeadlineRatioScore : Maybe (List (Int))
}


type alias InlineResponse20019Style =
    { mainscores : Maybe InlineResponse20019ReadabilityMainscores
, subscores : Maybe InlineResponse20019StyleSubscores
}


type alias InlineResponse20019StyleSubscores =
    { abbreviationScore : Maybe (List (Int))
, styleScore : Maybe (List (Int))
, spellingScore : Maybe (List (Int))
}


type alias InlineResponse2002 =
    { offset : Maybe Int
, number : Maybe Int
, available : Maybe Int
, news : Maybe (List (InlineResponse2002News))
}


type alias InlineResponse20020 =
    { readability : Maybe InlineResponse20019Readability
}


type alias InlineResponse20021 =
    { dates : Maybe (List (InlineResponse20021Dates))
}


type alias InlineResponse20021Dates =
    { startPosition : Maybe Int
, date : Maybe String
, normalizedDate : Maybe Float
, tag : Maybe String
, endPosition : Maybe Int
}


type alias InlineResponse20022 =
    { synonyms : Maybe (List (Maybe String))
}


type alias InlineResponse20023 =
    { taggedText : Maybe String
}


type alias InlineResponse20024 =
    { original : Maybe String
, stemmed : Maybe String
}


type alias InlineResponse20025 =
    { original : Maybe String
, singular : Maybe String
}


type alias InlineResponse20026 =
    { original : Maybe String
, plural : Maybe String
}


type alias InlineResponse20027 =
    { entities : Maybe (List (InlineResponse20027Entities))
}


type alias InlineResponse20027Entities =
    { startPosition : Maybe Int
, image : Maybe String
, type_ : Maybe String
, value : Maybe String
, endPosition : Maybe Int
}


type alias InlineResponse20028 =
    { images : Maybe (List (InlineResponse20028Images))
}


type alias InlineResponse20028Images =
    { width : Maybe Int
, license : Maybe InlineResponse20028License
, thumbnail : Maybe String
, id : Maybe String
, url : Maybe String
, height : Maybe Int
}


type alias InlineResponse20028License =
    { name : Maybe String
, link : Maybe String
}


type alias InlineResponse20029 =
    { specificColor : Maybe String
, mainColor : Maybe String
, hexCode : Maybe String
}


type alias InlineResponse2002News =
    { summary : Maybe String
, image : Maybe String
, sentiment : Maybe Float
, sourceCountry : Maybe String
, language : Maybe String
, id : Maybe Int
, text : Maybe String
, title : Maybe String
, publishDate : Maybe String
, url : Maybe String
, authors : Maybe (List (Maybe String))
}


type alias InlineResponse2003 =
    { title : Maybe String
, text : Maybe String
, url : Maybe String
, image : Maybe String
, publishDate : Maybe String
, author : Maybe String
, language : Maybe String
, sourceCountry : Maybe String
, sentiment : Maybe Float
}


type alias InlineResponse20030 =
    { targetAmount : Maybe Float
, targetUnit : Maybe String
}


type alias InlineResponse20031 =
    { value : Maybe String
}


type alias InlineResponse20032 =
    { status : Maybe String
}


type alias InlineResponse2004 =
    { jokes : Maybe (List (InlineResponse2004Jokes))
, available : Maybe Int
}


type alias InlineResponse2004Jokes =
    { joke : Maybe String
}


type alias InlineResponse2005 =
    { memes : Maybe (List (InlineResponse2005Memes))
, available : Maybe Int
}


type alias InlineResponse2005Memes =
    { type_ : Maybe String
, description : Maybe String
, url : Maybe String
}


type alias InlineResponse2006 =
    { description : Maybe String
, url : Maybe String
, type_ : Maybe String
, width : Maybe Int
, height : Maybe Int
, ratio : Maybe Float
}


type alias InlineResponse2007 =
    { images : Maybe (List (InlineResponse2007Images))
}


type alias InlineResponse2007Images =
    { width : Maybe Int
, url : Maybe String
, height : Maybe Int
}


type alias InlineResponse2008 =
    { word : Maybe String
, rating : Maybe Float
}


type alias InlineResponse2009 =
    { trivia : Maybe String
}


type alias InlineResponse200Books =
    { title : Maybe String
, image : Maybe String
, id : Maybe Int
}


-- ENCODER


encodeInlineResponse200 : InlineResponse200 -> Json.Encode.Value
encodeInlineResponse200 =
    encodeObject << encodeInlineResponse200Pairs


encodeInlineResponse200WithTag : ( String, String ) -> InlineResponse200 -> Json.Encode.Value
encodeInlineResponse200WithTag (tagField, tag) model =
    encodeObject (encodeInlineResponse200Pairs model ++ [ encode tagField Json.Encode.string tag ])


encodeInlineResponse200Pairs : InlineResponse200 -> List EncodedField
encodeInlineResponse200Pairs model =
    let
        pairs =
            [ maybeEncode "available" Json.Encode.int model.available
            , maybeEncode "number" Json.Encode.int model.number
            , maybeEncode "offset" Json.Encode.int model.offset
            , maybeEncode "books" (Json.Encode.list encodeInlineResponse200Books) model.books
            ]
    in
    pairs


encodeInlineResponse2001 : InlineResponse2001 -> Json.Encode.Value
encodeInlineResponse2001 =
    encodeObject << encodeInlineResponse2001Pairs


encodeInlineResponse2001WithTag : ( String, String ) -> InlineResponse2001 -> Json.Encode.Value
encodeInlineResponse2001WithTag (tagField, tag) model =
    encodeObject (encodeInlineResponse2001Pairs model ++ [ encode tagField Json.Encode.string tag ])


encodeInlineResponse2001Pairs : InlineResponse2001 -> List EncodedField
encodeInlineResponse2001Pairs model =
    let
        pairs =
            [ maybeEncode "similar_books" (Json.Encode.list encodeInlineResponse200Books) model.similarBooks
            ]
    in
    pairs


encodeInlineResponse20010 : InlineResponse20010 -> Json.Encode.Value
encodeInlineResponse20010 =
    encodeObject << encodeInlineResponse20010Pairs


encodeInlineResponse20010WithTag : ( String, String ) -> InlineResponse20010 -> Json.Encode.Value
encodeInlineResponse20010WithTag (tagField, tag) model =
    encodeObject (encodeInlineResponse20010Pairs model ++ [ encode tagField Json.Encode.string tag ])


encodeInlineResponse20010Pairs : InlineResponse20010 -> List EncodedField
encodeInlineResponse20010Pairs model =
    let
        pairs =
            [ maybeEncodeNullable "author" Json.Encode.string model.author
            , maybeEncodeNullable "quote" Json.Encode.string model.quote
            ]
    in
    pairs


encodeInlineResponse20011 : InlineResponse20011 -> Json.Encode.Value
encodeInlineResponse20011 =
    encodeObject << encodeInlineResponse20011Pairs


encodeInlineResponse20011WithTag : ( String, String ) -> InlineResponse20011 -> Json.Encode.Value
encodeInlineResponse20011WithTag (tagField, tag) model =
    encodeObject (encodeInlineResponse20011Pairs model ++ [ encode tagField Json.Encode.string tag ])


encodeInlineResponse20011Pairs : InlineResponse20011 -> List EncodedField
encodeInlineResponse20011Pairs model =
    let
        pairs =
            [ maybeEncodeNullable "title" Json.Encode.string model.title
            , maybeEncodeNullable "author" Json.Encode.string model.author
            , maybeEncodeNullable "poem" Json.Encode.string model.poem
            ]
    in
    pairs


encodeInlineResponse20012 : InlineResponse20012 -> Json.Encode.Value
encodeInlineResponse20012 =
    encodeObject << encodeInlineResponse20012Pairs


encodeInlineResponse20012WithTag : ( String, String ) -> InlineResponse20012 -> Json.Encode.Value
encodeInlineResponse20012WithTag (tagField, tag) model =
    encodeObject (encodeInlineResponse20012Pairs model ++ [ encode tagField Json.Encode.string tag ])


encodeInlineResponse20012Pairs : InlineResponse20012 -> List EncodedField
encodeInlineResponse20012Pairs model =
    let
        pairs =
            [ maybeEncodeNullable "title" Json.Encode.string model.title
            , maybeEncodeNullable "main_text" Json.Encode.string model.mainText
            , maybeEncodeNullable "main_html" Json.Encode.string model.mainHtml
            , maybeEncode "images" (Json.Encode.list Json.Encode.string) model.images
            ]
    in
    pairs


encodeInlineResponse20013 : InlineResponse20013 -> Json.Encode.Value
encodeInlineResponse20013 =
    encodeObject << encodeInlineResponse20013Pairs


encodeInlineResponse20013WithTag : ( String, String ) -> InlineResponse20013 -> Json.Encode.Value
encodeInlineResponse20013WithTag (tagField, tag) model =
    encodeObject (encodeInlineResponse20013Pairs model ++ [ encode tagField Json.Encode.string tag ])


encodeInlineResponse20013Pairs : InlineResponse20013 -> List EncodedField
encodeInlineResponse20013Pairs model =
    let
        pairs =
            [ maybeEncodeNullable "publish_date" Json.Encode.string model.publishDate
            ]
    in
    pairs


encodeInlineResponse20014 : InlineResponse20014 -> Json.Encode.Value
encodeInlineResponse20014 =
    encodeObject << encodeInlineResponse20014Pairs


encodeInlineResponse20014WithTag : ( String, String ) -> InlineResponse20014 -> Json.Encode.Value
encodeInlineResponse20014WithTag (tagField, tag) model =
    encodeObject (encodeInlineResponse20014Pairs model ++ [ encode tagField Json.Encode.string tag ])


encodeInlineResponse20014Pairs : InlineResponse20014 -> List EncodedField
encodeInlineResponse20014Pairs model =
    let
        pairs =
            [ maybeEncode "authors" (Json.Encode.list encodeInlineResponse20014Authors) model.authors
            ]
    in
    pairs


encodeInlineResponse20014Authors : InlineResponse20014Authors -> Json.Encode.Value
encodeInlineResponse20014Authors =
    encodeObject << encodeInlineResponse20014AuthorsPairs


encodeInlineResponse20014AuthorsWithTag : ( String, String ) -> InlineResponse20014Authors -> Json.Encode.Value
encodeInlineResponse20014AuthorsWithTag (tagField, tag) model =
    encodeObject (encodeInlineResponse20014AuthorsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeInlineResponse20014AuthorsPairs : InlineResponse20014Authors -> List EncodedField
encodeInlineResponse20014AuthorsPairs model =
    let
        pairs =
            [ maybeEncodeNullable "link" Json.Encode.string model.link
            , maybeEncodeNullable "name" Json.Encode.string model.name
            ]
    in
    pairs


encodeInlineResponse20015 : InlineResponse20015 -> Json.Encode.Value
encodeInlineResponse20015 =
    encodeObject << encodeInlineResponse20015Pairs


encodeInlineResponse20015WithTag : ( String, String ) -> InlineResponse20015 -> Json.Encode.Value
encodeInlineResponse20015WithTag (tagField, tag) model =
    encodeObject (encodeInlineResponse20015Pairs model ++ [ encode tagField Json.Encode.string tag ])


encodeInlineResponse20015Pairs : InlineResponse20015 -> List EncodedField
encodeInlineResponse20015Pairs model =
    let
        pairs =
            [ maybeEncode "results" (Json.Encode.list encodeInlineResponse20015Results) model.results
            ]
    in
    pairs


encodeInlineResponse20015Results : InlineResponse20015Results -> Json.Encode.Value
encodeInlineResponse20015Results =
    encodeObject << encodeInlineResponse20015ResultsPairs


encodeInlineResponse20015ResultsWithTag : ( String, String ) -> InlineResponse20015Results -> Json.Encode.Value
encodeInlineResponse20015ResultsWithTag (tagField, tag) model =
    encodeObject (encodeInlineResponse20015ResultsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeInlineResponse20015ResultsPairs : InlineResponse20015Results -> List EncodedField
encodeInlineResponse20015ResultsPairs model =
    let
        pairs =
            [ maybeEncodeNullable "title" Json.Encode.string model.title
            , maybeEncodeNullable "summary" Json.Encode.string model.summary
            , maybeEncodeNullable "url" Json.Encode.string model.url
            ]
    in
    pairs


encodeInlineResponse20016 : InlineResponse20016 -> Json.Encode.Value
encodeInlineResponse20016 =
    encodeObject << encodeInlineResponse20016Pairs


encodeInlineResponse20016WithTag : ( String, String ) -> InlineResponse20016 -> Json.Encode.Value
encodeInlineResponse20016WithTag (tagField, tag) model =
    encodeObject (encodeInlineResponse20016Pairs model ++ [ encode tagField Json.Encode.string tag ])


encodeInlineResponse20016Pairs : InlineResponse20016 -> List EncodedField
encodeInlineResponse20016Pairs model =
    let
        pairs =
            [ maybeEncodeNullable "corrected_text" Json.Encode.string model.correctedText
            ]
    in
    pairs


encodeInlineResponse20017 : InlineResponse20017 -> Json.Encode.Value
encodeInlineResponse20017 =
    encodeObject << encodeInlineResponse20017Pairs


encodeInlineResponse20017WithTag : ( String, String ) -> InlineResponse20017 -> Json.Encode.Value
encodeInlineResponse20017WithTag (tagField, tag) model =
    encodeObject (encodeInlineResponse20017Pairs model ++ [ encode tagField Json.Encode.string tag ])


encodeInlineResponse20017Pairs : InlineResponse20017 -> List EncodedField
encodeInlineResponse20017Pairs model =
    let
        pairs =
            [ maybeEncodeNullable "language" Json.Encode.string model.language
            , maybeEncode "confidence" Json.Encode.float model.confidence
            ]
    in
    pairs


encodeInlineResponse20018 : InlineResponse20018 -> Json.Encode.Value
encodeInlineResponse20018 =
    encodeObject << encodeInlineResponse20018Pairs


encodeInlineResponse20018WithTag : ( String, String ) -> InlineResponse20018 -> Json.Encode.Value
encodeInlineResponse20018WithTag (tagField, tag) model =
    encodeObject (encodeInlineResponse20018Pairs model ++ [ encode tagField Json.Encode.string tag ])


encodeInlineResponse20018Pairs : InlineResponse20018 -> List EncodedField
encodeInlineResponse20018Pairs model =
    let
        pairs =
            [ maybeEncode "document" encodeInlineResponse20018Document model.document
            , maybeEncode "sentences" (Json.Encode.list encodeInlineResponse20018Sentences) model.sentences
            ]
    in
    pairs


encodeInlineResponse20018Document : InlineResponse20018Document -> Json.Encode.Value
encodeInlineResponse20018Document =
    encodeObject << encodeInlineResponse20018DocumentPairs


encodeInlineResponse20018DocumentWithTag : ( String, String ) -> InlineResponse20018Document -> Json.Encode.Value
encodeInlineResponse20018DocumentWithTag (tagField, tag) model =
    encodeObject (encodeInlineResponse20018DocumentPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeInlineResponse20018DocumentPairs : InlineResponse20018Document -> List EncodedField
encodeInlineResponse20018DocumentPairs model =
    let
        pairs =
            [ maybeEncodeNullable "sentiment" Json.Encode.string model.sentiment
            , maybeEncode "confidence" Json.Encode.int model.confidence
            , maybeEncode "average_confidence" Json.Encode.int model.averageConfidence
            ]
    in
    pairs


encodeInlineResponse20018Sentences : InlineResponse20018Sentences -> Json.Encode.Value
encodeInlineResponse20018Sentences =
    encodeObject << encodeInlineResponse20018SentencesPairs


encodeInlineResponse20018SentencesWithTag : ( String, String ) -> InlineResponse20018Sentences -> Json.Encode.Value
encodeInlineResponse20018SentencesWithTag (tagField, tag) model =
    encodeObject (encodeInlineResponse20018SentencesPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeInlineResponse20018SentencesPairs : InlineResponse20018Sentences -> List EncodedField
encodeInlineResponse20018SentencesPairs model =
    let
        pairs =
            [ maybeEncode "length" Json.Encode.int model.length
            , maybeEncodeNullable "sentiment" Json.Encode.string model.sentiment
            , maybeEncode "offset" Json.Encode.int model.offset
            , maybeEncode "confidence" Json.Encode.int model.confidence
            ]
    in
    pairs


encodeInlineResponse20019 : InlineResponse20019 -> Json.Encode.Value
encodeInlineResponse20019 =
    encodeObject << encodeInlineResponse20019Pairs


encodeInlineResponse20019WithTag : ( String, String ) -> InlineResponse20019 -> Json.Encode.Value
encodeInlineResponse20019WithTag (tagField, tag) model =
    encodeObject (encodeInlineResponse20019Pairs model ++ [ encode tagField Json.Encode.string tag ])


encodeInlineResponse20019Pairs : InlineResponse20019 -> List EncodedField
encodeInlineResponse20019Pairs model =
    let
        pairs =
            [ maybeEncode "number_of_words" Json.Encode.int model.numberOfWords
            , maybeEncode "number_of_sentences" Json.Encode.int model.numberOfSentences
            , maybeEncode "readability" encodeInlineResponse20019Readability model.readability
            , maybeEncode "skimmability" encodeInlineResponse20019Skimmability model.skimmability
            , maybeEncode "interestingness" encodeInlineResponse20019Interestingness model.interestingness
            , maybeEncode "style" encodeInlineResponse20019Style model.style
            , maybeEncode "total_score" Json.Encode.float model.totalScore
            ]
    in
    pairs


encodeInlineResponse20019Interestingness : InlineResponse20019Interestingness -> Json.Encode.Value
encodeInlineResponse20019Interestingness =
    encodeObject << encodeInlineResponse20019InterestingnessPairs


encodeInlineResponse20019InterestingnessWithTag : ( String, String ) -> InlineResponse20019Interestingness -> Json.Encode.Value
encodeInlineResponse20019InterestingnessWithTag (tagField, tag) model =
    encodeObject (encodeInlineResponse20019InterestingnessPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeInlineResponse20019InterestingnessPairs : InlineResponse20019Interestingness -> List EncodedField
encodeInlineResponse20019InterestingnessPairs model =
    let
        pairs =
            [ maybeEncode "mainscores" encodeInlineResponse20019SkimmabilityMainscores model.mainscores
            , maybeEncode "subscores" encodeInlineResponse20019InterestingnessSubscores model.subscores
            ]
    in
    pairs


encodeInlineResponse20019InterestingnessSubscores : InlineResponse20019InterestingnessSubscores -> Json.Encode.Value
encodeInlineResponse20019InterestingnessSubscores =
    encodeObject << encodeInlineResponse20019InterestingnessSubscoresPairs


encodeInlineResponse20019InterestingnessSubscoresWithTag : ( String, String ) -> InlineResponse20019InterestingnessSubscores -> Json.Encode.Value
encodeInlineResponse20019InterestingnessSubscoresWithTag (tagField, tag) model =
    encodeObject (encodeInlineResponse20019InterestingnessSubscoresPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeInlineResponse20019InterestingnessSubscoresPairs : InlineResponse20019InterestingnessSubscores -> List EncodedField
encodeInlineResponse20019InterestingnessSubscoresPairs model =
    let
        pairs =
            [ maybeEncode "title_rating_score" (Json.Encode.list Json.Encode.int) model.titleRatingScore
            , maybeEncode "quote_score" (Json.Encode.list Json.Encode.int) model.quoteScore
            , maybeEncode "length_score" (Json.Encode.list Json.Encode.int) model.lengthScore
            , maybeEncode "link_score" (Json.Encode.list Json.Encode.int) model.linkScore
            , maybeEncode "google_hits_score" (Json.Encode.list Json.Encode.int) model.googleHitsScore
            ]
    in
    pairs


encodeInlineResponse20019Readability : InlineResponse20019Readability -> Json.Encode.Value
encodeInlineResponse20019Readability =
    encodeObject << encodeInlineResponse20019ReadabilityPairs


encodeInlineResponse20019ReadabilityWithTag : ( String, String ) -> InlineResponse20019Readability -> Json.Encode.Value
encodeInlineResponse20019ReadabilityWithTag (tagField, tag) model =
    encodeObject (encodeInlineResponse20019ReadabilityPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeInlineResponse20019ReadabilityPairs : InlineResponse20019Readability -> List EncodedField
encodeInlineResponse20019ReadabilityPairs model =
    let
        pairs =
            [ maybeEncode "mainscores" encodeInlineResponse20019ReadabilityMainscores model.mainscores
            , maybeEncode "subscores" encodeInlineResponse20019ReadabilitySubscores model.subscores
            ]
    in
    pairs


encodeInlineResponse20019ReadabilityMainscores : InlineResponse20019ReadabilityMainscores -> Json.Encode.Value
encodeInlineResponse20019ReadabilityMainscores =
    encodeObject << encodeInlineResponse20019ReadabilityMainscoresPairs


encodeInlineResponse20019ReadabilityMainscoresWithTag : ( String, String ) -> InlineResponse20019ReadabilityMainscores -> Json.Encode.Value
encodeInlineResponse20019ReadabilityMainscoresWithTag (tagField, tag) model =
    encodeObject (encodeInlineResponse20019ReadabilityMainscoresPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeInlineResponse20019ReadabilityMainscoresPairs : InlineResponse20019ReadabilityMainscores -> List EncodedField
encodeInlineResponse20019ReadabilityMainscoresPairs model =
    let
        pairs =
            [ maybeEncode "total_possible" Json.Encode.int model.totalPossible
            , maybeEncode "total" Json.Encode.int model.total
            ]
    in
    pairs


encodeInlineResponse20019ReadabilitySubscores : InlineResponse20019ReadabilitySubscores -> Json.Encode.Value
encodeInlineResponse20019ReadabilitySubscores =
    encodeObject << encodeInlineResponse20019ReadabilitySubscoresPairs


encodeInlineResponse20019ReadabilitySubscoresWithTag : ( String, String ) -> InlineResponse20019ReadabilitySubscores -> Json.Encode.Value
encodeInlineResponse20019ReadabilitySubscoresWithTag (tagField, tag) model =
    encodeObject (encodeInlineResponse20019ReadabilitySubscoresPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeInlineResponse20019ReadabilitySubscoresPairs : InlineResponse20019ReadabilitySubscores -> List EncodedField
encodeInlineResponse20019ReadabilitySubscoresPairs model =
    let
        pairs =
            [ maybeEncode "reading_time_seconds" Json.Encode.int model.readingTimeSeconds
            , maybeEncode "forcast" Json.Encode.float model.forcast
            , maybeEncode "flesch" Json.Encode.float model.flesch
            , maybeEncode "smog" Json.Encode.float model.smog
            , maybeEncode "ari" Json.Encode.float model.ari
            , maybeEncode "lix" Json.Encode.float model.lix
            , maybeEncode "coleman_liau" Json.Encode.float model.colemanLiau
            , maybeEncode "kincaid" Json.Encode.float model.kincaid
            , maybeEncode "fog" Json.Encode.float model.fog
            ]
    in
    pairs


encodeInlineResponse20019Skimmability : InlineResponse20019Skimmability -> Json.Encode.Value
encodeInlineResponse20019Skimmability =
    encodeObject << encodeInlineResponse20019SkimmabilityPairs


encodeInlineResponse20019SkimmabilityWithTag : ( String, String ) -> InlineResponse20019Skimmability -> Json.Encode.Value
encodeInlineResponse20019SkimmabilityWithTag (tagField, tag) model =
    encodeObject (encodeInlineResponse20019SkimmabilityPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeInlineResponse20019SkimmabilityPairs : InlineResponse20019Skimmability -> List EncodedField
encodeInlineResponse20019SkimmabilityPairs model =
    let
        pairs =
            [ maybeEncode "mainscores" encodeInlineResponse20019SkimmabilityMainscores model.mainscores
            , maybeEncode "subscores" encodeInlineResponse20019SkimmabilitySubscores model.subscores
            ]
    in
    pairs


encodeInlineResponse20019SkimmabilityMainscores : InlineResponse20019SkimmabilityMainscores -> Json.Encode.Value
encodeInlineResponse20019SkimmabilityMainscores =
    encodeObject << encodeInlineResponse20019SkimmabilityMainscoresPairs


encodeInlineResponse20019SkimmabilityMainscoresWithTag : ( String, String ) -> InlineResponse20019SkimmabilityMainscores -> Json.Encode.Value
encodeInlineResponse20019SkimmabilityMainscoresWithTag (tagField, tag) model =
    encodeObject (encodeInlineResponse20019SkimmabilityMainscoresPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeInlineResponse20019SkimmabilityMainscoresPairs : InlineResponse20019SkimmabilityMainscores -> List EncodedField
encodeInlineResponse20019SkimmabilityMainscoresPairs model =
    let
        pairs =
            [ maybeEncode "total_possible" Json.Encode.int model.totalPossible
            , maybeEncode "total" Json.Encode.float model.total
            ]
    in
    pairs


encodeInlineResponse20019SkimmabilitySubscores : InlineResponse20019SkimmabilitySubscores -> Json.Encode.Value
encodeInlineResponse20019SkimmabilitySubscores =
    encodeObject << encodeInlineResponse20019SkimmabilitySubscoresPairs


encodeInlineResponse20019SkimmabilitySubscoresWithTag : ( String, String ) -> InlineResponse20019SkimmabilitySubscores -> Json.Encode.Value
encodeInlineResponse20019SkimmabilitySubscoresWithTag (tagField, tag) model =
    encodeObject (encodeInlineResponse20019SkimmabilitySubscoresPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeInlineResponse20019SkimmabilitySubscoresPairs : InlineResponse20019SkimmabilitySubscores -> List EncodedField
encodeInlineResponse20019SkimmabilitySubscoresPairs model =
    let
        pairs =
            [ maybeEncode "bullet_point_ratio_score" (Json.Encode.list Json.Encode.int) model.bulletPointRatioScore
            , maybeEncode "image_score" (Json.Encode.list Json.Encode.int) model.imageScore
            , maybeEncode "highlighted_word_ratio_score" (Json.Encode.list Json.Encode.int) model.highlightedWordRatioScore
            , maybeEncode "video_score" (Json.Encode.list Json.Encode.int) model.videoScore
            , maybeEncode "paragraph_score" (Json.Encode.list Json.Encode.int) model.paragraphScore
            , maybeEncode "paragraph_headline_ratio_score" (Json.Encode.list Json.Encode.int) model.paragraphHeadlineRatioScore
            ]
    in
    pairs


encodeInlineResponse20019Style : InlineResponse20019Style -> Json.Encode.Value
encodeInlineResponse20019Style =
    encodeObject << encodeInlineResponse20019StylePairs


encodeInlineResponse20019StyleWithTag : ( String, String ) -> InlineResponse20019Style -> Json.Encode.Value
encodeInlineResponse20019StyleWithTag (tagField, tag) model =
    encodeObject (encodeInlineResponse20019StylePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeInlineResponse20019StylePairs : InlineResponse20019Style -> List EncodedField
encodeInlineResponse20019StylePairs model =
    let
        pairs =
            [ maybeEncode "mainscores" encodeInlineResponse20019ReadabilityMainscores model.mainscores
            , maybeEncode "subscores" encodeInlineResponse20019StyleSubscores model.subscores
            ]
    in
    pairs


encodeInlineResponse20019StyleSubscores : InlineResponse20019StyleSubscores -> Json.Encode.Value
encodeInlineResponse20019StyleSubscores =
    encodeObject << encodeInlineResponse20019StyleSubscoresPairs


encodeInlineResponse20019StyleSubscoresWithTag : ( String, String ) -> InlineResponse20019StyleSubscores -> Json.Encode.Value
encodeInlineResponse20019StyleSubscoresWithTag (tagField, tag) model =
    encodeObject (encodeInlineResponse20019StyleSubscoresPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeInlineResponse20019StyleSubscoresPairs : InlineResponse20019StyleSubscores -> List EncodedField
encodeInlineResponse20019StyleSubscoresPairs model =
    let
        pairs =
            [ maybeEncode "abbreviation_score" (Json.Encode.list Json.Encode.int) model.abbreviationScore
            , maybeEncode "style_score" (Json.Encode.list Json.Encode.int) model.styleScore
            , maybeEncode "spelling_score" (Json.Encode.list Json.Encode.int) model.spellingScore
            ]
    in
    pairs


encodeInlineResponse2002 : InlineResponse2002 -> Json.Encode.Value
encodeInlineResponse2002 =
    encodeObject << encodeInlineResponse2002Pairs


encodeInlineResponse2002WithTag : ( String, String ) -> InlineResponse2002 -> Json.Encode.Value
encodeInlineResponse2002WithTag (tagField, tag) model =
    encodeObject (encodeInlineResponse2002Pairs model ++ [ encode tagField Json.Encode.string tag ])


encodeInlineResponse2002Pairs : InlineResponse2002 -> List EncodedField
encodeInlineResponse2002Pairs model =
    let
        pairs =
            [ maybeEncode "offset" Json.Encode.int model.offset
            , maybeEncode "number" Json.Encode.int model.number
            , maybeEncode "available" Json.Encode.int model.available
            , maybeEncode "news" (Json.Encode.list encodeInlineResponse2002News) model.news
            ]
    in
    pairs


encodeInlineResponse20020 : InlineResponse20020 -> Json.Encode.Value
encodeInlineResponse20020 =
    encodeObject << encodeInlineResponse20020Pairs


encodeInlineResponse20020WithTag : ( String, String ) -> InlineResponse20020 -> Json.Encode.Value
encodeInlineResponse20020WithTag (tagField, tag) model =
    encodeObject (encodeInlineResponse20020Pairs model ++ [ encode tagField Json.Encode.string tag ])


encodeInlineResponse20020Pairs : InlineResponse20020 -> List EncodedField
encodeInlineResponse20020Pairs model =
    let
        pairs =
            [ maybeEncode "readability" encodeInlineResponse20019Readability model.readability
            ]
    in
    pairs


encodeInlineResponse20021 : InlineResponse20021 -> Json.Encode.Value
encodeInlineResponse20021 =
    encodeObject << encodeInlineResponse20021Pairs


encodeInlineResponse20021WithTag : ( String, String ) -> InlineResponse20021 -> Json.Encode.Value
encodeInlineResponse20021WithTag (tagField, tag) model =
    encodeObject (encodeInlineResponse20021Pairs model ++ [ encode tagField Json.Encode.string tag ])


encodeInlineResponse20021Pairs : InlineResponse20021 -> List EncodedField
encodeInlineResponse20021Pairs model =
    let
        pairs =
            [ maybeEncode "dates" (Json.Encode.list encodeInlineResponse20021Dates) model.dates
            ]
    in
    pairs


encodeInlineResponse20021Dates : InlineResponse20021Dates -> Json.Encode.Value
encodeInlineResponse20021Dates =
    encodeObject << encodeInlineResponse20021DatesPairs


encodeInlineResponse20021DatesWithTag : ( String, String ) -> InlineResponse20021Dates -> Json.Encode.Value
encodeInlineResponse20021DatesWithTag (tagField, tag) model =
    encodeObject (encodeInlineResponse20021DatesPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeInlineResponse20021DatesPairs : InlineResponse20021Dates -> List EncodedField
encodeInlineResponse20021DatesPairs model =
    let
        pairs =
            [ maybeEncode "start_position" Json.Encode.int model.startPosition
            , maybeEncodeNullable "date" Json.Encode.string model.date
            , maybeEncode "normalized_date" Json.Encode.float model.normalizedDate
            , maybeEncodeNullable "tag" Json.Encode.string model.tag
            , maybeEncode "end_position" Json.Encode.int model.endPosition
            ]
    in
    pairs


encodeInlineResponse20022 : InlineResponse20022 -> Json.Encode.Value
encodeInlineResponse20022 =
    encodeObject << encodeInlineResponse20022Pairs


encodeInlineResponse20022WithTag : ( String, String ) -> InlineResponse20022 -> Json.Encode.Value
encodeInlineResponse20022WithTag (tagField, tag) model =
    encodeObject (encodeInlineResponse20022Pairs model ++ [ encode tagField Json.Encode.string tag ])


encodeInlineResponse20022Pairs : InlineResponse20022 -> List EncodedField
encodeInlineResponse20022Pairs model =
    let
        pairs =
            [ maybeEncode "synonyms" (Json.Encode.list Json.Encode.string) model.synonyms
            ]
    in
    pairs


encodeInlineResponse20023 : InlineResponse20023 -> Json.Encode.Value
encodeInlineResponse20023 =
    encodeObject << encodeInlineResponse20023Pairs


encodeInlineResponse20023WithTag : ( String, String ) -> InlineResponse20023 -> Json.Encode.Value
encodeInlineResponse20023WithTag (tagField, tag) model =
    encodeObject (encodeInlineResponse20023Pairs model ++ [ encode tagField Json.Encode.string tag ])


encodeInlineResponse20023Pairs : InlineResponse20023 -> List EncodedField
encodeInlineResponse20023Pairs model =
    let
        pairs =
            [ maybeEncodeNullable "tagged_text" Json.Encode.string model.taggedText
            ]
    in
    pairs


encodeInlineResponse20024 : InlineResponse20024 -> Json.Encode.Value
encodeInlineResponse20024 =
    encodeObject << encodeInlineResponse20024Pairs


encodeInlineResponse20024WithTag : ( String, String ) -> InlineResponse20024 -> Json.Encode.Value
encodeInlineResponse20024WithTag (tagField, tag) model =
    encodeObject (encodeInlineResponse20024Pairs model ++ [ encode tagField Json.Encode.string tag ])


encodeInlineResponse20024Pairs : InlineResponse20024 -> List EncodedField
encodeInlineResponse20024Pairs model =
    let
        pairs =
            [ maybeEncodeNullable "original" Json.Encode.string model.original
            , maybeEncodeNullable "stemmed" Json.Encode.string model.stemmed
            ]
    in
    pairs


encodeInlineResponse20025 : InlineResponse20025 -> Json.Encode.Value
encodeInlineResponse20025 =
    encodeObject << encodeInlineResponse20025Pairs


encodeInlineResponse20025WithTag : ( String, String ) -> InlineResponse20025 -> Json.Encode.Value
encodeInlineResponse20025WithTag (tagField, tag) model =
    encodeObject (encodeInlineResponse20025Pairs model ++ [ encode tagField Json.Encode.string tag ])


encodeInlineResponse20025Pairs : InlineResponse20025 -> List EncodedField
encodeInlineResponse20025Pairs model =
    let
        pairs =
            [ maybeEncodeNullable "original" Json.Encode.string model.original
            , maybeEncodeNullable "singular" Json.Encode.string model.singular
            ]
    in
    pairs


encodeInlineResponse20026 : InlineResponse20026 -> Json.Encode.Value
encodeInlineResponse20026 =
    encodeObject << encodeInlineResponse20026Pairs


encodeInlineResponse20026WithTag : ( String, String ) -> InlineResponse20026 -> Json.Encode.Value
encodeInlineResponse20026WithTag (tagField, tag) model =
    encodeObject (encodeInlineResponse20026Pairs model ++ [ encode tagField Json.Encode.string tag ])


encodeInlineResponse20026Pairs : InlineResponse20026 -> List EncodedField
encodeInlineResponse20026Pairs model =
    let
        pairs =
            [ maybeEncodeNullable "original" Json.Encode.string model.original
            , maybeEncodeNullable "plural" Json.Encode.string model.plural
            ]
    in
    pairs


encodeInlineResponse20027 : InlineResponse20027 -> Json.Encode.Value
encodeInlineResponse20027 =
    encodeObject << encodeInlineResponse20027Pairs


encodeInlineResponse20027WithTag : ( String, String ) -> InlineResponse20027 -> Json.Encode.Value
encodeInlineResponse20027WithTag (tagField, tag) model =
    encodeObject (encodeInlineResponse20027Pairs model ++ [ encode tagField Json.Encode.string tag ])


encodeInlineResponse20027Pairs : InlineResponse20027 -> List EncodedField
encodeInlineResponse20027Pairs model =
    let
        pairs =
            [ maybeEncode "entities" (Json.Encode.list encodeInlineResponse20027Entities) model.entities
            ]
    in
    pairs


encodeInlineResponse20027Entities : InlineResponse20027Entities -> Json.Encode.Value
encodeInlineResponse20027Entities =
    encodeObject << encodeInlineResponse20027EntitiesPairs


encodeInlineResponse20027EntitiesWithTag : ( String, String ) -> InlineResponse20027Entities -> Json.Encode.Value
encodeInlineResponse20027EntitiesWithTag (tagField, tag) model =
    encodeObject (encodeInlineResponse20027EntitiesPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeInlineResponse20027EntitiesPairs : InlineResponse20027Entities -> List EncodedField
encodeInlineResponse20027EntitiesPairs model =
    let
        pairs =
            [ maybeEncode "start_position" Json.Encode.int model.startPosition
            , maybeEncodeNullable "image" Json.Encode.string model.image
            , maybeEncodeNullable "type" Json.Encode.string model.type_
            , maybeEncodeNullable "value" Json.Encode.string model.value
            , maybeEncode "end_position" Json.Encode.int model.endPosition
            ]
    in
    pairs


encodeInlineResponse20028 : InlineResponse20028 -> Json.Encode.Value
encodeInlineResponse20028 =
    encodeObject << encodeInlineResponse20028Pairs


encodeInlineResponse20028WithTag : ( String, String ) -> InlineResponse20028 -> Json.Encode.Value
encodeInlineResponse20028WithTag (tagField, tag) model =
    encodeObject (encodeInlineResponse20028Pairs model ++ [ encode tagField Json.Encode.string tag ])


encodeInlineResponse20028Pairs : InlineResponse20028 -> List EncodedField
encodeInlineResponse20028Pairs model =
    let
        pairs =
            [ maybeEncode "images" (Json.Encode.list encodeInlineResponse20028Images) model.images
            ]
    in
    pairs


encodeInlineResponse20028Images : InlineResponse20028Images -> Json.Encode.Value
encodeInlineResponse20028Images =
    encodeObject << encodeInlineResponse20028ImagesPairs


encodeInlineResponse20028ImagesWithTag : ( String, String ) -> InlineResponse20028Images -> Json.Encode.Value
encodeInlineResponse20028ImagesWithTag (tagField, tag) model =
    encodeObject (encodeInlineResponse20028ImagesPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeInlineResponse20028ImagesPairs : InlineResponse20028Images -> List EncodedField
encodeInlineResponse20028ImagesPairs model =
    let
        pairs =
            [ maybeEncode "width" Json.Encode.int model.width
            , maybeEncode "license" encodeInlineResponse20028License model.license
            , maybeEncodeNullable "thumbnail" Json.Encode.string model.thumbnail
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "url" Json.Encode.string model.url
            , maybeEncode "height" Json.Encode.int model.height
            ]
    in
    pairs


encodeInlineResponse20028License : InlineResponse20028License -> Json.Encode.Value
encodeInlineResponse20028License =
    encodeObject << encodeInlineResponse20028LicensePairs


encodeInlineResponse20028LicenseWithTag : ( String, String ) -> InlineResponse20028License -> Json.Encode.Value
encodeInlineResponse20028LicenseWithTag (tagField, tag) model =
    encodeObject (encodeInlineResponse20028LicensePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeInlineResponse20028LicensePairs : InlineResponse20028License -> List EncodedField
encodeInlineResponse20028LicensePairs model =
    let
        pairs =
            [ maybeEncodeNullable "name" Json.Encode.string model.name
            , maybeEncodeNullable "link" Json.Encode.string model.link
            ]
    in
    pairs


encodeInlineResponse20029 : InlineResponse20029 -> Json.Encode.Value
encodeInlineResponse20029 =
    encodeObject << encodeInlineResponse20029Pairs


encodeInlineResponse20029WithTag : ( String, String ) -> InlineResponse20029 -> Json.Encode.Value
encodeInlineResponse20029WithTag (tagField, tag) model =
    encodeObject (encodeInlineResponse20029Pairs model ++ [ encode tagField Json.Encode.string tag ])


encodeInlineResponse20029Pairs : InlineResponse20029 -> List EncodedField
encodeInlineResponse20029Pairs model =
    let
        pairs =
            [ maybeEncodeNullable "specific_color" Json.Encode.string model.specificColor
            , maybeEncodeNullable "main_color" Json.Encode.string model.mainColor
            , maybeEncodeNullable "hex_code" Json.Encode.string model.hexCode
            ]
    in
    pairs


encodeInlineResponse2002News : InlineResponse2002News -> Json.Encode.Value
encodeInlineResponse2002News =
    encodeObject << encodeInlineResponse2002NewsPairs


encodeInlineResponse2002NewsWithTag : ( String, String ) -> InlineResponse2002News -> Json.Encode.Value
encodeInlineResponse2002NewsWithTag (tagField, tag) model =
    encodeObject (encodeInlineResponse2002NewsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeInlineResponse2002NewsPairs : InlineResponse2002News -> List EncodedField
encodeInlineResponse2002NewsPairs model =
    let
        pairs =
            [ maybeEncodeNullable "summary" Json.Encode.string model.summary
            , maybeEncodeNullable "image" Json.Encode.string model.image
            , maybeEncode "sentiment" Json.Encode.float model.sentiment
            , maybeEncodeNullable "source_country" Json.Encode.string model.sourceCountry
            , maybeEncodeNullable "language" Json.Encode.string model.language
            , maybeEncode "id" Json.Encode.int model.id
            , maybeEncodeNullable "text" Json.Encode.string model.text
            , maybeEncodeNullable "title" Json.Encode.string model.title
            , maybeEncodeNullable "publish_date" Json.Encode.string model.publishDate
            , maybeEncodeNullable "url" Json.Encode.string model.url
            , maybeEncode "authors" (Json.Encode.list Json.Encode.string) model.authors
            ]
    in
    pairs


encodeInlineResponse2003 : InlineResponse2003 -> Json.Encode.Value
encodeInlineResponse2003 =
    encodeObject << encodeInlineResponse2003Pairs


encodeInlineResponse2003WithTag : ( String, String ) -> InlineResponse2003 -> Json.Encode.Value
encodeInlineResponse2003WithTag (tagField, tag) model =
    encodeObject (encodeInlineResponse2003Pairs model ++ [ encode tagField Json.Encode.string tag ])


encodeInlineResponse2003Pairs : InlineResponse2003 -> List EncodedField
encodeInlineResponse2003Pairs model =
    let
        pairs =
            [ maybeEncodeNullable "title" Json.Encode.string model.title
            , maybeEncodeNullable "text" Json.Encode.string model.text
            , maybeEncodeNullable "url" Json.Encode.string model.url
            , maybeEncodeNullable "image" Json.Encode.string model.image
            , maybeEncodeNullable "publish_date" Json.Encode.string model.publishDate
            , maybeEncodeNullable "author" Json.Encode.string model.author
            , maybeEncodeNullable "language" Json.Encode.string model.language
            , maybeEncodeNullable "source_country" Json.Encode.string model.sourceCountry
            , maybeEncode "sentiment" Json.Encode.float model.sentiment
            ]
    in
    pairs


encodeInlineResponse20030 : InlineResponse20030 -> Json.Encode.Value
encodeInlineResponse20030 =
    encodeObject << encodeInlineResponse20030Pairs


encodeInlineResponse20030WithTag : ( String, String ) -> InlineResponse20030 -> Json.Encode.Value
encodeInlineResponse20030WithTag (tagField, tag) model =
    encodeObject (encodeInlineResponse20030Pairs model ++ [ encode tagField Json.Encode.string tag ])


encodeInlineResponse20030Pairs : InlineResponse20030 -> List EncodedField
encodeInlineResponse20030Pairs model =
    let
        pairs =
            [ maybeEncode "target_amount" Json.Encode.float model.targetAmount
            , maybeEncodeNullable "target_unit" Json.Encode.string model.targetUnit
            ]
    in
    pairs


encodeInlineResponse20031 : InlineResponse20031 -> Json.Encode.Value
encodeInlineResponse20031 =
    encodeObject << encodeInlineResponse20031Pairs


encodeInlineResponse20031WithTag : ( String, String ) -> InlineResponse20031 -> Json.Encode.Value
encodeInlineResponse20031WithTag (tagField, tag) model =
    encodeObject (encodeInlineResponse20031Pairs model ++ [ encode tagField Json.Encode.string tag ])


encodeInlineResponse20031Pairs : InlineResponse20031 -> List EncodedField
encodeInlineResponse20031Pairs model =
    let
        pairs =
            [ maybeEncodeNullable "value" Json.Encode.string model.value
            ]
    in
    pairs


encodeInlineResponse20032 : InlineResponse20032 -> Json.Encode.Value
encodeInlineResponse20032 =
    encodeObject << encodeInlineResponse20032Pairs


encodeInlineResponse20032WithTag : ( String, String ) -> InlineResponse20032 -> Json.Encode.Value
encodeInlineResponse20032WithTag (tagField, tag) model =
    encodeObject (encodeInlineResponse20032Pairs model ++ [ encode tagField Json.Encode.string tag ])


encodeInlineResponse20032Pairs : InlineResponse20032 -> List EncodedField
encodeInlineResponse20032Pairs model =
    let
        pairs =
            [ maybeEncodeNullable "status" Json.Encode.string model.status
            ]
    in
    pairs


encodeInlineResponse2004 : InlineResponse2004 -> Json.Encode.Value
encodeInlineResponse2004 =
    encodeObject << encodeInlineResponse2004Pairs


encodeInlineResponse2004WithTag : ( String, String ) -> InlineResponse2004 -> Json.Encode.Value
encodeInlineResponse2004WithTag (tagField, tag) model =
    encodeObject (encodeInlineResponse2004Pairs model ++ [ encode tagField Json.Encode.string tag ])


encodeInlineResponse2004Pairs : InlineResponse2004 -> List EncodedField
encodeInlineResponse2004Pairs model =
    let
        pairs =
            [ maybeEncode "jokes" (Json.Encode.list encodeInlineResponse2004Jokes) model.jokes
            , maybeEncode "available" Json.Encode.int model.available
            ]
    in
    pairs


encodeInlineResponse2004Jokes : InlineResponse2004Jokes -> Json.Encode.Value
encodeInlineResponse2004Jokes =
    encodeObject << encodeInlineResponse2004JokesPairs


encodeInlineResponse2004JokesWithTag : ( String, String ) -> InlineResponse2004Jokes -> Json.Encode.Value
encodeInlineResponse2004JokesWithTag (tagField, tag) model =
    encodeObject (encodeInlineResponse2004JokesPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeInlineResponse2004JokesPairs : InlineResponse2004Jokes -> List EncodedField
encodeInlineResponse2004JokesPairs model =
    let
        pairs =
            [ maybeEncodeNullable "joke" Json.Encode.string model.joke
            ]
    in
    pairs


encodeInlineResponse2005 : InlineResponse2005 -> Json.Encode.Value
encodeInlineResponse2005 =
    encodeObject << encodeInlineResponse2005Pairs


encodeInlineResponse2005WithTag : ( String, String ) -> InlineResponse2005 -> Json.Encode.Value
encodeInlineResponse2005WithTag (tagField, tag) model =
    encodeObject (encodeInlineResponse2005Pairs model ++ [ encode tagField Json.Encode.string tag ])


encodeInlineResponse2005Pairs : InlineResponse2005 -> List EncodedField
encodeInlineResponse2005Pairs model =
    let
        pairs =
            [ maybeEncode "memes" (Json.Encode.list encodeInlineResponse2005Memes) model.memes
            , maybeEncode "available" Json.Encode.int model.available
            ]
    in
    pairs


encodeInlineResponse2005Memes : InlineResponse2005Memes -> Json.Encode.Value
encodeInlineResponse2005Memes =
    encodeObject << encodeInlineResponse2005MemesPairs


encodeInlineResponse2005MemesWithTag : ( String, String ) -> InlineResponse2005Memes -> Json.Encode.Value
encodeInlineResponse2005MemesWithTag (tagField, tag) model =
    encodeObject (encodeInlineResponse2005MemesPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeInlineResponse2005MemesPairs : InlineResponse2005Memes -> List EncodedField
encodeInlineResponse2005MemesPairs model =
    let
        pairs =
            [ maybeEncodeNullable "type" Json.Encode.string model.type_
            , maybeEncodeNullable "description" Json.Encode.string model.description
            , maybeEncodeNullable "url" Json.Encode.string model.url
            ]
    in
    pairs


encodeInlineResponse2006 : InlineResponse2006 -> Json.Encode.Value
encodeInlineResponse2006 =
    encodeObject << encodeInlineResponse2006Pairs


encodeInlineResponse2006WithTag : ( String, String ) -> InlineResponse2006 -> Json.Encode.Value
encodeInlineResponse2006WithTag (tagField, tag) model =
    encodeObject (encodeInlineResponse2006Pairs model ++ [ encode tagField Json.Encode.string tag ])


encodeInlineResponse2006Pairs : InlineResponse2006 -> List EncodedField
encodeInlineResponse2006Pairs model =
    let
        pairs =
            [ maybeEncodeNullable "description" Json.Encode.string model.description
            , maybeEncodeNullable "url" Json.Encode.string model.url
            , maybeEncodeNullable "type" Json.Encode.string model.type_
            , maybeEncode "width" Json.Encode.int model.width
            , maybeEncode "height" Json.Encode.int model.height
            , maybeEncode "ratio" Json.Encode.float model.ratio
            ]
    in
    pairs


encodeInlineResponse2007 : InlineResponse2007 -> Json.Encode.Value
encodeInlineResponse2007 =
    encodeObject << encodeInlineResponse2007Pairs


encodeInlineResponse2007WithTag : ( String, String ) -> InlineResponse2007 -> Json.Encode.Value
encodeInlineResponse2007WithTag (tagField, tag) model =
    encodeObject (encodeInlineResponse2007Pairs model ++ [ encode tagField Json.Encode.string tag ])


encodeInlineResponse2007Pairs : InlineResponse2007 -> List EncodedField
encodeInlineResponse2007Pairs model =
    let
        pairs =
            [ maybeEncode "images" (Json.Encode.list encodeInlineResponse2007Images) model.images
            ]
    in
    pairs


encodeInlineResponse2007Images : InlineResponse2007Images -> Json.Encode.Value
encodeInlineResponse2007Images =
    encodeObject << encodeInlineResponse2007ImagesPairs


encodeInlineResponse2007ImagesWithTag : ( String, String ) -> InlineResponse2007Images -> Json.Encode.Value
encodeInlineResponse2007ImagesWithTag (tagField, tag) model =
    encodeObject (encodeInlineResponse2007ImagesPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeInlineResponse2007ImagesPairs : InlineResponse2007Images -> List EncodedField
encodeInlineResponse2007ImagesPairs model =
    let
        pairs =
            [ maybeEncode "width" Json.Encode.int model.width
            , maybeEncodeNullable "url" Json.Encode.string model.url
            , maybeEncode "height" Json.Encode.int model.height
            ]
    in
    pairs


encodeInlineResponse2008 : InlineResponse2008 -> Json.Encode.Value
encodeInlineResponse2008 =
    encodeObject << encodeInlineResponse2008Pairs


encodeInlineResponse2008WithTag : ( String, String ) -> InlineResponse2008 -> Json.Encode.Value
encodeInlineResponse2008WithTag (tagField, tag) model =
    encodeObject (encodeInlineResponse2008Pairs model ++ [ encode tagField Json.Encode.string tag ])


encodeInlineResponse2008Pairs : InlineResponse2008 -> List EncodedField
encodeInlineResponse2008Pairs model =
    let
        pairs =
            [ maybeEncodeNullable "word" Json.Encode.string model.word
            , maybeEncode "rating" Json.Encode.float model.rating
            ]
    in
    pairs


encodeInlineResponse2009 : InlineResponse2009 -> Json.Encode.Value
encodeInlineResponse2009 =
    encodeObject << encodeInlineResponse2009Pairs


encodeInlineResponse2009WithTag : ( String, String ) -> InlineResponse2009 -> Json.Encode.Value
encodeInlineResponse2009WithTag (tagField, tag) model =
    encodeObject (encodeInlineResponse2009Pairs model ++ [ encode tagField Json.Encode.string tag ])


encodeInlineResponse2009Pairs : InlineResponse2009 -> List EncodedField
encodeInlineResponse2009Pairs model =
    let
        pairs =
            [ maybeEncodeNullable "trivia" Json.Encode.string model.trivia
            ]
    in
    pairs


encodeInlineResponse200Books : InlineResponse200Books -> Json.Encode.Value
encodeInlineResponse200Books =
    encodeObject << encodeInlineResponse200BooksPairs


encodeInlineResponse200BooksWithTag : ( String, String ) -> InlineResponse200Books -> Json.Encode.Value
encodeInlineResponse200BooksWithTag (tagField, tag) model =
    encodeObject (encodeInlineResponse200BooksPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeInlineResponse200BooksPairs : InlineResponse200Books -> List EncodedField
encodeInlineResponse200BooksPairs model =
    let
        pairs =
            [ maybeEncodeNullable "title" Json.Encode.string model.title
            , maybeEncodeNullable "image" Json.Encode.string model.image
            , maybeEncode "id" Json.Encode.int model.id
            ]
    in
    pairs


-- DECODER


inlineResponse200Decoder : Json.Decode.Decoder InlineResponse200
inlineResponse200Decoder =
    Json.Decode.succeed InlineResponse200
        |> maybeDecode "available" Json.Decode.int Nothing
        |> maybeDecode "number" Json.Decode.int Nothing
        |> maybeDecode "offset" Json.Decode.int Nothing
        |> maybeDecode "books" (Json.Decode.list inlineResponse200BooksDecoder) Nothing


inlineResponse2001Decoder : Json.Decode.Decoder InlineResponse2001
inlineResponse2001Decoder =
    Json.Decode.succeed InlineResponse2001
        |> maybeDecode "similar_books" (Json.Decode.list inlineResponse200BooksDecoder) Nothing


inlineResponse20010Decoder : Json.Decode.Decoder InlineResponse20010
inlineResponse20010Decoder =
    Json.Decode.succeed InlineResponse20010
        |> maybeDecodeNullable "author" Json.Decode.string Nothing
        |> maybeDecodeNullable "quote" Json.Decode.string Nothing


inlineResponse20011Decoder : Json.Decode.Decoder InlineResponse20011
inlineResponse20011Decoder =
    Json.Decode.succeed InlineResponse20011
        |> maybeDecodeNullable "title" Json.Decode.string Nothing
        |> maybeDecodeNullable "author" Json.Decode.string Nothing
        |> maybeDecodeNullable "poem" Json.Decode.string Nothing


inlineResponse20012Decoder : Json.Decode.Decoder InlineResponse20012
inlineResponse20012Decoder =
    Json.Decode.succeed InlineResponse20012
        |> maybeDecodeNullable "title" Json.Decode.string Nothing
        |> maybeDecodeNullable "main_text" Json.Decode.string Nothing
        |> maybeDecodeNullable "main_html" Json.Decode.string Nothing
        |> maybeDecode "images" (Json.Decode.list Json.Decode.string) Nothing


inlineResponse20013Decoder : Json.Decode.Decoder InlineResponse20013
inlineResponse20013Decoder =
    Json.Decode.succeed InlineResponse20013
        |> maybeDecodeNullable "publish_date" Json.Decode.string Nothing


inlineResponse20014Decoder : Json.Decode.Decoder InlineResponse20014
inlineResponse20014Decoder =
    Json.Decode.succeed InlineResponse20014
        |> maybeDecode "authors" (Json.Decode.list inlineResponse20014AuthorsDecoder) Nothing


inlineResponse20014AuthorsDecoder : Json.Decode.Decoder InlineResponse20014Authors
inlineResponse20014AuthorsDecoder =
    Json.Decode.succeed InlineResponse20014Authors
        |> maybeDecodeNullable "link" Json.Decode.string Nothing
        |> maybeDecodeNullable "name" Json.Decode.string Nothing


inlineResponse20015Decoder : Json.Decode.Decoder InlineResponse20015
inlineResponse20015Decoder =
    Json.Decode.succeed InlineResponse20015
        |> maybeDecode "results" (Json.Decode.list inlineResponse20015ResultsDecoder) Nothing


inlineResponse20015ResultsDecoder : Json.Decode.Decoder InlineResponse20015Results
inlineResponse20015ResultsDecoder =
    Json.Decode.succeed InlineResponse20015Results
        |> maybeDecodeNullable "title" Json.Decode.string Nothing
        |> maybeDecodeNullable "summary" Json.Decode.string Nothing
        |> maybeDecodeNullable "url" Json.Decode.string Nothing


inlineResponse20016Decoder : Json.Decode.Decoder InlineResponse20016
inlineResponse20016Decoder =
    Json.Decode.succeed InlineResponse20016
        |> maybeDecodeNullable "corrected_text" Json.Decode.string Nothing


inlineResponse20017Decoder : Json.Decode.Decoder InlineResponse20017
inlineResponse20017Decoder =
    Json.Decode.succeed InlineResponse20017
        |> maybeDecodeNullable "language" Json.Decode.string Nothing
        |> maybeDecode "confidence" Json.Decode.float Nothing


inlineResponse20018Decoder : Json.Decode.Decoder InlineResponse20018
inlineResponse20018Decoder =
    Json.Decode.succeed InlineResponse20018
        |> maybeDecode "document" inlineResponse20018DocumentDecoder Nothing
        |> maybeDecode "sentences" (Json.Decode.list inlineResponse20018SentencesDecoder) Nothing


inlineResponse20018DocumentDecoder : Json.Decode.Decoder InlineResponse20018Document
inlineResponse20018DocumentDecoder =
    Json.Decode.succeed InlineResponse20018Document
        |> maybeDecodeNullable "sentiment" Json.Decode.string Nothing
        |> maybeDecode "confidence" Json.Decode.int Nothing
        |> maybeDecode "average_confidence" Json.Decode.int Nothing


inlineResponse20018SentencesDecoder : Json.Decode.Decoder InlineResponse20018Sentences
inlineResponse20018SentencesDecoder =
    Json.Decode.succeed InlineResponse20018Sentences
        |> maybeDecode "length" Json.Decode.int Nothing
        |> maybeDecodeNullable "sentiment" Json.Decode.string Nothing
        |> maybeDecode "offset" Json.Decode.int Nothing
        |> maybeDecode "confidence" Json.Decode.int Nothing


inlineResponse20019Decoder : Json.Decode.Decoder InlineResponse20019
inlineResponse20019Decoder =
    Json.Decode.succeed InlineResponse20019
        |> maybeDecode "number_of_words" Json.Decode.int Nothing
        |> maybeDecode "number_of_sentences" Json.Decode.int Nothing
        |> maybeDecode "readability" inlineResponse20019ReadabilityDecoder Nothing
        |> maybeDecode "skimmability" inlineResponse20019SkimmabilityDecoder Nothing
        |> maybeDecode "interestingness" inlineResponse20019InterestingnessDecoder Nothing
        |> maybeDecode "style" inlineResponse20019StyleDecoder Nothing
        |> maybeDecode "total_score" Json.Decode.float Nothing


inlineResponse20019InterestingnessDecoder : Json.Decode.Decoder InlineResponse20019Interestingness
inlineResponse20019InterestingnessDecoder =
    Json.Decode.succeed InlineResponse20019Interestingness
        |> maybeDecode "mainscores" inlineResponse20019SkimmabilityMainscoresDecoder Nothing
        |> maybeDecode "subscores" inlineResponse20019InterestingnessSubscoresDecoder Nothing


inlineResponse20019InterestingnessSubscoresDecoder : Json.Decode.Decoder InlineResponse20019InterestingnessSubscores
inlineResponse20019InterestingnessSubscoresDecoder =
    Json.Decode.succeed InlineResponse20019InterestingnessSubscores
        |> maybeDecode "title_rating_score" (Json.Decode.list Json.Decode.int) Nothing
        |> maybeDecode "quote_score" (Json.Decode.list Json.Decode.int) Nothing
        |> maybeDecode "length_score" (Json.Decode.list Json.Decode.int) Nothing
        |> maybeDecode "link_score" (Json.Decode.list Json.Decode.int) Nothing
        |> maybeDecode "google_hits_score" (Json.Decode.list Json.Decode.int) Nothing


inlineResponse20019ReadabilityDecoder : Json.Decode.Decoder InlineResponse20019Readability
inlineResponse20019ReadabilityDecoder =
    Json.Decode.succeed InlineResponse20019Readability
        |> maybeDecode "mainscores" inlineResponse20019ReadabilityMainscoresDecoder Nothing
        |> maybeDecode "subscores" inlineResponse20019ReadabilitySubscoresDecoder Nothing


inlineResponse20019ReadabilityMainscoresDecoder : Json.Decode.Decoder InlineResponse20019ReadabilityMainscores
inlineResponse20019ReadabilityMainscoresDecoder =
    Json.Decode.succeed InlineResponse20019ReadabilityMainscores
        |> maybeDecode "total_possible" Json.Decode.int Nothing
        |> maybeDecode "total" Json.Decode.int Nothing


inlineResponse20019ReadabilitySubscoresDecoder : Json.Decode.Decoder InlineResponse20019ReadabilitySubscores
inlineResponse20019ReadabilitySubscoresDecoder =
    Json.Decode.succeed InlineResponse20019ReadabilitySubscores
        |> maybeDecode "reading_time_seconds" Json.Decode.int Nothing
        |> maybeDecode "forcast" Json.Decode.float Nothing
        |> maybeDecode "flesch" Json.Decode.float Nothing
        |> maybeDecode "smog" Json.Decode.float Nothing
        |> maybeDecode "ari" Json.Decode.float Nothing
        |> maybeDecode "lix" Json.Decode.float Nothing
        |> maybeDecode "coleman_liau" Json.Decode.float Nothing
        |> maybeDecode "kincaid" Json.Decode.float Nothing
        |> maybeDecode "fog" Json.Decode.float Nothing


inlineResponse20019SkimmabilityDecoder : Json.Decode.Decoder InlineResponse20019Skimmability
inlineResponse20019SkimmabilityDecoder =
    Json.Decode.succeed InlineResponse20019Skimmability
        |> maybeDecode "mainscores" inlineResponse20019SkimmabilityMainscoresDecoder Nothing
        |> maybeDecode "subscores" inlineResponse20019SkimmabilitySubscoresDecoder Nothing


inlineResponse20019SkimmabilityMainscoresDecoder : Json.Decode.Decoder InlineResponse20019SkimmabilityMainscores
inlineResponse20019SkimmabilityMainscoresDecoder =
    Json.Decode.succeed InlineResponse20019SkimmabilityMainscores
        |> maybeDecode "total_possible" Json.Decode.int Nothing
        |> maybeDecode "total" Json.Decode.float Nothing


inlineResponse20019SkimmabilitySubscoresDecoder : Json.Decode.Decoder InlineResponse20019SkimmabilitySubscores
inlineResponse20019SkimmabilitySubscoresDecoder =
    Json.Decode.succeed InlineResponse20019SkimmabilitySubscores
        |> maybeDecode "bullet_point_ratio_score" (Json.Decode.list Json.Decode.int) Nothing
        |> maybeDecode "image_score" (Json.Decode.list Json.Decode.int) Nothing
        |> maybeDecode "highlighted_word_ratio_score" (Json.Decode.list Json.Decode.int) Nothing
        |> maybeDecode "video_score" (Json.Decode.list Json.Decode.int) Nothing
        |> maybeDecode "paragraph_score" (Json.Decode.list Json.Decode.int) Nothing
        |> maybeDecode "paragraph_headline_ratio_score" (Json.Decode.list Json.Decode.int) Nothing


inlineResponse20019StyleDecoder : Json.Decode.Decoder InlineResponse20019Style
inlineResponse20019StyleDecoder =
    Json.Decode.succeed InlineResponse20019Style
        |> maybeDecode "mainscores" inlineResponse20019ReadabilityMainscoresDecoder Nothing
        |> maybeDecode "subscores" inlineResponse20019StyleSubscoresDecoder Nothing


inlineResponse20019StyleSubscoresDecoder : Json.Decode.Decoder InlineResponse20019StyleSubscores
inlineResponse20019StyleSubscoresDecoder =
    Json.Decode.succeed InlineResponse20019StyleSubscores
        |> maybeDecode "abbreviation_score" (Json.Decode.list Json.Decode.int) Nothing
        |> maybeDecode "style_score" (Json.Decode.list Json.Decode.int) Nothing
        |> maybeDecode "spelling_score" (Json.Decode.list Json.Decode.int) Nothing


inlineResponse2002Decoder : Json.Decode.Decoder InlineResponse2002
inlineResponse2002Decoder =
    Json.Decode.succeed InlineResponse2002
        |> maybeDecode "offset" Json.Decode.int Nothing
        |> maybeDecode "number" Json.Decode.int Nothing
        |> maybeDecode "available" Json.Decode.int Nothing
        |> maybeDecode "news" (Json.Decode.list inlineResponse2002NewsDecoder) Nothing


inlineResponse20020Decoder : Json.Decode.Decoder InlineResponse20020
inlineResponse20020Decoder =
    Json.Decode.succeed InlineResponse20020
        |> maybeDecode "readability" inlineResponse20019ReadabilityDecoder Nothing


inlineResponse20021Decoder : Json.Decode.Decoder InlineResponse20021
inlineResponse20021Decoder =
    Json.Decode.succeed InlineResponse20021
        |> maybeDecode "dates" (Json.Decode.list inlineResponse20021DatesDecoder) Nothing


inlineResponse20021DatesDecoder : Json.Decode.Decoder InlineResponse20021Dates
inlineResponse20021DatesDecoder =
    Json.Decode.succeed InlineResponse20021Dates
        |> maybeDecode "start_position" Json.Decode.int Nothing
        |> maybeDecodeNullable "date" Json.Decode.string Nothing
        |> maybeDecode "normalized_date" Json.Decode.float Nothing
        |> maybeDecodeNullable "tag" Json.Decode.string Nothing
        |> maybeDecode "end_position" Json.Decode.int Nothing


inlineResponse20022Decoder : Json.Decode.Decoder InlineResponse20022
inlineResponse20022Decoder =
    Json.Decode.succeed InlineResponse20022
        |> maybeDecode "synonyms" (Json.Decode.list Json.Decode.string) Nothing


inlineResponse20023Decoder : Json.Decode.Decoder InlineResponse20023
inlineResponse20023Decoder =
    Json.Decode.succeed InlineResponse20023
        |> maybeDecodeNullable "tagged_text" Json.Decode.string Nothing


inlineResponse20024Decoder : Json.Decode.Decoder InlineResponse20024
inlineResponse20024Decoder =
    Json.Decode.succeed InlineResponse20024
        |> maybeDecodeNullable "original" Json.Decode.string Nothing
        |> maybeDecodeNullable "stemmed" Json.Decode.string Nothing


inlineResponse20025Decoder : Json.Decode.Decoder InlineResponse20025
inlineResponse20025Decoder =
    Json.Decode.succeed InlineResponse20025
        |> maybeDecodeNullable "original" Json.Decode.string Nothing
        |> maybeDecodeNullable "singular" Json.Decode.string Nothing


inlineResponse20026Decoder : Json.Decode.Decoder InlineResponse20026
inlineResponse20026Decoder =
    Json.Decode.succeed InlineResponse20026
        |> maybeDecodeNullable "original" Json.Decode.string Nothing
        |> maybeDecodeNullable "plural" Json.Decode.string Nothing


inlineResponse20027Decoder : Json.Decode.Decoder InlineResponse20027
inlineResponse20027Decoder =
    Json.Decode.succeed InlineResponse20027
        |> maybeDecode "entities" (Json.Decode.list inlineResponse20027EntitiesDecoder) Nothing


inlineResponse20027EntitiesDecoder : Json.Decode.Decoder InlineResponse20027Entities
inlineResponse20027EntitiesDecoder =
    Json.Decode.succeed InlineResponse20027Entities
        |> maybeDecode "start_position" Json.Decode.int Nothing
        |> maybeDecodeNullable "image" Json.Decode.string Nothing
        |> maybeDecodeNullable "type" Json.Decode.string Nothing
        |> maybeDecodeNullable "value" Json.Decode.string Nothing
        |> maybeDecode "end_position" Json.Decode.int Nothing


inlineResponse20028Decoder : Json.Decode.Decoder InlineResponse20028
inlineResponse20028Decoder =
    Json.Decode.succeed InlineResponse20028
        |> maybeDecode "images" (Json.Decode.list inlineResponse20028ImagesDecoder) Nothing


inlineResponse20028ImagesDecoder : Json.Decode.Decoder InlineResponse20028Images
inlineResponse20028ImagesDecoder =
    Json.Decode.succeed InlineResponse20028Images
        |> maybeDecode "width" Json.Decode.int Nothing
        |> maybeDecode "license" inlineResponse20028LicenseDecoder Nothing
        |> maybeDecodeNullable "thumbnail" Json.Decode.string Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "url" Json.Decode.string Nothing
        |> maybeDecode "height" Json.Decode.int Nothing


inlineResponse20028LicenseDecoder : Json.Decode.Decoder InlineResponse20028License
inlineResponse20028LicenseDecoder =
    Json.Decode.succeed InlineResponse20028License
        |> maybeDecodeNullable "name" Json.Decode.string Nothing
        |> maybeDecodeNullable "link" Json.Decode.string Nothing


inlineResponse20029Decoder : Json.Decode.Decoder InlineResponse20029
inlineResponse20029Decoder =
    Json.Decode.succeed InlineResponse20029
        |> maybeDecodeNullable "specific_color" Json.Decode.string Nothing
        |> maybeDecodeNullable "main_color" Json.Decode.string Nothing
        |> maybeDecodeNullable "hex_code" Json.Decode.string Nothing


inlineResponse2002NewsDecoder : Json.Decode.Decoder InlineResponse2002News
inlineResponse2002NewsDecoder =
    Json.Decode.succeed InlineResponse2002News
        |> maybeDecodeNullable "summary" Json.Decode.string Nothing
        |> maybeDecodeNullable "image" Json.Decode.string Nothing
        |> maybeDecode "sentiment" Json.Decode.float Nothing
        |> maybeDecodeNullable "source_country" Json.Decode.string Nothing
        |> maybeDecodeNullable "language" Json.Decode.string Nothing
        |> maybeDecode "id" Json.Decode.int Nothing
        |> maybeDecodeNullable "text" Json.Decode.string Nothing
        |> maybeDecodeNullable "title" Json.Decode.string Nothing
        |> maybeDecodeNullable "publish_date" Json.Decode.string Nothing
        |> maybeDecodeNullable "url" Json.Decode.string Nothing
        |> maybeDecode "authors" (Json.Decode.list Json.Decode.string) Nothing


inlineResponse2003Decoder : Json.Decode.Decoder InlineResponse2003
inlineResponse2003Decoder =
    Json.Decode.succeed InlineResponse2003
        |> maybeDecodeNullable "title" Json.Decode.string Nothing
        |> maybeDecodeNullable "text" Json.Decode.string Nothing
        |> maybeDecodeNullable "url" Json.Decode.string Nothing
        |> maybeDecodeNullable "image" Json.Decode.string Nothing
        |> maybeDecodeNullable "publish_date" Json.Decode.string Nothing
        |> maybeDecodeNullable "author" Json.Decode.string Nothing
        |> maybeDecodeNullable "language" Json.Decode.string Nothing
        |> maybeDecodeNullable "source_country" Json.Decode.string Nothing
        |> maybeDecode "sentiment" Json.Decode.float Nothing


inlineResponse20030Decoder : Json.Decode.Decoder InlineResponse20030
inlineResponse20030Decoder =
    Json.Decode.succeed InlineResponse20030
        |> maybeDecode "target_amount" Json.Decode.float Nothing
        |> maybeDecodeNullable "target_unit" Json.Decode.string Nothing


inlineResponse20031Decoder : Json.Decode.Decoder InlineResponse20031
inlineResponse20031Decoder =
    Json.Decode.succeed InlineResponse20031
        |> maybeDecodeNullable "value" Json.Decode.string Nothing


inlineResponse20032Decoder : Json.Decode.Decoder InlineResponse20032
inlineResponse20032Decoder =
    Json.Decode.succeed InlineResponse20032
        |> maybeDecodeNullable "status" Json.Decode.string Nothing


inlineResponse2004Decoder : Json.Decode.Decoder InlineResponse2004
inlineResponse2004Decoder =
    Json.Decode.succeed InlineResponse2004
        |> maybeDecode "jokes" (Json.Decode.list inlineResponse2004JokesDecoder) Nothing
        |> maybeDecode "available" Json.Decode.int Nothing


inlineResponse2004JokesDecoder : Json.Decode.Decoder InlineResponse2004Jokes
inlineResponse2004JokesDecoder =
    Json.Decode.succeed InlineResponse2004Jokes
        |> maybeDecodeNullable "joke" Json.Decode.string Nothing


inlineResponse2005Decoder : Json.Decode.Decoder InlineResponse2005
inlineResponse2005Decoder =
    Json.Decode.succeed InlineResponse2005
        |> maybeDecode "memes" (Json.Decode.list inlineResponse2005MemesDecoder) Nothing
        |> maybeDecode "available" Json.Decode.int Nothing


inlineResponse2005MemesDecoder : Json.Decode.Decoder InlineResponse2005Memes
inlineResponse2005MemesDecoder =
    Json.Decode.succeed InlineResponse2005Memes
        |> maybeDecodeNullable "type" Json.Decode.string Nothing
        |> maybeDecodeNullable "description" Json.Decode.string Nothing
        |> maybeDecodeNullable "url" Json.Decode.string Nothing


inlineResponse2006Decoder : Json.Decode.Decoder InlineResponse2006
inlineResponse2006Decoder =
    Json.Decode.succeed InlineResponse2006
        |> maybeDecodeNullable "description" Json.Decode.string Nothing
        |> maybeDecodeNullable "url" Json.Decode.string Nothing
        |> maybeDecodeNullable "type" Json.Decode.string Nothing
        |> maybeDecode "width" Json.Decode.int Nothing
        |> maybeDecode "height" Json.Decode.int Nothing
        |> maybeDecode "ratio" Json.Decode.float Nothing


inlineResponse2007Decoder : Json.Decode.Decoder InlineResponse2007
inlineResponse2007Decoder =
    Json.Decode.succeed InlineResponse2007
        |> maybeDecode "images" (Json.Decode.list inlineResponse2007ImagesDecoder) Nothing


inlineResponse2007ImagesDecoder : Json.Decode.Decoder InlineResponse2007Images
inlineResponse2007ImagesDecoder =
    Json.Decode.succeed InlineResponse2007Images
        |> maybeDecode "width" Json.Decode.int Nothing
        |> maybeDecodeNullable "url" Json.Decode.string Nothing
        |> maybeDecode "height" Json.Decode.int Nothing


inlineResponse2008Decoder : Json.Decode.Decoder InlineResponse2008
inlineResponse2008Decoder =
    Json.Decode.succeed InlineResponse2008
        |> maybeDecodeNullable "word" Json.Decode.string Nothing
        |> maybeDecode "rating" Json.Decode.float Nothing


inlineResponse2009Decoder : Json.Decode.Decoder InlineResponse2009
inlineResponse2009Decoder =
    Json.Decode.succeed InlineResponse2009
        |> maybeDecodeNullable "trivia" Json.Decode.string Nothing


inlineResponse200BooksDecoder : Json.Decode.Decoder InlineResponse200Books
inlineResponse200BooksDecoder =
    Json.Decode.succeed InlineResponse200Books
        |> maybeDecodeNullable "title" Json.Decode.string Nothing
        |> maybeDecodeNullable "image" Json.Decode.string Nothing
        |> maybeDecode "id" Json.Decode.int Nothing




-- HELPER


type alias EncodedField =
    Maybe ( String, Json.Encode.Value )


encodeObject : List EncodedField -> Json.Encode.Value
encodeObject =
    Json.Encode.object << List.filterMap identity


encode : String -> (a -> Json.Encode.Value) -> a -> EncodedField
encode key encoder value =
    Just ( key, encoder value )


encodeNullable : String -> (a -> Json.Encode.Value) -> Maybe a -> EncodedField
encodeNullable key encoder value =
    Just ( key, Maybe.withDefault Json.Encode.null (Maybe.map encoder value) )


maybeEncode : String -> (a -> Json.Encode.Value) -> Maybe a -> EncodedField
maybeEncode key encoder =
    Maybe.map (Tuple.pair key << encoder)


maybeEncodeNullable : String -> (a -> Json.Encode.Value) -> Maybe a -> EncodedField
maybeEncodeNullable =
    encodeNullable


decode : String -> Json.Decode.Decoder a -> Json.Decode.Decoder (a -> b) -> Json.Decode.Decoder b
decode key decoder =
    decodeChain (Json.Decode.field key decoder)


decodeLazy : (a -> c) -> String -> Json.Decode.Decoder a -> Json.Decode.Decoder (c -> b) -> Json.Decode.Decoder b
decodeLazy f key decoder =
    decodeChainLazy f (Json.Decode.field key decoder)


decodeNullable : String -> Json.Decode.Decoder a -> Json.Decode.Decoder (Maybe a -> b) -> Json.Decode.Decoder b
decodeNullable key decoder =
    decodeChain (maybeField key decoder Nothing)


decodeNullableLazy : (Maybe a -> c) -> String -> Json.Decode.Decoder a -> Json.Decode.Decoder (c -> b) -> Json.Decode.Decoder b
decodeNullableLazy f key decoder =
    decodeChainLazy f (maybeField key decoder Nothing)


maybeDecode : String -> Json.Decode.Decoder a -> Maybe a -> Json.Decode.Decoder (Maybe a -> b) -> Json.Decode.Decoder b
maybeDecode key decoder fallback =
    -- let's be kind to null-values as well
    decodeChain (maybeField key decoder fallback)


maybeDecodeLazy : (Maybe a -> c) -> String -> Json.Decode.Decoder a -> Maybe a -> Json.Decode.Decoder (c -> b) -> Json.Decode.Decoder b
maybeDecodeLazy f key decoder fallback =
    -- let's be kind to null-values as well
    decodeChainLazy f (maybeField key decoder fallback)


maybeDecodeNullable : String -> Json.Decode.Decoder a -> Maybe a -> Json.Decode.Decoder (Maybe a -> b) -> Json.Decode.Decoder b
maybeDecodeNullable key decoder fallback =
    decodeChain (maybeField key decoder fallback)


maybeDecodeNullableLazy : (Maybe a -> c) -> String -> Json.Decode.Decoder a -> Maybe a -> Json.Decode.Decoder (c -> b) -> Json.Decode.Decoder b
maybeDecodeNullableLazy f key decoder fallback =
    decodeChainLazy f (maybeField key decoder fallback)


maybeField : String -> Json.Decode.Decoder a -> Maybe a -> Json.Decode.Decoder (Maybe a)
maybeField key decoder fallback =
    let
        fieldDecoder =
            Json.Decode.field key Json.Decode.value

        valueDecoder =
            Json.Decode.oneOf [ Json.Decode.map Just decoder, Json.Decode.null fallback ]

        decodeObject rawObject =
            case Json.Decode.decodeValue fieldDecoder rawObject of
                Ok rawValue ->
                    case Json.Decode.decodeValue valueDecoder rawValue of
                        Ok value ->
                            Json.Decode.succeed value

                        Err error ->
                            Json.Decode.fail (Json.Decode.errorToString error)

                Err _ ->
                    Json.Decode.succeed fallback
    in
    Json.Decode.value
        |> Json.Decode.andThen decodeObject


decodeChain : Json.Decode.Decoder a -> Json.Decode.Decoder (a -> b) -> Json.Decode.Decoder b
decodeChain =
    Json.Decode.map2 (|>)


decodeChainLazy : (a -> c) -> Json.Decode.Decoder a -> Json.Decode.Decoder (c -> b) -> Json.Decode.Decoder b
decodeChainLazy f =
    decodeChain << Json.Decode.map f
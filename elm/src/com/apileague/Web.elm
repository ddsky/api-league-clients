{-
   API League
   API League is a Hub for World Class APIs.

   The version of the OpenAPI document: 1.0
   Contact: mail@apileague.com

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git

   DO NOT EDIT THIS FILE MANUALLY.

   For more info on generating Elm code, see https://eriktim.github.io/openapi-elm/
-}


module Api.Request.Web exposing
    ( extractAuthors
    , extractContentFromAWebPage
    , extractPublishDate
    , searchWeb
    )

import Api
import Api.Data
import Dict
import Http
import Json.Decode
import Json.Encode



{-| Extracts the authors from a given URL. This API is useful for extracting the authors from a blog post or news article. The API will return a list of authors with their names and links to their profiles if available.
-}
extractAuthors : String -> Api.Request Api.Data.InlineResponse20014
extractAuthors url_query =
    Api.request
        "GET"
        "/extract-authors"
        []
        [ ( "url", Just <| identity url_query ) ]
        []
        Nothing
        Api.Data.inlineResponse20014Decoder



{-| Extract the main content from a web page. This API is useful for extracting the main text, title, and images from a web page. It can be used to create a summary of the content of a web page, or to extract the main content of a web page to display it in a different format.
-}
extractContentFromAWebPage : String -> Api.Request Api.Data.InlineResponse20012
extractContentFromAWebPage url_query =
    Api.request
        "GET"
        "/extract-content"
        []
        [ ( "url", Just <| identity url_query ) ]
        []
        Nothing
        Api.Data.inlineResponse20012Decoder



{-| Extract the publish date of an article (news or blog). The API will return the publish date of the article if it can be found. The date returned is in the format YYYY-MM-DD.
-}
extractPublishDate : String -> Api.Request Api.Data.InlineResponse20013
extractPublishDate url_query =
    Api.request
        "GET"
        "/extract-publish-date"
        []
        [ ( "url", Just <| identity url_query ) ]
        []
        Nothing
        Api.Data.inlineResponse20013Decoder



{-| Search the web for a given query. The API returns a list of results with the title, summary, and URL.
-}
searchWeb : String -> Maybe Int -> Api.Request Api.Data.InlineResponse20015
searchWeb query_query number_query =
    Api.request
        "GET"
        "/search-web"
        []
        [ ( "query", Just <| identity query_query ), ( "number", Maybe.map String.fromInt number_query ) ]
        []
        Nothing
        Api.Data.inlineResponse20015Decoder

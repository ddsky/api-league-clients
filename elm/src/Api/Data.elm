{-
   API League
   API League is a Hub for World Class APIs.

   The version of the OpenAPI document: 1.6.4
   Contact: mail@apileague.com

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git

   DO NOT EDIT THIS FILE MANUALLY.

   For more info on generating Elm code, see https://eriktim.github.io/openapi-elm/
-}


module Api.Data exposing
    ( ComputeNutritionAPI200Response
    , ComputeNutritionAPI200ResponseIngredientBreakdownInner
    , ComputeNutritionAPI200ResponseIngredientBreakdownInnerNutrientsInner
    , ConvertUnitsAPI200Response
    , CorrectSpellingAPI200Response
    , DetectGenderByNameAPI200Response
    , DetectLanguageAPI200ResponseInner
    , DetectMainImageColorAPI200ResponseInner
    , DetectSentimentAPI200Response
    , DetectSentimentAPI200ResponseDocument
    , DetectSentimentAPI200ResponseSentencesInner
    , ExtractAuthorsAPI200Response
    , ExtractAuthorsAPI200ResponseAuthorsInner
    , ExtractContentFromAWebPageAPI200Response
    , ExtractDatesAPI200Response
    , ExtractDatesAPI200ResponseDatesInner
    , ExtractEntitiesAPI200Response
    , ExtractEntitiesAPI200ResponseEntitiesInner
    , ExtractNewsAPI200Response
    , ExtractNewsAPI200ResponseImagesInner
    , ExtractNewsAPI200ResponseVideosInner
    , ExtractPublishDateAPI200Response
    , FindSimilarBooksAPI200Response
    , GenerateNonsenseWordAPI200Response
    , ListWordSynonymsAPI200Response
    , PluralizeWordAPI200Response
    , RandomMemeAPI200Response
    , RandomPoemAPI200Response
    , RandomQuoteAPI200Response
    , RandomRiddleAPI200Response
    , RandomTriviaAPI200Response
    , ReadKeyValueFromStoreAPI200Response
    , RetrievePageRankAPI200Response
    , RetrieveRecipeInformationAPI200Response
    , RetrieveRecipeInformationAPI200ResponseCredits
    , RetrieveRecipeInformationAPI200ResponseDietaryProperties
    , RetrieveRecipeInformationAPI200ResponseIngredientsInner
    , RetrieveRecipeInformationAPI200ResponseIngredientsInnerMeasures
    , RetrieveRecipeInformationAPI200ResponseInstructionsInner
    , RetrieveRecipeInformationAPI200ResponseInstructionsInnerStepsInner
    , RetrieveRecipeInformationAPI200ResponseNutrition
    , RetrieveRecipeInformationAPI200ResponseNutritionIngredientBreakdownInner
    , RetrieveRecipeInformationAPI200ResponseScores
    , RetrieveRecipeInformationAPI200ResponseTaste
    , RetrieveRecipeInformationAPI200ResponseTimes
    , ScoreReadabilityAPI200Response
    , ScoreTextAPI200Response
    , ScoreTextAPI200ResponseInterestingness
    , ScoreTextAPI200ResponseInterestingnessSubscores
    , ScoreTextAPI200ResponseReadability
    , ScoreTextAPI200ResponseReadabilityMainscores
    , ScoreTextAPI200ResponseReadabilitySubscores
    , ScoreTextAPI200ResponseSkimmability
    , ScoreTextAPI200ResponseSkimmabilityMainscores
    , ScoreTextAPI200ResponseSkimmabilitySubscores
    , ScoreTextAPI200ResponseStyle
    , ScoreTextAPI200ResponseStyleSubscores
    , SearchBooksAPI200Response
    , SearchBooksAPI200ResponseBooksInnerInner
    , SearchDrinksAPI200Response
    , SearchDrinksAPI200ResponseDrinksInner
    , SearchDrinksAPI200ResponseDrinksInnerCredits
    , SearchDrinksAPI200ResponseDrinksInnerIngredientsInner
    , SearchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasures
    , SearchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresMetric
    , SearchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresUs
    , SearchDrinksAPI200ResponseDrinksInnerInstructionsInner
    , SearchDrinksAPI200ResponseDrinksInnerInstructionsInnerStepsInner
    , SearchDrinksAPI200ResponseDrinksInnerInstructionsInnerStepsInnerIngredientsInner
    , SearchDrinksAPI200ResponseDrinksInnerNutrition
    , SearchDrinksAPI200ResponseDrinksInnerNutritionCaloricBreakdown
    , SearchDrinksAPI200ResponseDrinksInnerNutritionFlavonoidsInner
    , SearchDrinksAPI200ResponseDrinksInnerNutritionIngredientBreakdownInner
    , SearchDrinksAPI200ResponseDrinksInnerNutritionIngredientBreakdownInnerNutrientsInner
    , SearchDrinksAPI200ResponseDrinksInnerNutritionNutrientsInner
    , SearchDrinksAPI200ResponseDrinksInnerNutritionWeightPerServing
    , SearchGifsAPI200Response
    , SearchGifsAPI200ResponseImagesInner
    , SearchIconsAPI200Response
    , SearchJokesAPI200Response
    , SearchJokesAPI200ResponseJokesInner
    , SearchMemesAPI200Response
    , SearchMemesAPI200ResponseMemesInner
    , SearchNewsAPI200Response
    , SearchNewsAPI200ResponseNewsInner
    , SearchRecipesAPI200Response
    , SearchRecipesAPI200ResponseRecipesInner
    , SearchRecipesAPI200ResponseRecipesInnerNutrition
    , SearchRecipesAPI200ResponseRecipesInnerNutritionNutrientsInner
    , SearchRestaurantsAPI200Response
    , SearchRestaurantsAPI200ResponseRestaurantsInner
    , SearchRestaurantsAPI200ResponseRestaurantsInnerAddress
    , SearchRestaurantsAPI200ResponseRestaurantsInnerLocalHours
    , SearchRestaurantsAPI200ResponseRestaurantsInnerLocalHoursOperational
    , SearchRoyaltyFreeImagesAPI200Response
    , SearchRoyaltyFreeImagesAPI200ResponseImagesInner
    , SearchRoyaltyFreeImagesAPI200ResponseImagesInnerLicense
    , SearchWebAPI200Response
    , SearchWebAPI200ResponseResultsInner
    , SingularizeWordAPI200Response
    , StemTextAPI200Response
    , StoreKeyValueGETAPI200Response
    , TagPartOfSpeechAPI200Response
    , TopNewsAPI200Response
    , TopNewsAPI200ResponseTopNewsInner
    , TopNewsAPI200ResponseTopNewsInnerNewsInner
    , VectorSearchAPI200Response
    , VectorSearchAPI200ResponseVectorsInner
    , VerifyEmailAddressAPI200Response
    , encodeComputeNutritionAPI200Response
    , encodeComputeNutritionAPI200ResponseIngredientBreakdownInner
    , encodeComputeNutritionAPI200ResponseIngredientBreakdownInnerNutrientsInner
    , encodeConvertUnitsAPI200Response
    , encodeCorrectSpellingAPI200Response
    , encodeDetectGenderByNameAPI200Response
    , encodeDetectLanguageAPI200ResponseInner
    , encodeDetectMainImageColorAPI200ResponseInner
    , encodeDetectSentimentAPI200Response
    , encodeDetectSentimentAPI200ResponseDocument
    , encodeDetectSentimentAPI200ResponseSentencesInner
    , encodeExtractAuthorsAPI200Response
    , encodeExtractAuthorsAPI200ResponseAuthorsInner
    , encodeExtractContentFromAWebPageAPI200Response
    , encodeExtractDatesAPI200Response
    , encodeExtractDatesAPI200ResponseDatesInner
    , encodeExtractEntitiesAPI200Response
    , encodeExtractEntitiesAPI200ResponseEntitiesInner
    , encodeExtractNewsAPI200Response
    , encodeExtractNewsAPI200ResponseImagesInner
    , encodeExtractNewsAPI200ResponseVideosInner
    , encodeExtractPublishDateAPI200Response
    , encodeFindSimilarBooksAPI200Response
    , encodeGenerateNonsenseWordAPI200Response
    , encodeListWordSynonymsAPI200Response
    , encodePluralizeWordAPI200Response
    , encodeRandomMemeAPI200Response
    , encodeRandomPoemAPI200Response
    , encodeRandomQuoteAPI200Response
    , encodeRandomRiddleAPI200Response
    , encodeRandomTriviaAPI200Response
    , encodeReadKeyValueFromStoreAPI200Response
    , encodeRetrievePageRankAPI200Response
    , encodeRetrieveRecipeInformationAPI200Response
    , encodeRetrieveRecipeInformationAPI200ResponseCredits
    , encodeRetrieveRecipeInformationAPI200ResponseDietaryProperties
    , encodeRetrieveRecipeInformationAPI200ResponseIngredientsInner
    , encodeRetrieveRecipeInformationAPI200ResponseIngredientsInnerMeasures
    , encodeRetrieveRecipeInformationAPI200ResponseInstructionsInner
    , encodeRetrieveRecipeInformationAPI200ResponseInstructionsInnerStepsInner
    , encodeRetrieveRecipeInformationAPI200ResponseNutrition
    , encodeRetrieveRecipeInformationAPI200ResponseNutritionIngredientBreakdownInner
    , encodeRetrieveRecipeInformationAPI200ResponseScores
    , encodeRetrieveRecipeInformationAPI200ResponseTaste
    , encodeRetrieveRecipeInformationAPI200ResponseTimes
    , encodeScoreReadabilityAPI200Response
    , encodeScoreTextAPI200Response
    , encodeScoreTextAPI200ResponseInterestingness
    , encodeScoreTextAPI200ResponseInterestingnessSubscores
    , encodeScoreTextAPI200ResponseReadability
    , encodeScoreTextAPI200ResponseReadabilityMainscores
    , encodeScoreTextAPI200ResponseReadabilitySubscores
    , encodeScoreTextAPI200ResponseSkimmability
    , encodeScoreTextAPI200ResponseSkimmabilityMainscores
    , encodeScoreTextAPI200ResponseSkimmabilitySubscores
    , encodeScoreTextAPI200ResponseStyle
    , encodeScoreTextAPI200ResponseStyleSubscores
    , encodeSearchBooksAPI200Response
    , encodeSearchBooksAPI200ResponseBooksInnerInner
    , encodeSearchDrinksAPI200Response
    , encodeSearchDrinksAPI200ResponseDrinksInner
    , encodeSearchDrinksAPI200ResponseDrinksInnerCredits
    , encodeSearchDrinksAPI200ResponseDrinksInnerIngredientsInner
    , encodeSearchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasures
    , encodeSearchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresMetric
    , encodeSearchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresUs
    , encodeSearchDrinksAPI200ResponseDrinksInnerInstructionsInner
    , encodeSearchDrinksAPI200ResponseDrinksInnerInstructionsInnerStepsInner
    , encodeSearchDrinksAPI200ResponseDrinksInnerInstructionsInnerStepsInnerIngredientsInner
    , encodeSearchDrinksAPI200ResponseDrinksInnerNutrition
    , encodeSearchDrinksAPI200ResponseDrinksInnerNutritionCaloricBreakdown
    , encodeSearchDrinksAPI200ResponseDrinksInnerNutritionFlavonoidsInner
    , encodeSearchDrinksAPI200ResponseDrinksInnerNutritionIngredientBreakdownInner
    , encodeSearchDrinksAPI200ResponseDrinksInnerNutritionIngredientBreakdownInnerNutrientsInner
    , encodeSearchDrinksAPI200ResponseDrinksInnerNutritionNutrientsInner
    , encodeSearchDrinksAPI200ResponseDrinksInnerNutritionWeightPerServing
    , encodeSearchGifsAPI200Response
    , encodeSearchGifsAPI200ResponseImagesInner
    , encodeSearchIconsAPI200Response
    , encodeSearchJokesAPI200Response
    , encodeSearchJokesAPI200ResponseJokesInner
    , encodeSearchMemesAPI200Response
    , encodeSearchMemesAPI200ResponseMemesInner
    , encodeSearchNewsAPI200Response
    , encodeSearchNewsAPI200ResponseNewsInner
    , encodeSearchRecipesAPI200Response
    , encodeSearchRecipesAPI200ResponseRecipesInner
    , encodeSearchRecipesAPI200ResponseRecipesInnerNutrition
    , encodeSearchRecipesAPI200ResponseRecipesInnerNutritionNutrientsInner
    , encodeSearchRestaurantsAPI200Response
    , encodeSearchRestaurantsAPI200ResponseRestaurantsInner
    , encodeSearchRestaurantsAPI200ResponseRestaurantsInnerAddress
    , encodeSearchRestaurantsAPI200ResponseRestaurantsInnerLocalHours
    , encodeSearchRestaurantsAPI200ResponseRestaurantsInnerLocalHoursOperational
    , encodeSearchRoyaltyFreeImagesAPI200Response
    , encodeSearchRoyaltyFreeImagesAPI200ResponseImagesInner
    , encodeSearchRoyaltyFreeImagesAPI200ResponseImagesInnerLicense
    , encodeSearchWebAPI200Response
    , encodeSearchWebAPI200ResponseResultsInner
    , encodeSingularizeWordAPI200Response
    , encodeStemTextAPI200Response
    , encodeStoreKeyValueGETAPI200Response
    , encodeTagPartOfSpeechAPI200Response
    , encodeTopNewsAPI200Response
    , encodeTopNewsAPI200ResponseTopNewsInner
    , encodeTopNewsAPI200ResponseTopNewsInnerNewsInner
    , encodeVectorSearchAPI200Response
    , encodeVectorSearchAPI200ResponseVectorsInner
    , encodeVerifyEmailAddressAPI200Response
    , computeNutritionAPI200ResponseDecoder
    , computeNutritionAPI200ResponseIngredientBreakdownInnerDecoder
    , computeNutritionAPI200ResponseIngredientBreakdownInnerNutrientsInnerDecoder
    , convertUnitsAPI200ResponseDecoder
    , correctSpellingAPI200ResponseDecoder
    , detectGenderByNameAPI200ResponseDecoder
    , detectLanguageAPI200ResponseInnerDecoder
    , detectMainImageColorAPI200ResponseInnerDecoder
    , detectSentimentAPI200ResponseDecoder
    , detectSentimentAPI200ResponseDocumentDecoder
    , detectSentimentAPI200ResponseSentencesInnerDecoder
    , extractAuthorsAPI200ResponseDecoder
    , extractAuthorsAPI200ResponseAuthorsInnerDecoder
    , extractContentFromAWebPageAPI200ResponseDecoder
    , extractDatesAPI200ResponseDecoder
    , extractDatesAPI200ResponseDatesInnerDecoder
    , extractEntitiesAPI200ResponseDecoder
    , extractEntitiesAPI200ResponseEntitiesInnerDecoder
    , extractNewsAPI200ResponseDecoder
    , extractNewsAPI200ResponseImagesInnerDecoder
    , extractNewsAPI200ResponseVideosInnerDecoder
    , extractPublishDateAPI200ResponseDecoder
    , findSimilarBooksAPI200ResponseDecoder
    , generateNonsenseWordAPI200ResponseDecoder
    , listWordSynonymsAPI200ResponseDecoder
    , pluralizeWordAPI200ResponseDecoder
    , randomMemeAPI200ResponseDecoder
    , randomPoemAPI200ResponseDecoder
    , randomQuoteAPI200ResponseDecoder
    , randomRiddleAPI200ResponseDecoder
    , randomTriviaAPI200ResponseDecoder
    , readKeyValueFromStoreAPI200ResponseDecoder
    , retrievePageRankAPI200ResponseDecoder
    , retrieveRecipeInformationAPI200ResponseDecoder
    , retrieveRecipeInformationAPI200ResponseCreditsDecoder
    , retrieveRecipeInformationAPI200ResponseDietaryPropertiesDecoder
    , retrieveRecipeInformationAPI200ResponseIngredientsInnerDecoder
    , retrieveRecipeInformationAPI200ResponseIngredientsInnerMeasuresDecoder
    , retrieveRecipeInformationAPI200ResponseInstructionsInnerDecoder
    , retrieveRecipeInformationAPI200ResponseInstructionsInnerStepsInnerDecoder
    , retrieveRecipeInformationAPI200ResponseNutritionDecoder
    , retrieveRecipeInformationAPI200ResponseNutritionIngredientBreakdownInnerDecoder
    , retrieveRecipeInformationAPI200ResponseScoresDecoder
    , retrieveRecipeInformationAPI200ResponseTasteDecoder
    , retrieveRecipeInformationAPI200ResponseTimesDecoder
    , scoreReadabilityAPI200ResponseDecoder
    , scoreTextAPI200ResponseDecoder
    , scoreTextAPI200ResponseInterestingnessDecoder
    , scoreTextAPI200ResponseInterestingnessSubscoresDecoder
    , scoreTextAPI200ResponseReadabilityDecoder
    , scoreTextAPI200ResponseReadabilityMainscoresDecoder
    , scoreTextAPI200ResponseReadabilitySubscoresDecoder
    , scoreTextAPI200ResponseSkimmabilityDecoder
    , scoreTextAPI200ResponseSkimmabilityMainscoresDecoder
    , scoreTextAPI200ResponseSkimmabilitySubscoresDecoder
    , scoreTextAPI200ResponseStyleDecoder
    , scoreTextAPI200ResponseStyleSubscoresDecoder
    , searchBooksAPI200ResponseDecoder
    , searchBooksAPI200ResponseBooksInnerInnerDecoder
    , searchDrinksAPI200ResponseDecoder
    , searchDrinksAPI200ResponseDrinksInnerDecoder
    , searchDrinksAPI200ResponseDrinksInnerCreditsDecoder
    , searchDrinksAPI200ResponseDrinksInnerIngredientsInnerDecoder
    , searchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresDecoder
    , searchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresMetricDecoder
    , searchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresUsDecoder
    , searchDrinksAPI200ResponseDrinksInnerInstructionsInnerDecoder
    , searchDrinksAPI200ResponseDrinksInnerInstructionsInnerStepsInnerDecoder
    , searchDrinksAPI200ResponseDrinksInnerInstructionsInnerStepsInnerIngredientsInnerDecoder
    , searchDrinksAPI200ResponseDrinksInnerNutritionDecoder
    , searchDrinksAPI200ResponseDrinksInnerNutritionCaloricBreakdownDecoder
    , searchDrinksAPI200ResponseDrinksInnerNutritionFlavonoidsInnerDecoder
    , searchDrinksAPI200ResponseDrinksInnerNutritionIngredientBreakdownInnerDecoder
    , searchDrinksAPI200ResponseDrinksInnerNutritionIngredientBreakdownInnerNutrientsInnerDecoder
    , searchDrinksAPI200ResponseDrinksInnerNutritionNutrientsInnerDecoder
    , searchDrinksAPI200ResponseDrinksInnerNutritionWeightPerServingDecoder
    , searchGifsAPI200ResponseDecoder
    , searchGifsAPI200ResponseImagesInnerDecoder
    , searchIconsAPI200ResponseDecoder
    , searchJokesAPI200ResponseDecoder
    , searchJokesAPI200ResponseJokesInnerDecoder
    , searchMemesAPI200ResponseDecoder
    , searchMemesAPI200ResponseMemesInnerDecoder
    , searchNewsAPI200ResponseDecoder
    , searchNewsAPI200ResponseNewsInnerDecoder
    , searchRecipesAPI200ResponseDecoder
    , searchRecipesAPI200ResponseRecipesInnerDecoder
    , searchRecipesAPI200ResponseRecipesInnerNutritionDecoder
    , searchRecipesAPI200ResponseRecipesInnerNutritionNutrientsInnerDecoder
    , searchRestaurantsAPI200ResponseDecoder
    , searchRestaurantsAPI200ResponseRestaurantsInnerDecoder
    , searchRestaurantsAPI200ResponseRestaurantsInnerAddressDecoder
    , searchRestaurantsAPI200ResponseRestaurantsInnerLocalHoursDecoder
    , searchRestaurantsAPI200ResponseRestaurantsInnerLocalHoursOperationalDecoder
    , searchRoyaltyFreeImagesAPI200ResponseDecoder
    , searchRoyaltyFreeImagesAPI200ResponseImagesInnerDecoder
    , searchRoyaltyFreeImagesAPI200ResponseImagesInnerLicenseDecoder
    , searchWebAPI200ResponseDecoder
    , searchWebAPI200ResponseResultsInnerDecoder
    , singularizeWordAPI200ResponseDecoder
    , stemTextAPI200ResponseDecoder
    , storeKeyValueGETAPI200ResponseDecoder
    , tagPartOfSpeechAPI200ResponseDecoder
    , topNewsAPI200ResponseDecoder
    , topNewsAPI200ResponseTopNewsInnerDecoder
    , topNewsAPI200ResponseTopNewsInnerNewsInnerDecoder
    , vectorSearchAPI200ResponseDecoder
    , vectorSearchAPI200ResponseVectorsInnerDecoder
    , verifyEmailAddressAPI200ResponseDecoder
    )

import Api
import Dict
import Json.Decode
import Json.Encode


-- MODEL


type alias ComputeNutritionAPI200Response =
    { nutrients : Maybe ( List SearchDrinksAPI200ResponseDrinksInnerNutritionNutrientsInner )
    , properties : Maybe ( List SearchDrinksAPI200ResponseDrinksInnerNutritionFlavonoidsInner )
    , flavonoids : Maybe ( List SearchRecipesAPI200ResponseRecipesInnerNutritionNutrientsInner )
    , ingredientBreakdown : Maybe ( List ComputeNutritionAPI200ResponseIngredientBreakdownInner )
    , caloricBreakdown : Maybe SearchDrinksAPI200ResponseDrinksInnerNutritionCaloricBreakdown
    , weightPerServing : Maybe SearchDrinksAPI200ResponseDrinksInnerNutritionWeightPerServing
    }


type alias ComputeNutritionAPI200ResponseIngredientBreakdownInner =
    { name : Maybe String
    , amount : Maybe Int
    , unit : Maybe String
    , id : Maybe Int
    , nutrients : Maybe ( List ComputeNutritionAPI200ResponseIngredientBreakdownInnerNutrientsInner )
    }


type alias ComputeNutritionAPI200ResponseIngredientBreakdownInnerNutrientsInner =
    { name : Maybe String
    , percentOfDailyNeeds : Maybe Int
    , amount : Maybe Int
    , unit : Maybe String
    }


type alias ConvertUnitsAPI200Response =
    { targetAmount : Maybe Float
    , targetUnit : Maybe String
    }


type alias CorrectSpellingAPI200Response =
    { correctedText : Maybe String
    }


type alias DetectGenderByNameAPI200Response =
    { name : Maybe String
    , probabilityMale : Maybe Float
    , probabilityFemale : Maybe Float
    , popularity : Maybe Float
    }


type alias DetectLanguageAPI200ResponseInner =
    { language : Maybe String
    , confidence : Maybe Float
    }


type alias DetectMainImageColorAPI200ResponseInner =
    { specificColor : Maybe String
    , mainColor : Maybe String
    , hexCode : Maybe String
    }


type alias DetectSentimentAPI200Response =
    { document : Maybe DetectSentimentAPI200ResponseDocument
    , sentences : Maybe ( List DetectSentimentAPI200ResponseSentencesInner )
    }


type alias DetectSentimentAPI200ResponseDocument =
    { sentiment : Maybe String
    , confidence : Maybe Int
    , averageConfidence : Maybe Int
    }


type alias DetectSentimentAPI200ResponseSentencesInner =
    { length : Maybe Int
    , sentiment : Maybe String
    , offset : Maybe Int
    , confidence : Maybe Int
    }


type alias ExtractAuthorsAPI200Response =
    { authors : Maybe ( List ExtractAuthorsAPI200ResponseAuthorsInner )
    }


type alias ExtractAuthorsAPI200ResponseAuthorsInner =
    { link : Maybe String
    , name : Maybe String
    }


type alias ExtractContentFromAWebPageAPI200Response =
    { title : Maybe String
    , mainText : Maybe String
    , mainHtml : Maybe String
    , images : Maybe ( List Maybe String )
    }


type alias ExtractDatesAPI200Response =
    { dates : Maybe ( List ExtractDatesAPI200ResponseDatesInner )
    }


type alias ExtractDatesAPI200ResponseDatesInner =
    { startPosition : Maybe Int
    , date : Maybe String
    , normalizedDate : Maybe Float
    , tag : Maybe String
    , endPosition : Maybe Int
    }


type alias ExtractEntitiesAPI200Response =
    { entities : Maybe ( List ExtractEntitiesAPI200ResponseEntitiesInner )
    }


type alias ExtractEntitiesAPI200ResponseEntitiesInner =
    { startPosition : Maybe Int
    , image : Maybe String
    , type_ : Maybe String
    , value : Maybe String
    , endPosition : Maybe Int
    }


type alias ExtractNewsAPI200Response =
    { title : Maybe String
    , text : Maybe String
    , url : Maybe String
    , images : Maybe ( List ExtractNewsAPI200ResponseImagesInner )
    , videos : Maybe ( List ExtractNewsAPI200ResponseVideosInner )
    , publishDate : Maybe String
    , authors : Maybe ( List Maybe String )
    , language : Maybe String
    }


type alias ExtractNewsAPI200ResponseImagesInner =
    { width : Maybe Int
    , title : Maybe String
    , url : Maybe String
    , height : Maybe Int
    }


type alias ExtractNewsAPI200ResponseVideosInner =
    { summary : Maybe String
    , duration : Maybe Int
    , thumbnail : Maybe String
    , title : Maybe String
    , url : Maybe String
    }


type alias ExtractPublishDateAPI200Response =
    { publishDate : Maybe String
    }


type alias FindSimilarBooksAPI200Response =
    { similarBooks : Maybe ( List SearchBooksAPI200ResponseBooksInnerInner )
    }


type alias GenerateNonsenseWordAPI200Response =
    { word : Maybe String
    , rating : Maybe Float
    }


type alias ListWordSynonymsAPI200Response =
    { synonyms : Maybe ( List Maybe String )
    }


type alias PluralizeWordAPI200Response =
    { original : Maybe String
    , plural : Maybe String
    }


type alias RandomMemeAPI200Response =
    { description : Maybe String
    , url : Maybe String
    , type_ : Maybe String
    , width : Maybe Int
    , height : Maybe Int
    , ratio : Maybe Float
    }


type alias RandomPoemAPI200Response =
    { title : Maybe String
    , author : Maybe String
    , poem : Maybe String
    }


type alias RandomQuoteAPI200Response =
    { author : Maybe String
    , quote : Maybe String
    }


type alias RandomRiddleAPI200Response =
    { riddle : Maybe String
    , answer : Maybe String
    , difficulty : Maybe String
    }


type alias RandomTriviaAPI200Response =
    { trivia : Maybe String
    }


type alias ReadKeyValueFromStoreAPI200Response =
    { value : Maybe String
    }


type alias RetrievePageRankAPI200Response =
    { pageRank : Maybe Float
    , position : Maybe Int
    , percentile : Maybe Float
    }


type alias RetrieveRecipeInformationAPI200Response =
    { id : Maybe Int
    , title : Maybe String
    , servings : Maybe Int
    , images : Maybe ( List Maybe String )
    , dietaryProperties : Maybe RetrieveRecipeInformationAPI200ResponseDietaryProperties
    , pricePerServing : Maybe Float
    , times : Maybe RetrieveRecipeInformationAPI200ResponseTimes
    , nutrition : Maybe RetrieveRecipeInformationAPI200ResponseNutrition
    , taste : Maybe RetrieveRecipeInformationAPI200ResponseTaste
    , cuisines : Maybe ( List Maybe String )
    , mealTypes : Maybe ( List Maybe String )
    , occasions : Maybe ( List Maybe String )
    , ingredients : Maybe ( List RetrieveRecipeInformationAPI200ResponseIngredientsInner )
    , instructions : Maybe ( List RetrieveRecipeInformationAPI200ResponseInstructionsInner )
    , credits : Maybe RetrieveRecipeInformationAPI200ResponseCredits
    , scores : Maybe RetrieveRecipeInformationAPI200ResponseScores
    }


type alias RetrieveRecipeInformationAPI200ResponseCredits =
    { license : Maybe String
    , text : Maybe String
    , sourceName : Maybe String
    , sourceUrl : Maybe String
    }


type alias RetrieveRecipeInformationAPI200ResponseDietaryProperties =
    { lowFodmap : Maybe Bool
    , vegetarian : Maybe Bool
    , vegan : Maybe Bool
    , glutenFree : Maybe Bool
    , dairyFree : Maybe Bool
    , gaps : Maybe String
    , diets : Maybe ( List Maybe String )
    }


type alias RetrieveRecipeInformationAPI200ResponseIngredientsInner =
    { image : Maybe String
    , nameClean : Maybe String
    , amount : Maybe Float
    , unit : Maybe String
    , measures : Maybe RetrieveRecipeInformationAPI200ResponseIngredientsInnerMeasures
    , original : Maybe String
    , meta : Maybe ( List Maybe String )
    , originalName : Maybe String
    , name : Maybe String
    , id : Maybe Int
    , aisle : Maybe String
    , consistency : Maybe String
    }


type alias RetrieveRecipeInformationAPI200ResponseIngredientsInnerMeasures =
    { metric : Maybe SearchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresMetric
    , us : Maybe SearchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresMetric
    }


type alias RetrieveRecipeInformationAPI200ResponseInstructionsInner =
    { name : Maybe String
    , steps : Maybe ( List RetrieveRecipeInformationAPI200ResponseInstructionsInnerStepsInner )
    }


type alias RetrieveRecipeInformationAPI200ResponseInstructionsInnerStepsInner =
    { number : Maybe Int
    , ingredients : Maybe ( List SearchDrinksAPI200ResponseDrinksInnerInstructionsInnerStepsInnerIngredientsInner )
    , equipment : Maybe ( List SearchDrinksAPI200ResponseDrinksInnerInstructionsInnerStepsInnerIngredientsInner )
    , step : Maybe String
    }


type alias RetrieveRecipeInformationAPI200ResponseNutrition =
    { weightPerServing : Maybe SearchDrinksAPI200ResponseDrinksInnerNutritionWeightPerServing
    , caloricBreakdown : Maybe SearchDrinksAPI200ResponseDrinksInnerNutritionCaloricBreakdown
    , flavonoids : Maybe ( List SearchDrinksAPI200ResponseDrinksInnerNutritionFlavonoidsInner )
    , ingredientBreakdown : Maybe ( List RetrieveRecipeInformationAPI200ResponseNutritionIngredientBreakdownInner )
    , properties : Maybe ( List SearchRecipesAPI200ResponseRecipesInnerNutritionNutrientsInner )
    , nutrients : Maybe ( List SearchDrinksAPI200ResponseDrinksInnerNutritionNutrientsInner )
    }


type alias RetrieveRecipeInformationAPI200ResponseNutritionIngredientBreakdownInner =
    { name : Maybe String
    , amount : Maybe Float
    , unit : Maybe String
    , id : Maybe Int
    , nutrients : Maybe ( List SearchDrinksAPI200ResponseDrinksInnerNutritionNutrientsInner )
    }


type alias RetrieveRecipeInformationAPI200ResponseScores =
    { metaScore : Maybe Float
    , weightWatcherSmartPoints : Maybe Int
    , healthScore : Maybe Int
    }


type alias RetrieveRecipeInformationAPI200ResponseTaste =
    { fattiness : Maybe Float
    , spiciness : Maybe Int
    , saltiness : Maybe Int
    , bitterness : Maybe Float
    , savoriness : Maybe Float
    , sweetness : Maybe Float
    , sourness : Maybe Float
    }


type alias RetrieveRecipeInformationAPI200ResponseTimes =
    { totalMinutes : Maybe Int
    }


type alias ScoreReadabilityAPI200Response =
    { readability : Maybe ScoreTextAPI200ResponseReadability
    }


type alias ScoreTextAPI200Response =
    { numberOfWords : Maybe Int
    , numberOfSentences : Maybe Int
    , readability : Maybe ScoreTextAPI200ResponseReadability
    , skimmability : Maybe ScoreTextAPI200ResponseSkimmability
    , interestingness : Maybe ScoreTextAPI200ResponseInterestingness
    , style : Maybe ScoreTextAPI200ResponseStyle
    , totalScore : Maybe Float
    }


type alias ScoreTextAPI200ResponseInterestingness =
    { mainscores : Maybe ScoreTextAPI200ResponseSkimmabilityMainscores
    , subscores : Maybe ScoreTextAPI200ResponseInterestingnessSubscores
    }


type alias ScoreTextAPI200ResponseInterestingnessSubscores =
    { titleRatingScore : Maybe ( List Int )
    , quoteScore : Maybe ( List Int )
    , lengthScore : Maybe ( List Int )
    , linkScore : Maybe ( List Int )
    , googleHitsScore : Maybe ( List Int )
    }


type alias ScoreTextAPI200ResponseReadability =
    { mainscores : Maybe ScoreTextAPI200ResponseReadabilityMainscores
    , subscores : Maybe ScoreTextAPI200ResponseReadabilitySubscores
    }


type alias ScoreTextAPI200ResponseReadabilityMainscores =
    { totalPossible : Maybe Int
    , total : Maybe Int
    }


type alias ScoreTextAPI200ResponseReadabilitySubscores =
    { readingTimeSeconds : Maybe Int
    , forcast : Maybe Float
    , flesch : Maybe Float
    , smog : Maybe Float
    , ari : Maybe Float
    , lix : Maybe Float
    , colemanLiau : Maybe Float
    , kincaid : Maybe Float
    , fog : Maybe Float
    }


type alias ScoreTextAPI200ResponseSkimmability =
    { mainscores : Maybe ScoreTextAPI200ResponseSkimmabilityMainscores
    , subscores : Maybe ScoreTextAPI200ResponseSkimmabilitySubscores
    }


type alias ScoreTextAPI200ResponseSkimmabilityMainscores =
    { totalPossible : Maybe Int
    , total : Maybe Float
    }


type alias ScoreTextAPI200ResponseSkimmabilitySubscores =
    { bulletPointRatioScore : Maybe ( List Int )
    , imageScore : Maybe ( List Int )
    , highlightedWordRatioScore : Maybe ( List Int )
    , videoScore : Maybe ( List Int )
    , paragraphScore : Maybe ( List Int )
    , paragraphHeadlineRatioScore : Maybe ( List Int )
    }


type alias ScoreTextAPI200ResponseStyle =
    { mainscores : Maybe ScoreTextAPI200ResponseReadabilityMainscores
    , subscores : Maybe ScoreTextAPI200ResponseStyleSubscores
    }


type alias ScoreTextAPI200ResponseStyleSubscores =
    { abbreviationScore : Maybe ( List Int )
    , styleScore : Maybe ( List Int )
    , spellingScore : Maybe ( List Int )
    }


type alias SearchBooksAPI200Response =
    { totalResults : Maybe Int
    , number : Maybe Int
    , offset : Maybe Int
    , books : Maybe ( List (List SearchBooksAPI200ResponseBooksInnerInner) )
    }


type alias SearchBooksAPI200ResponseBooksInnerInner =
    { title : Maybe String
    , image : Maybe String
    , id : Maybe Int
    }


type alias SearchDrinksAPI200Response =
    { offset : Maybe Int
    , number : Maybe Int
    , drinks : Maybe ( List SearchDrinksAPI200ResponseDrinksInner )
    , totalResults : Maybe Int
    }


type alias SearchDrinksAPI200ResponseDrinksInner =
    { flavors : Maybe ( List Maybe String )
    , instructions : Maybe ( List SearchDrinksAPI200ResponseDrinksInnerInstructionsInner )
    , images : Maybe ( List Maybe String )
    , nutrition : Maybe SearchDrinksAPI200ResponseDrinksInnerNutrition
    , glassType : Maybe String
    , credits : Maybe SearchDrinksAPI200ResponseDrinksInnerCredits
    , pricePerServing : Maybe Float
    , description : Maybe String
    , ingredients : Maybe ( List SearchDrinksAPI200ResponseDrinksInnerIngredientsInner )
    , id : Maybe Int
    , title : Maybe String
    , cuisines : Maybe ( List Maybe String )
    }


type alias SearchDrinksAPI200ResponseDrinksInnerCredits =
    { text : Maybe String
    , sourceName : Maybe String
    , sourceUrl : Maybe String
    }


type alias SearchDrinksAPI200ResponseDrinksInnerIngredientsInner =
    { image : Maybe String
    , nameClean : Maybe String
    , amount : Maybe Int
    , unit : Maybe String
    , measures : Maybe SearchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasures
    , original : Maybe String
    , meta : Maybe ( List Maybe String )
    , originalName : Maybe String
    , name : Maybe String
    , id : Maybe Int
    , aisle : Maybe String
    , consistency : Maybe String
    }


type alias SearchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasures =
    { metric : Maybe SearchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresMetric
    , us : Maybe SearchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresUs
    }


type alias SearchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresMetric =
    { unitShort : Maybe String
    , amount : Maybe Float
    , unitLong : Maybe String
    }


type alias SearchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresUs =
    { unitShort : Maybe String
    , amount : Maybe Int
    , unitLong : Maybe String
    }


type alias SearchDrinksAPI200ResponseDrinksInnerInstructionsInner =
    { name : Maybe String
    , steps : Maybe ( List SearchDrinksAPI200ResponseDrinksInnerInstructionsInnerStepsInner )
    }


type alias SearchDrinksAPI200ResponseDrinksInnerInstructionsInnerStepsInner =
    { number : Maybe Int
    , ingredients : Maybe ( List SearchDrinksAPI200ResponseDrinksInnerInstructionsInnerStepsInnerIngredientsInner )
    , equipment : Maybe ( List Maybe String )
    , step : Maybe String
    }


type alias SearchDrinksAPI200ResponseDrinksInnerInstructionsInnerStepsInnerIngredientsInner =
    { name : Maybe String
    , image : Maybe String
    , id : Maybe Int
    }


type alias SearchDrinksAPI200ResponseDrinksInnerNutrition =
    { weightPerServing : Maybe SearchDrinksAPI200ResponseDrinksInnerNutritionWeightPerServing
    , caloricBreakdown : Maybe SearchDrinksAPI200ResponseDrinksInnerNutritionCaloricBreakdown
    , flavonoids : Maybe ( List SearchDrinksAPI200ResponseDrinksInnerNutritionFlavonoidsInner )
    , ingredientBreakdown : Maybe ( List SearchDrinksAPI200ResponseDrinksInnerNutritionIngredientBreakdownInner )
    , properties : Maybe ( List SearchDrinksAPI200ResponseDrinksInnerNutritionFlavonoidsInner )
    , nutrients : Maybe ( List SearchDrinksAPI200ResponseDrinksInnerNutritionNutrientsInner )
    }


type alias SearchDrinksAPI200ResponseDrinksInnerNutritionCaloricBreakdown =
    { percentFat : Maybe Float
    , percentCarbs : Maybe Float
    , percentProtein : Maybe Float
    }


type alias SearchDrinksAPI200ResponseDrinksInnerNutritionFlavonoidsInner =
    { name : Maybe String
    , amount : Maybe Int
    , unit : Maybe String
    }


type alias SearchDrinksAPI200ResponseDrinksInnerNutritionIngredientBreakdownInner =
    { name : Maybe String
    , amount : Maybe Int
    , unit : Maybe String
    , id : Maybe Int
    , nutrients : Maybe ( List SearchDrinksAPI200ResponseDrinksInnerNutritionIngredientBreakdownInnerNutrientsInner )
    }


type alias SearchDrinksAPI200ResponseDrinksInnerNutritionIngredientBreakdownInnerNutrientsInner =
    { name : Maybe String
    , percentOfDailyNeeds : Maybe Float
    , amount : Maybe Int
    , unit : Maybe String
    }


type alias SearchDrinksAPI200ResponseDrinksInnerNutritionNutrientsInner =
    { name : Maybe String
    , percentOfDailyNeeds : Maybe Float
    , amount : Maybe Float
    , unit : Maybe String
    }


type alias SearchDrinksAPI200ResponseDrinksInnerNutritionWeightPerServing =
    { amount : Maybe Int
    , unit : Maybe String
    }


type alias SearchGifsAPI200Response =
    { images : Maybe ( List SearchGifsAPI200ResponseImagesInner )
    }


type alias SearchGifsAPI200ResponseImagesInner =
    { width : Maybe Int
    , url : Maybe String
    , height : Maybe Int
    }


type alias SearchIconsAPI200Response =
    { icons : Maybe ( List SearchRoyaltyFreeImagesAPI200ResponseImagesInner )
    }


type alias SearchJokesAPI200Response =
    { jokes : Maybe ( List SearchJokesAPI200ResponseJokesInner )
    , available : Maybe Int
    }


type alias SearchJokesAPI200ResponseJokesInner =
    { joke : Maybe String
    }


type alias SearchMemesAPI200Response =
    { memes : Maybe ( List SearchMemesAPI200ResponseMemesInner )
    , available : Maybe Int
    }


type alias SearchMemesAPI200ResponseMemesInner =
    { type_ : Maybe String
    , description : Maybe String
    , url : Maybe String
    }


type alias SearchNewsAPI200Response =
    { offset : Maybe Int
    , number : Maybe Int
    , available : Maybe Int
    , news : Maybe ( List SearchNewsAPI200ResponseNewsInner )
    }


type alias SearchNewsAPI200ResponseNewsInner =
    { summary : Maybe String
    , image : Maybe String
    , sentiment : Maybe Float
    , language : Maybe String
    , video : Maybe String
    , title : Maybe String
    , url : Maybe String
    , sourceCountry : Maybe String
    , id : Maybe Int
    , text : Maybe String
    , category : Maybe String
    , publishDate : Maybe String
    , authors : Maybe ( List Maybe String )
    }


type alias SearchRecipesAPI200Response =
    { offset : Maybe Int
    , number : Maybe Int
    , recipes : Maybe ( List SearchRecipesAPI200ResponseRecipesInner )
    , totalResults : Maybe Int
    }


type alias SearchRecipesAPI200ResponseRecipesInner =
    { images : Maybe ( List Maybe String )
    , nutrition : Maybe SearchRecipesAPI200ResponseRecipesInnerNutrition
    , id : Maybe Int
    , title : Maybe String
    }


type alias SearchRecipesAPI200ResponseRecipesInnerNutrition =
    { nutrients : Maybe ( List SearchRecipesAPI200ResponseRecipesInnerNutritionNutrientsInner )
    }


type alias SearchRecipesAPI200ResponseRecipesInnerNutritionNutrientsInner =
    { name : Maybe String
    , amount : Maybe Float
    , unit : Maybe String
    }


type alias SearchRestaurantsAPI200Response =
    { restaurants : Maybe ( List SearchRestaurantsAPI200ResponseRestaurantsInner )
    }


type alias SearchRestaurantsAPI200ResponseRestaurantsInner =
    { offersThirdPartyDelivery : Maybe Bool
    , address : Maybe SearchRestaurantsAPI200ResponseRestaurantsInnerAddress
    , supportsUpcCodes : Maybe Bool
    , isOpen : Maybe Bool
    , description : Maybe String
    , weightedRatingValue : Maybe Int
    , type_ : Maybe String
    , offersFirstPartyDelivery : Maybe Bool
    , aggregatedRatingCount : Maybe Int
    , pickupEnabled : Maybe Bool
    , cuisines : Maybe ( List Maybe String )
    , miles : Maybe Float
    , dollarSigns : Maybe Int
    , deliveryEnabled : Maybe Bool
    , name : Maybe String
    , phoneNumber : Maybe Float
    , id : Maybe String
    , localHours : Maybe SearchRestaurantsAPI200ResponseRestaurantsInnerLocalHours
    }


type alias SearchRestaurantsAPI200ResponseRestaurantsInnerAddress =
    { zipcode : Maybe String
    , country : Maybe String
    , city : Maybe String
    , latitude : Maybe Float
    , lon : Maybe Float
    , streetAddr2 : Maybe String
    , state : Maybe String
    , streetAddr : Maybe String
    , lat : Maybe Float
    , longitude : Maybe Float
    }


type alias SearchRestaurantsAPI200ResponseRestaurantsInnerLocalHours =
    { operational : Maybe SearchRestaurantsAPI200ResponseRestaurantsInnerLocalHoursOperational
    , delivery : Maybe SearchRestaurantsAPI200ResponseRestaurantsInnerLocalHoursOperational
    , pickup : Maybe SearchRestaurantsAPI200ResponseRestaurantsInnerLocalHoursOperational
    , dineIn : Maybe SearchRestaurantsAPI200ResponseRestaurantsInnerLocalHoursOperational
    }


type alias SearchRestaurantsAPI200ResponseRestaurantsInnerLocalHoursOperational =
    { sunday : Maybe String
    , saturday : Maybe String
    , tuesday : Maybe String
    , thursday : Maybe String
    , friday : Maybe String
    , wednesday : Maybe String
    , monday : Maybe String
    }


type alias SearchRoyaltyFreeImagesAPI200Response =
    { images : Maybe ( List SearchRoyaltyFreeImagesAPI200ResponseImagesInner )
    }


type alias SearchRoyaltyFreeImagesAPI200ResponseImagesInner =
    { width : Maybe Int
    , license : Maybe SearchRoyaltyFreeImagesAPI200ResponseImagesInnerLicense
    , thumbnail : Maybe String
    , id : Maybe String
    , url : Maybe String
    , height : Maybe Int
    }


type alias SearchRoyaltyFreeImagesAPI200ResponseImagesInnerLicense =
    { name : Maybe String
    , link : Maybe String
    }


type alias SearchWebAPI200Response =
    { results : Maybe ( List SearchWebAPI200ResponseResultsInner )
    }


type alias SearchWebAPI200ResponseResultsInner =
    { title : Maybe String
    , summary : Maybe String
    , url : Maybe String
    }


type alias SingularizeWordAPI200Response =
    { original : Maybe String
    , singular : Maybe String
    }


type alias StemTextAPI200Response =
    { original : Maybe String
    , stemmed : Maybe String
    }


type alias StoreKeyValueGETAPI200Response =
    { status : Maybe String
    }


type alias TagPartOfSpeechAPI200Response =
    { taggedText : Maybe String
    }


type alias TopNewsAPI200Response =
    { topNews : Maybe ( List TopNewsAPI200ResponseTopNewsInner )
    , language : Maybe String
    , country : Maybe String
    }


type alias TopNewsAPI200ResponseTopNewsInner =
    { news : Maybe ( List TopNewsAPI200ResponseTopNewsInnerNewsInner )
    }


type alias TopNewsAPI200ResponseTopNewsInnerNewsInner =
    { summary : Maybe String
    , image : Maybe String
    , id : Maybe Int
    , text : Maybe String
    , title : Maybe String
    , publishDate : Maybe String
    , url : Maybe String
    , authors : Maybe ( List Maybe String )
    }


type alias VectorSearchAPI200Response =
    { vectors : Maybe ( List VectorSearchAPI200ResponseVectorsInner )
    }


type alias VectorSearchAPI200ResponseVectorsInner =
    { license : Maybe String
    , title : Maybe String
    , author : Maybe String
    , imageUrl : Maybe String
    }


type alias VerifyEmailAddressAPI200Response =
    { email : Maybe String
    , domain : Maybe String
    , firstName : Maybe String
    , middleName : Maybe String
    , lastName : Maybe String
    , fullName : Maybe String
    , username : Maybe String
    , image : Maybe String
    , result : Maybe String
    , disposable : Maybe Bool
    , acceptAll : Maybe Bool
    , freeProvider : Maybe Bool
    }


-- ENCODER


encodeComputeNutritionAPI200Response : ComputeNutritionAPI200Response -> Json.Encode.Value
encodeComputeNutritionAPI200Response =
    encodeObject << encodeComputeNutritionAPI200ResponsePairs


encodeComputeNutritionAPI200ResponseWithTag : ( String, String ) -> ComputeNutritionAPI200Response -> Json.Encode.Value
encodeComputeNutritionAPI200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeComputeNutritionAPI200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeComputeNutritionAPI200ResponsePairs : ComputeNutritionAPI200Response -> List EncodedField
encodeComputeNutritionAPI200ResponsePairs model =
    let
        pairs =
            [ maybeEncode "nutrients" (Json.Encode.list encodeSearchDrinksAPI200ResponseDrinksInnerNutritionNutrientsInner) model.nutrients
            , maybeEncode "properties" (Json.Encode.list encodeSearchDrinksAPI200ResponseDrinksInnerNutritionFlavonoidsInner) model.properties
            , maybeEncode "flavonoids" (Json.Encode.list encodeSearchRecipesAPI200ResponseRecipesInnerNutritionNutrientsInner) model.flavonoids
            , maybeEncode "ingredient_breakdown" (Json.Encode.list encodeComputeNutritionAPI200ResponseIngredientBreakdownInner) model.ingredientBreakdown
            , maybeEncode "caloric_breakdown" encodeSearchDrinksAPI200ResponseDrinksInnerNutritionCaloricBreakdown model.caloricBreakdown
            , maybeEncode "weight_per_serving" encodeSearchDrinksAPI200ResponseDrinksInnerNutritionWeightPerServing model.weightPerServing
            ]
    in
    pairs


encodeComputeNutritionAPI200ResponseIngredientBreakdownInner : ComputeNutritionAPI200ResponseIngredientBreakdownInner -> Json.Encode.Value
encodeComputeNutritionAPI200ResponseIngredientBreakdownInner =
    encodeObject << encodeComputeNutritionAPI200ResponseIngredientBreakdownInnerPairs


encodeComputeNutritionAPI200ResponseIngredientBreakdownInnerWithTag : ( String, String ) -> ComputeNutritionAPI200ResponseIngredientBreakdownInner -> Json.Encode.Value
encodeComputeNutritionAPI200ResponseIngredientBreakdownInnerWithTag (tagField, tag) model =
    encodeObject (encodeComputeNutritionAPI200ResponseIngredientBreakdownInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeComputeNutritionAPI200ResponseIngredientBreakdownInnerPairs : ComputeNutritionAPI200ResponseIngredientBreakdownInner -> List EncodedField
encodeComputeNutritionAPI200ResponseIngredientBreakdownInnerPairs model =
    let
        pairs =
            [ maybeEncodeNullable "name" Json.Encode.string model.name
            , maybeEncode "amount" Json.Encode.int model.amount
            , maybeEncodeNullable "unit" Json.Encode.string model.unit
            , maybeEncode "id" Json.Encode.int model.id
            , maybeEncode "nutrients" (Json.Encode.list encodeComputeNutritionAPI200ResponseIngredientBreakdownInnerNutrientsInner) model.nutrients
            ]
    in
    pairs


encodeComputeNutritionAPI200ResponseIngredientBreakdownInnerNutrientsInner : ComputeNutritionAPI200ResponseIngredientBreakdownInnerNutrientsInner -> Json.Encode.Value
encodeComputeNutritionAPI200ResponseIngredientBreakdownInnerNutrientsInner =
    encodeObject << encodeComputeNutritionAPI200ResponseIngredientBreakdownInnerNutrientsInnerPairs


encodeComputeNutritionAPI200ResponseIngredientBreakdownInnerNutrientsInnerWithTag : ( String, String ) -> ComputeNutritionAPI200ResponseIngredientBreakdownInnerNutrientsInner -> Json.Encode.Value
encodeComputeNutritionAPI200ResponseIngredientBreakdownInnerNutrientsInnerWithTag (tagField, tag) model =
    encodeObject (encodeComputeNutritionAPI200ResponseIngredientBreakdownInnerNutrientsInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeComputeNutritionAPI200ResponseIngredientBreakdownInnerNutrientsInnerPairs : ComputeNutritionAPI200ResponseIngredientBreakdownInnerNutrientsInner -> List EncodedField
encodeComputeNutritionAPI200ResponseIngredientBreakdownInnerNutrientsInnerPairs model =
    let
        pairs =
            [ maybeEncodeNullable "name" Json.Encode.string model.name
            , maybeEncode "percent_of_daily_needs" Json.Encode.int model.percentOfDailyNeeds
            , maybeEncode "amount" Json.Encode.int model.amount
            , maybeEncodeNullable "unit" Json.Encode.string model.unit
            ]
    in
    pairs


encodeConvertUnitsAPI200Response : ConvertUnitsAPI200Response -> Json.Encode.Value
encodeConvertUnitsAPI200Response =
    encodeObject << encodeConvertUnitsAPI200ResponsePairs


encodeConvertUnitsAPI200ResponseWithTag : ( String, String ) -> ConvertUnitsAPI200Response -> Json.Encode.Value
encodeConvertUnitsAPI200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeConvertUnitsAPI200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeConvertUnitsAPI200ResponsePairs : ConvertUnitsAPI200Response -> List EncodedField
encodeConvertUnitsAPI200ResponsePairs model =
    let
        pairs =
            [ maybeEncode "target_amount" Json.Encode.float model.targetAmount
            , maybeEncodeNullable "target_unit" Json.Encode.string model.targetUnit
            ]
    in
    pairs


encodeCorrectSpellingAPI200Response : CorrectSpellingAPI200Response -> Json.Encode.Value
encodeCorrectSpellingAPI200Response =
    encodeObject << encodeCorrectSpellingAPI200ResponsePairs


encodeCorrectSpellingAPI200ResponseWithTag : ( String, String ) -> CorrectSpellingAPI200Response -> Json.Encode.Value
encodeCorrectSpellingAPI200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeCorrectSpellingAPI200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCorrectSpellingAPI200ResponsePairs : CorrectSpellingAPI200Response -> List EncodedField
encodeCorrectSpellingAPI200ResponsePairs model =
    let
        pairs =
            [ maybeEncodeNullable "corrected_text" Json.Encode.string model.correctedText
            ]
    in
    pairs


encodeDetectGenderByNameAPI200Response : DetectGenderByNameAPI200Response -> Json.Encode.Value
encodeDetectGenderByNameAPI200Response =
    encodeObject << encodeDetectGenderByNameAPI200ResponsePairs


encodeDetectGenderByNameAPI200ResponseWithTag : ( String, String ) -> DetectGenderByNameAPI200Response -> Json.Encode.Value
encodeDetectGenderByNameAPI200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeDetectGenderByNameAPI200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeDetectGenderByNameAPI200ResponsePairs : DetectGenderByNameAPI200Response -> List EncodedField
encodeDetectGenderByNameAPI200ResponsePairs model =
    let
        pairs =
            [ maybeEncodeNullable "name" Json.Encode.string model.name
            , maybeEncode "probability_male" Json.Encode.float model.probabilityMale
            , maybeEncode "probability_female" Json.Encode.float model.probabilityFemale
            , maybeEncode "popularity" Json.Encode.float model.popularity
            ]
    in
    pairs


encodeDetectLanguageAPI200ResponseInner : DetectLanguageAPI200ResponseInner -> Json.Encode.Value
encodeDetectLanguageAPI200ResponseInner =
    encodeObject << encodeDetectLanguageAPI200ResponseInnerPairs


encodeDetectLanguageAPI200ResponseInnerWithTag : ( String, String ) -> DetectLanguageAPI200ResponseInner -> Json.Encode.Value
encodeDetectLanguageAPI200ResponseInnerWithTag (tagField, tag) model =
    encodeObject (encodeDetectLanguageAPI200ResponseInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeDetectLanguageAPI200ResponseInnerPairs : DetectLanguageAPI200ResponseInner -> List EncodedField
encodeDetectLanguageAPI200ResponseInnerPairs model =
    let
        pairs =
            [ maybeEncodeNullable "language" Json.Encode.string model.language
            , maybeEncode "confidence" Json.Encode.float model.confidence
            ]
    in
    pairs


encodeDetectMainImageColorAPI200ResponseInner : DetectMainImageColorAPI200ResponseInner -> Json.Encode.Value
encodeDetectMainImageColorAPI200ResponseInner =
    encodeObject << encodeDetectMainImageColorAPI200ResponseInnerPairs


encodeDetectMainImageColorAPI200ResponseInnerWithTag : ( String, String ) -> DetectMainImageColorAPI200ResponseInner -> Json.Encode.Value
encodeDetectMainImageColorAPI200ResponseInnerWithTag (tagField, tag) model =
    encodeObject (encodeDetectMainImageColorAPI200ResponseInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeDetectMainImageColorAPI200ResponseInnerPairs : DetectMainImageColorAPI200ResponseInner -> List EncodedField
encodeDetectMainImageColorAPI200ResponseInnerPairs model =
    let
        pairs =
            [ maybeEncodeNullable "specific_color" Json.Encode.string model.specificColor
            , maybeEncodeNullable "main_color" Json.Encode.string model.mainColor
            , maybeEncodeNullable "hex_code" Json.Encode.string model.hexCode
            ]
    in
    pairs


encodeDetectSentimentAPI200Response : DetectSentimentAPI200Response -> Json.Encode.Value
encodeDetectSentimentAPI200Response =
    encodeObject << encodeDetectSentimentAPI200ResponsePairs


encodeDetectSentimentAPI200ResponseWithTag : ( String, String ) -> DetectSentimentAPI200Response -> Json.Encode.Value
encodeDetectSentimentAPI200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeDetectSentimentAPI200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeDetectSentimentAPI200ResponsePairs : DetectSentimentAPI200Response -> List EncodedField
encodeDetectSentimentAPI200ResponsePairs model =
    let
        pairs =
            [ maybeEncode "document" encodeDetectSentimentAPI200ResponseDocument model.document
            , maybeEncode "sentences" (Json.Encode.list encodeDetectSentimentAPI200ResponseSentencesInner) model.sentences
            ]
    in
    pairs


encodeDetectSentimentAPI200ResponseDocument : DetectSentimentAPI200ResponseDocument -> Json.Encode.Value
encodeDetectSentimentAPI200ResponseDocument =
    encodeObject << encodeDetectSentimentAPI200ResponseDocumentPairs


encodeDetectSentimentAPI200ResponseDocumentWithTag : ( String, String ) -> DetectSentimentAPI200ResponseDocument -> Json.Encode.Value
encodeDetectSentimentAPI200ResponseDocumentWithTag (tagField, tag) model =
    encodeObject (encodeDetectSentimentAPI200ResponseDocumentPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeDetectSentimentAPI200ResponseDocumentPairs : DetectSentimentAPI200ResponseDocument -> List EncodedField
encodeDetectSentimentAPI200ResponseDocumentPairs model =
    let
        pairs =
            [ maybeEncodeNullable "sentiment" Json.Encode.string model.sentiment
            , maybeEncode "confidence" Json.Encode.int model.confidence
            , maybeEncode "average_confidence" Json.Encode.int model.averageConfidence
            ]
    in
    pairs


encodeDetectSentimentAPI200ResponseSentencesInner : DetectSentimentAPI200ResponseSentencesInner -> Json.Encode.Value
encodeDetectSentimentAPI200ResponseSentencesInner =
    encodeObject << encodeDetectSentimentAPI200ResponseSentencesInnerPairs


encodeDetectSentimentAPI200ResponseSentencesInnerWithTag : ( String, String ) -> DetectSentimentAPI200ResponseSentencesInner -> Json.Encode.Value
encodeDetectSentimentAPI200ResponseSentencesInnerWithTag (tagField, tag) model =
    encodeObject (encodeDetectSentimentAPI200ResponseSentencesInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeDetectSentimentAPI200ResponseSentencesInnerPairs : DetectSentimentAPI200ResponseSentencesInner -> List EncodedField
encodeDetectSentimentAPI200ResponseSentencesInnerPairs model =
    let
        pairs =
            [ maybeEncode "length" Json.Encode.int model.length
            , maybeEncodeNullable "sentiment" Json.Encode.string model.sentiment
            , maybeEncode "offset" Json.Encode.int model.offset
            , maybeEncode "confidence" Json.Encode.int model.confidence
            ]
    in
    pairs


encodeExtractAuthorsAPI200Response : ExtractAuthorsAPI200Response -> Json.Encode.Value
encodeExtractAuthorsAPI200Response =
    encodeObject << encodeExtractAuthorsAPI200ResponsePairs


encodeExtractAuthorsAPI200ResponseWithTag : ( String, String ) -> ExtractAuthorsAPI200Response -> Json.Encode.Value
encodeExtractAuthorsAPI200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeExtractAuthorsAPI200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeExtractAuthorsAPI200ResponsePairs : ExtractAuthorsAPI200Response -> List EncodedField
encodeExtractAuthorsAPI200ResponsePairs model =
    let
        pairs =
            [ maybeEncode "authors" (Json.Encode.list encodeExtractAuthorsAPI200ResponseAuthorsInner) model.authors
            ]
    in
    pairs


encodeExtractAuthorsAPI200ResponseAuthorsInner : ExtractAuthorsAPI200ResponseAuthorsInner -> Json.Encode.Value
encodeExtractAuthorsAPI200ResponseAuthorsInner =
    encodeObject << encodeExtractAuthorsAPI200ResponseAuthorsInnerPairs


encodeExtractAuthorsAPI200ResponseAuthorsInnerWithTag : ( String, String ) -> ExtractAuthorsAPI200ResponseAuthorsInner -> Json.Encode.Value
encodeExtractAuthorsAPI200ResponseAuthorsInnerWithTag (tagField, tag) model =
    encodeObject (encodeExtractAuthorsAPI200ResponseAuthorsInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeExtractAuthorsAPI200ResponseAuthorsInnerPairs : ExtractAuthorsAPI200ResponseAuthorsInner -> List EncodedField
encodeExtractAuthorsAPI200ResponseAuthorsInnerPairs model =
    let
        pairs =
            [ maybeEncodeNullable "link" Json.Encode.string model.link
            , maybeEncodeNullable "name" Json.Encode.string model.name
            ]
    in
    pairs


encodeExtractContentFromAWebPageAPI200Response : ExtractContentFromAWebPageAPI200Response -> Json.Encode.Value
encodeExtractContentFromAWebPageAPI200Response =
    encodeObject << encodeExtractContentFromAWebPageAPI200ResponsePairs


encodeExtractContentFromAWebPageAPI200ResponseWithTag : ( String, String ) -> ExtractContentFromAWebPageAPI200Response -> Json.Encode.Value
encodeExtractContentFromAWebPageAPI200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeExtractContentFromAWebPageAPI200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeExtractContentFromAWebPageAPI200ResponsePairs : ExtractContentFromAWebPageAPI200Response -> List EncodedField
encodeExtractContentFromAWebPageAPI200ResponsePairs model =
    let
        pairs =
            [ maybeEncodeNullable "title" Json.Encode.string model.title
            , maybeEncodeNullable "main_text" Json.Encode.string model.mainText
            , maybeEncodeNullable "main_html" Json.Encode.string model.mainHtml
            , maybeEncode "images" (Json.Encode.list Json.Encode.string) model.images
            ]
    in
    pairs


encodeExtractDatesAPI200Response : ExtractDatesAPI200Response -> Json.Encode.Value
encodeExtractDatesAPI200Response =
    encodeObject << encodeExtractDatesAPI200ResponsePairs


encodeExtractDatesAPI200ResponseWithTag : ( String, String ) -> ExtractDatesAPI200Response -> Json.Encode.Value
encodeExtractDatesAPI200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeExtractDatesAPI200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeExtractDatesAPI200ResponsePairs : ExtractDatesAPI200Response -> List EncodedField
encodeExtractDatesAPI200ResponsePairs model =
    let
        pairs =
            [ maybeEncode "dates" (Json.Encode.list encodeExtractDatesAPI200ResponseDatesInner) model.dates
            ]
    in
    pairs


encodeExtractDatesAPI200ResponseDatesInner : ExtractDatesAPI200ResponseDatesInner -> Json.Encode.Value
encodeExtractDatesAPI200ResponseDatesInner =
    encodeObject << encodeExtractDatesAPI200ResponseDatesInnerPairs


encodeExtractDatesAPI200ResponseDatesInnerWithTag : ( String, String ) -> ExtractDatesAPI200ResponseDatesInner -> Json.Encode.Value
encodeExtractDatesAPI200ResponseDatesInnerWithTag (tagField, tag) model =
    encodeObject (encodeExtractDatesAPI200ResponseDatesInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeExtractDatesAPI200ResponseDatesInnerPairs : ExtractDatesAPI200ResponseDatesInner -> List EncodedField
encodeExtractDatesAPI200ResponseDatesInnerPairs model =
    let
        pairs =
            [ maybeEncode "start_position" Json.Encode.int model.startPosition
            , maybeEncodeNullable "date" Json.Encode.string model.date
            , maybeEncode "normalized_date" Json.Encode.float model.normalizedDate
            , maybeEncodeNullable "tag" Json.Encode.string model.tag
            , maybeEncode "end_position" Json.Encode.int model.endPosition
            ]
    in
    pairs


encodeExtractEntitiesAPI200Response : ExtractEntitiesAPI200Response -> Json.Encode.Value
encodeExtractEntitiesAPI200Response =
    encodeObject << encodeExtractEntitiesAPI200ResponsePairs


encodeExtractEntitiesAPI200ResponseWithTag : ( String, String ) -> ExtractEntitiesAPI200Response -> Json.Encode.Value
encodeExtractEntitiesAPI200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeExtractEntitiesAPI200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeExtractEntitiesAPI200ResponsePairs : ExtractEntitiesAPI200Response -> List EncodedField
encodeExtractEntitiesAPI200ResponsePairs model =
    let
        pairs =
            [ maybeEncode "entities" (Json.Encode.list encodeExtractEntitiesAPI200ResponseEntitiesInner) model.entities
            ]
    in
    pairs


encodeExtractEntitiesAPI200ResponseEntitiesInner : ExtractEntitiesAPI200ResponseEntitiesInner -> Json.Encode.Value
encodeExtractEntitiesAPI200ResponseEntitiesInner =
    encodeObject << encodeExtractEntitiesAPI200ResponseEntitiesInnerPairs


encodeExtractEntitiesAPI200ResponseEntitiesInnerWithTag : ( String, String ) -> ExtractEntitiesAPI200ResponseEntitiesInner -> Json.Encode.Value
encodeExtractEntitiesAPI200ResponseEntitiesInnerWithTag (tagField, tag) model =
    encodeObject (encodeExtractEntitiesAPI200ResponseEntitiesInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeExtractEntitiesAPI200ResponseEntitiesInnerPairs : ExtractEntitiesAPI200ResponseEntitiesInner -> List EncodedField
encodeExtractEntitiesAPI200ResponseEntitiesInnerPairs model =
    let
        pairs =
            [ maybeEncode "start_position" Json.Encode.int model.startPosition
            , maybeEncodeNullable "image" Json.Encode.string model.image
            , maybeEncodeNullable "type" Json.Encode.string model.type_
            , maybeEncodeNullable "value" Json.Encode.string model.value
            , maybeEncode "end_position" Json.Encode.int model.endPosition
            ]
    in
    pairs


encodeExtractNewsAPI200Response : ExtractNewsAPI200Response -> Json.Encode.Value
encodeExtractNewsAPI200Response =
    encodeObject << encodeExtractNewsAPI200ResponsePairs


encodeExtractNewsAPI200ResponseWithTag : ( String, String ) -> ExtractNewsAPI200Response -> Json.Encode.Value
encodeExtractNewsAPI200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeExtractNewsAPI200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeExtractNewsAPI200ResponsePairs : ExtractNewsAPI200Response -> List EncodedField
encodeExtractNewsAPI200ResponsePairs model =
    let
        pairs =
            [ maybeEncodeNullable "title" Json.Encode.string model.title
            , maybeEncodeNullable "text" Json.Encode.string model.text
            , maybeEncodeNullable "url" Json.Encode.string model.url
            , maybeEncode "images" (Json.Encode.list encodeExtractNewsAPI200ResponseImagesInner) model.images
            , maybeEncode "videos" (Json.Encode.list encodeExtractNewsAPI200ResponseVideosInner) model.videos
            , maybeEncodeNullable "publish_date" Json.Encode.string model.publishDate
            , maybeEncode "authors" (Json.Encode.list Json.Encode.string) model.authors
            , maybeEncodeNullable "language" Json.Encode.string model.language
            ]
    in
    pairs


encodeExtractNewsAPI200ResponseImagesInner : ExtractNewsAPI200ResponseImagesInner -> Json.Encode.Value
encodeExtractNewsAPI200ResponseImagesInner =
    encodeObject << encodeExtractNewsAPI200ResponseImagesInnerPairs


encodeExtractNewsAPI200ResponseImagesInnerWithTag : ( String, String ) -> ExtractNewsAPI200ResponseImagesInner -> Json.Encode.Value
encodeExtractNewsAPI200ResponseImagesInnerWithTag (tagField, tag) model =
    encodeObject (encodeExtractNewsAPI200ResponseImagesInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeExtractNewsAPI200ResponseImagesInnerPairs : ExtractNewsAPI200ResponseImagesInner -> List EncodedField
encodeExtractNewsAPI200ResponseImagesInnerPairs model =
    let
        pairs =
            [ maybeEncode "width" Json.Encode.int model.width
            , maybeEncodeNullable "title" Json.Encode.string model.title
            , maybeEncodeNullable "url" Json.Encode.string model.url
            , maybeEncode "height" Json.Encode.int model.height
            ]
    in
    pairs


encodeExtractNewsAPI200ResponseVideosInner : ExtractNewsAPI200ResponseVideosInner -> Json.Encode.Value
encodeExtractNewsAPI200ResponseVideosInner =
    encodeObject << encodeExtractNewsAPI200ResponseVideosInnerPairs


encodeExtractNewsAPI200ResponseVideosInnerWithTag : ( String, String ) -> ExtractNewsAPI200ResponseVideosInner -> Json.Encode.Value
encodeExtractNewsAPI200ResponseVideosInnerWithTag (tagField, tag) model =
    encodeObject (encodeExtractNewsAPI200ResponseVideosInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeExtractNewsAPI200ResponseVideosInnerPairs : ExtractNewsAPI200ResponseVideosInner -> List EncodedField
encodeExtractNewsAPI200ResponseVideosInnerPairs model =
    let
        pairs =
            [ maybeEncodeNullable "summary" Json.Encode.string model.summary
            , maybeEncode "duration" Json.Encode.int model.duration
            , maybeEncodeNullable "thumbnail" Json.Encode.string model.thumbnail
            , maybeEncodeNullable "title" Json.Encode.string model.title
            , maybeEncodeNullable "url" Json.Encode.string model.url
            ]
    in
    pairs


encodeExtractPublishDateAPI200Response : ExtractPublishDateAPI200Response -> Json.Encode.Value
encodeExtractPublishDateAPI200Response =
    encodeObject << encodeExtractPublishDateAPI200ResponsePairs


encodeExtractPublishDateAPI200ResponseWithTag : ( String, String ) -> ExtractPublishDateAPI200Response -> Json.Encode.Value
encodeExtractPublishDateAPI200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeExtractPublishDateAPI200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeExtractPublishDateAPI200ResponsePairs : ExtractPublishDateAPI200Response -> List EncodedField
encodeExtractPublishDateAPI200ResponsePairs model =
    let
        pairs =
            [ maybeEncodeNullable "publish_date" Json.Encode.string model.publishDate
            ]
    in
    pairs


encodeFindSimilarBooksAPI200Response : FindSimilarBooksAPI200Response -> Json.Encode.Value
encodeFindSimilarBooksAPI200Response =
    encodeObject << encodeFindSimilarBooksAPI200ResponsePairs


encodeFindSimilarBooksAPI200ResponseWithTag : ( String, String ) -> FindSimilarBooksAPI200Response -> Json.Encode.Value
encodeFindSimilarBooksAPI200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeFindSimilarBooksAPI200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeFindSimilarBooksAPI200ResponsePairs : FindSimilarBooksAPI200Response -> List EncodedField
encodeFindSimilarBooksAPI200ResponsePairs model =
    let
        pairs =
            [ maybeEncode "similar_books" (Json.Encode.list encodeSearchBooksAPI200ResponseBooksInnerInner) model.similarBooks
            ]
    in
    pairs


encodeGenerateNonsenseWordAPI200Response : GenerateNonsenseWordAPI200Response -> Json.Encode.Value
encodeGenerateNonsenseWordAPI200Response =
    encodeObject << encodeGenerateNonsenseWordAPI200ResponsePairs


encodeGenerateNonsenseWordAPI200ResponseWithTag : ( String, String ) -> GenerateNonsenseWordAPI200Response -> Json.Encode.Value
encodeGenerateNonsenseWordAPI200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeGenerateNonsenseWordAPI200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeGenerateNonsenseWordAPI200ResponsePairs : GenerateNonsenseWordAPI200Response -> List EncodedField
encodeGenerateNonsenseWordAPI200ResponsePairs model =
    let
        pairs =
            [ maybeEncodeNullable "word" Json.Encode.string model.word
            , maybeEncode "rating" Json.Encode.float model.rating
            ]
    in
    pairs


encodeListWordSynonymsAPI200Response : ListWordSynonymsAPI200Response -> Json.Encode.Value
encodeListWordSynonymsAPI200Response =
    encodeObject << encodeListWordSynonymsAPI200ResponsePairs


encodeListWordSynonymsAPI200ResponseWithTag : ( String, String ) -> ListWordSynonymsAPI200Response -> Json.Encode.Value
encodeListWordSynonymsAPI200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeListWordSynonymsAPI200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeListWordSynonymsAPI200ResponsePairs : ListWordSynonymsAPI200Response -> List EncodedField
encodeListWordSynonymsAPI200ResponsePairs model =
    let
        pairs =
            [ maybeEncode "synonyms" (Json.Encode.list Json.Encode.string) model.synonyms
            ]
    in
    pairs


encodePluralizeWordAPI200Response : PluralizeWordAPI200Response -> Json.Encode.Value
encodePluralizeWordAPI200Response =
    encodeObject << encodePluralizeWordAPI200ResponsePairs


encodePluralizeWordAPI200ResponseWithTag : ( String, String ) -> PluralizeWordAPI200Response -> Json.Encode.Value
encodePluralizeWordAPI200ResponseWithTag (tagField, tag) model =
    encodeObject (encodePluralizeWordAPI200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodePluralizeWordAPI200ResponsePairs : PluralizeWordAPI200Response -> List EncodedField
encodePluralizeWordAPI200ResponsePairs model =
    let
        pairs =
            [ maybeEncodeNullable "original" Json.Encode.string model.original
            , maybeEncodeNullable "plural" Json.Encode.string model.plural
            ]
    in
    pairs


encodeRandomMemeAPI200Response : RandomMemeAPI200Response -> Json.Encode.Value
encodeRandomMemeAPI200Response =
    encodeObject << encodeRandomMemeAPI200ResponsePairs


encodeRandomMemeAPI200ResponseWithTag : ( String, String ) -> RandomMemeAPI200Response -> Json.Encode.Value
encodeRandomMemeAPI200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeRandomMemeAPI200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRandomMemeAPI200ResponsePairs : RandomMemeAPI200Response -> List EncodedField
encodeRandomMemeAPI200ResponsePairs model =
    let
        pairs =
            [ maybeEncodeNullable "description" Json.Encode.string model.description
            , maybeEncodeNullable "url" Json.Encode.string model.url
            , maybeEncodeNullable "type" Json.Encode.string model.type_
            , maybeEncode "width" Json.Encode.int model.width
            , maybeEncode "height" Json.Encode.int model.height
            , maybeEncode "ratio" Json.Encode.float model.ratio
            ]
    in
    pairs


encodeRandomPoemAPI200Response : RandomPoemAPI200Response -> Json.Encode.Value
encodeRandomPoemAPI200Response =
    encodeObject << encodeRandomPoemAPI200ResponsePairs


encodeRandomPoemAPI200ResponseWithTag : ( String, String ) -> RandomPoemAPI200Response -> Json.Encode.Value
encodeRandomPoemAPI200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeRandomPoemAPI200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRandomPoemAPI200ResponsePairs : RandomPoemAPI200Response -> List EncodedField
encodeRandomPoemAPI200ResponsePairs model =
    let
        pairs =
            [ maybeEncodeNullable "title" Json.Encode.string model.title
            , maybeEncodeNullable "author" Json.Encode.string model.author
            , maybeEncodeNullable "poem" Json.Encode.string model.poem
            ]
    in
    pairs


encodeRandomQuoteAPI200Response : RandomQuoteAPI200Response -> Json.Encode.Value
encodeRandomQuoteAPI200Response =
    encodeObject << encodeRandomQuoteAPI200ResponsePairs


encodeRandomQuoteAPI200ResponseWithTag : ( String, String ) -> RandomQuoteAPI200Response -> Json.Encode.Value
encodeRandomQuoteAPI200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeRandomQuoteAPI200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRandomQuoteAPI200ResponsePairs : RandomQuoteAPI200Response -> List EncodedField
encodeRandomQuoteAPI200ResponsePairs model =
    let
        pairs =
            [ maybeEncodeNullable "author" Json.Encode.string model.author
            , maybeEncodeNullable "quote" Json.Encode.string model.quote
            ]
    in
    pairs


encodeRandomRiddleAPI200Response : RandomRiddleAPI200Response -> Json.Encode.Value
encodeRandomRiddleAPI200Response =
    encodeObject << encodeRandomRiddleAPI200ResponsePairs


encodeRandomRiddleAPI200ResponseWithTag : ( String, String ) -> RandomRiddleAPI200Response -> Json.Encode.Value
encodeRandomRiddleAPI200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeRandomRiddleAPI200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRandomRiddleAPI200ResponsePairs : RandomRiddleAPI200Response -> List EncodedField
encodeRandomRiddleAPI200ResponsePairs model =
    let
        pairs =
            [ maybeEncodeNullable "riddle" Json.Encode.string model.riddle
            , maybeEncodeNullable "answer" Json.Encode.string model.answer
            , maybeEncodeNullable "difficulty" Json.Encode.string model.difficulty
            ]
    in
    pairs


encodeRandomTriviaAPI200Response : RandomTriviaAPI200Response -> Json.Encode.Value
encodeRandomTriviaAPI200Response =
    encodeObject << encodeRandomTriviaAPI200ResponsePairs


encodeRandomTriviaAPI200ResponseWithTag : ( String, String ) -> RandomTriviaAPI200Response -> Json.Encode.Value
encodeRandomTriviaAPI200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeRandomTriviaAPI200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRandomTriviaAPI200ResponsePairs : RandomTriviaAPI200Response -> List EncodedField
encodeRandomTriviaAPI200ResponsePairs model =
    let
        pairs =
            [ maybeEncodeNullable "trivia" Json.Encode.string model.trivia
            ]
    in
    pairs


encodeReadKeyValueFromStoreAPI200Response : ReadKeyValueFromStoreAPI200Response -> Json.Encode.Value
encodeReadKeyValueFromStoreAPI200Response =
    encodeObject << encodeReadKeyValueFromStoreAPI200ResponsePairs


encodeReadKeyValueFromStoreAPI200ResponseWithTag : ( String, String ) -> ReadKeyValueFromStoreAPI200Response -> Json.Encode.Value
encodeReadKeyValueFromStoreAPI200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeReadKeyValueFromStoreAPI200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeReadKeyValueFromStoreAPI200ResponsePairs : ReadKeyValueFromStoreAPI200Response -> List EncodedField
encodeReadKeyValueFromStoreAPI200ResponsePairs model =
    let
        pairs =
            [ maybeEncodeNullable "value" Json.Encode.string model.value
            ]
    in
    pairs


encodeRetrievePageRankAPI200Response : RetrievePageRankAPI200Response -> Json.Encode.Value
encodeRetrievePageRankAPI200Response =
    encodeObject << encodeRetrievePageRankAPI200ResponsePairs


encodeRetrievePageRankAPI200ResponseWithTag : ( String, String ) -> RetrievePageRankAPI200Response -> Json.Encode.Value
encodeRetrievePageRankAPI200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeRetrievePageRankAPI200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRetrievePageRankAPI200ResponsePairs : RetrievePageRankAPI200Response -> List EncodedField
encodeRetrievePageRankAPI200ResponsePairs model =
    let
        pairs =
            [ maybeEncode "page_rank" Json.Encode.float model.pageRank
            , maybeEncode "position" Json.Encode.int model.position
            , maybeEncode "percentile" Json.Encode.float model.percentile
            ]
    in
    pairs


encodeRetrieveRecipeInformationAPI200Response : RetrieveRecipeInformationAPI200Response -> Json.Encode.Value
encodeRetrieveRecipeInformationAPI200Response =
    encodeObject << encodeRetrieveRecipeInformationAPI200ResponsePairs


encodeRetrieveRecipeInformationAPI200ResponseWithTag : ( String, String ) -> RetrieveRecipeInformationAPI200Response -> Json.Encode.Value
encodeRetrieveRecipeInformationAPI200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeRetrieveRecipeInformationAPI200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRetrieveRecipeInformationAPI200ResponsePairs : RetrieveRecipeInformationAPI200Response -> List EncodedField
encodeRetrieveRecipeInformationAPI200ResponsePairs model =
    let
        pairs =
            [ maybeEncode "id" Json.Encode.int model.id
            , maybeEncodeNullable "title" Json.Encode.string model.title
            , maybeEncode "servings" Json.Encode.int model.servings
            , maybeEncode "images" (Json.Encode.list Json.Encode.string) model.images
            , maybeEncode "dietary_properties" encodeRetrieveRecipeInformationAPI200ResponseDietaryProperties model.dietaryProperties
            , maybeEncode "price_per_serving" Json.Encode.float model.pricePerServing
            , maybeEncode "times" encodeRetrieveRecipeInformationAPI200ResponseTimes model.times
            , maybeEncode "nutrition" encodeRetrieveRecipeInformationAPI200ResponseNutrition model.nutrition
            , maybeEncode "taste" encodeRetrieveRecipeInformationAPI200ResponseTaste model.taste
            , maybeEncode "cuisines" (Json.Encode.list Json.Encode.string) model.cuisines
            , maybeEncode "meal_types" (Json.Encode.list Json.Encode.string) model.mealTypes
            , maybeEncode "occasions" (Json.Encode.list Json.Encode.string) model.occasions
            , maybeEncode "ingredients" (Json.Encode.list encodeRetrieveRecipeInformationAPI200ResponseIngredientsInner) model.ingredients
            , maybeEncode "instructions" (Json.Encode.list encodeRetrieveRecipeInformationAPI200ResponseInstructionsInner) model.instructions
            , maybeEncode "credits" encodeRetrieveRecipeInformationAPI200ResponseCredits model.credits
            , maybeEncode "scores" encodeRetrieveRecipeInformationAPI200ResponseScores model.scores
            ]
    in
    pairs


encodeRetrieveRecipeInformationAPI200ResponseCredits : RetrieveRecipeInformationAPI200ResponseCredits -> Json.Encode.Value
encodeRetrieveRecipeInformationAPI200ResponseCredits =
    encodeObject << encodeRetrieveRecipeInformationAPI200ResponseCreditsPairs


encodeRetrieveRecipeInformationAPI200ResponseCreditsWithTag : ( String, String ) -> RetrieveRecipeInformationAPI200ResponseCredits -> Json.Encode.Value
encodeRetrieveRecipeInformationAPI200ResponseCreditsWithTag (tagField, tag) model =
    encodeObject (encodeRetrieveRecipeInformationAPI200ResponseCreditsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRetrieveRecipeInformationAPI200ResponseCreditsPairs : RetrieveRecipeInformationAPI200ResponseCredits -> List EncodedField
encodeRetrieveRecipeInformationAPI200ResponseCreditsPairs model =
    let
        pairs =
            [ maybeEncodeNullable "license" Json.Encode.string model.license
            , maybeEncodeNullable "text" Json.Encode.string model.text
            , maybeEncodeNullable "source_name" Json.Encode.string model.sourceName
            , maybeEncodeNullable "source_url" Json.Encode.string model.sourceUrl
            ]
    in
    pairs


encodeRetrieveRecipeInformationAPI200ResponseDietaryProperties : RetrieveRecipeInformationAPI200ResponseDietaryProperties -> Json.Encode.Value
encodeRetrieveRecipeInformationAPI200ResponseDietaryProperties =
    encodeObject << encodeRetrieveRecipeInformationAPI200ResponseDietaryPropertiesPairs


encodeRetrieveRecipeInformationAPI200ResponseDietaryPropertiesWithTag : ( String, String ) -> RetrieveRecipeInformationAPI200ResponseDietaryProperties -> Json.Encode.Value
encodeRetrieveRecipeInformationAPI200ResponseDietaryPropertiesWithTag (tagField, tag) model =
    encodeObject (encodeRetrieveRecipeInformationAPI200ResponseDietaryPropertiesPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRetrieveRecipeInformationAPI200ResponseDietaryPropertiesPairs : RetrieveRecipeInformationAPI200ResponseDietaryProperties -> List EncodedField
encodeRetrieveRecipeInformationAPI200ResponseDietaryPropertiesPairs model =
    let
        pairs =
            [ maybeEncode "low_fodmap" Json.Encode.bool model.lowFodmap
            , maybeEncode "vegetarian" Json.Encode.bool model.vegetarian
            , maybeEncode "vegan" Json.Encode.bool model.vegan
            , maybeEncode "gluten_free" Json.Encode.bool model.glutenFree
            , maybeEncode "dairy_free" Json.Encode.bool model.dairyFree
            , maybeEncodeNullable "gaps" Json.Encode.string model.gaps
            , maybeEncode "diets" (Json.Encode.list Json.Encode.string) model.diets
            ]
    in
    pairs


encodeRetrieveRecipeInformationAPI200ResponseIngredientsInner : RetrieveRecipeInformationAPI200ResponseIngredientsInner -> Json.Encode.Value
encodeRetrieveRecipeInformationAPI200ResponseIngredientsInner =
    encodeObject << encodeRetrieveRecipeInformationAPI200ResponseIngredientsInnerPairs


encodeRetrieveRecipeInformationAPI200ResponseIngredientsInnerWithTag : ( String, String ) -> RetrieveRecipeInformationAPI200ResponseIngredientsInner -> Json.Encode.Value
encodeRetrieveRecipeInformationAPI200ResponseIngredientsInnerWithTag (tagField, tag) model =
    encodeObject (encodeRetrieveRecipeInformationAPI200ResponseIngredientsInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRetrieveRecipeInformationAPI200ResponseIngredientsInnerPairs : RetrieveRecipeInformationAPI200ResponseIngredientsInner -> List EncodedField
encodeRetrieveRecipeInformationAPI200ResponseIngredientsInnerPairs model =
    let
        pairs =
            [ maybeEncodeNullable "image" Json.Encode.string model.image
            , maybeEncodeNullable "name_clean" Json.Encode.string model.nameClean
            , maybeEncode "amount" Json.Encode.float model.amount
            , maybeEncodeNullable "unit" Json.Encode.string model.unit
            , maybeEncode "measures" encodeRetrieveRecipeInformationAPI200ResponseIngredientsInnerMeasures model.measures
            , maybeEncodeNullable "original" Json.Encode.string model.original
            , maybeEncode "meta" (Json.Encode.list Json.Encode.string) model.meta
            , maybeEncodeNullable "original_name" Json.Encode.string model.originalName
            , maybeEncodeNullable "name" Json.Encode.string model.name
            , maybeEncode "id" Json.Encode.int model.id
            , maybeEncodeNullable "aisle" Json.Encode.string model.aisle
            , maybeEncodeNullable "consistency" Json.Encode.string model.consistency
            ]
    in
    pairs


encodeRetrieveRecipeInformationAPI200ResponseIngredientsInnerMeasures : RetrieveRecipeInformationAPI200ResponseIngredientsInnerMeasures -> Json.Encode.Value
encodeRetrieveRecipeInformationAPI200ResponseIngredientsInnerMeasures =
    encodeObject << encodeRetrieveRecipeInformationAPI200ResponseIngredientsInnerMeasuresPairs


encodeRetrieveRecipeInformationAPI200ResponseIngredientsInnerMeasuresWithTag : ( String, String ) -> RetrieveRecipeInformationAPI200ResponseIngredientsInnerMeasures -> Json.Encode.Value
encodeRetrieveRecipeInformationAPI200ResponseIngredientsInnerMeasuresWithTag (tagField, tag) model =
    encodeObject (encodeRetrieveRecipeInformationAPI200ResponseIngredientsInnerMeasuresPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRetrieveRecipeInformationAPI200ResponseIngredientsInnerMeasuresPairs : RetrieveRecipeInformationAPI200ResponseIngredientsInnerMeasures -> List EncodedField
encodeRetrieveRecipeInformationAPI200ResponseIngredientsInnerMeasuresPairs model =
    let
        pairs =
            [ maybeEncode "metric" encodeSearchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresMetric model.metric
            , maybeEncode "us" encodeSearchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresMetric model.us
            ]
    in
    pairs


encodeRetrieveRecipeInformationAPI200ResponseInstructionsInner : RetrieveRecipeInformationAPI200ResponseInstructionsInner -> Json.Encode.Value
encodeRetrieveRecipeInformationAPI200ResponseInstructionsInner =
    encodeObject << encodeRetrieveRecipeInformationAPI200ResponseInstructionsInnerPairs


encodeRetrieveRecipeInformationAPI200ResponseInstructionsInnerWithTag : ( String, String ) -> RetrieveRecipeInformationAPI200ResponseInstructionsInner -> Json.Encode.Value
encodeRetrieveRecipeInformationAPI200ResponseInstructionsInnerWithTag (tagField, tag) model =
    encodeObject (encodeRetrieveRecipeInformationAPI200ResponseInstructionsInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRetrieveRecipeInformationAPI200ResponseInstructionsInnerPairs : RetrieveRecipeInformationAPI200ResponseInstructionsInner -> List EncodedField
encodeRetrieveRecipeInformationAPI200ResponseInstructionsInnerPairs model =
    let
        pairs =
            [ maybeEncodeNullable "name" Json.Encode.string model.name
            , maybeEncode "steps" (Json.Encode.list encodeRetrieveRecipeInformationAPI200ResponseInstructionsInnerStepsInner) model.steps
            ]
    in
    pairs


encodeRetrieveRecipeInformationAPI200ResponseInstructionsInnerStepsInner : RetrieveRecipeInformationAPI200ResponseInstructionsInnerStepsInner -> Json.Encode.Value
encodeRetrieveRecipeInformationAPI200ResponseInstructionsInnerStepsInner =
    encodeObject << encodeRetrieveRecipeInformationAPI200ResponseInstructionsInnerStepsInnerPairs


encodeRetrieveRecipeInformationAPI200ResponseInstructionsInnerStepsInnerWithTag : ( String, String ) -> RetrieveRecipeInformationAPI200ResponseInstructionsInnerStepsInner -> Json.Encode.Value
encodeRetrieveRecipeInformationAPI200ResponseInstructionsInnerStepsInnerWithTag (tagField, tag) model =
    encodeObject (encodeRetrieveRecipeInformationAPI200ResponseInstructionsInnerStepsInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRetrieveRecipeInformationAPI200ResponseInstructionsInnerStepsInnerPairs : RetrieveRecipeInformationAPI200ResponseInstructionsInnerStepsInner -> List EncodedField
encodeRetrieveRecipeInformationAPI200ResponseInstructionsInnerStepsInnerPairs model =
    let
        pairs =
            [ maybeEncode "number" Json.Encode.int model.number
            , maybeEncode "ingredients" (Json.Encode.list encodeSearchDrinksAPI200ResponseDrinksInnerInstructionsInnerStepsInnerIngredientsInner) model.ingredients
            , maybeEncode "equipment" (Json.Encode.list encodeSearchDrinksAPI200ResponseDrinksInnerInstructionsInnerStepsInnerIngredientsInner) model.equipment
            , maybeEncodeNullable "step" Json.Encode.string model.step
            ]
    in
    pairs


encodeRetrieveRecipeInformationAPI200ResponseNutrition : RetrieveRecipeInformationAPI200ResponseNutrition -> Json.Encode.Value
encodeRetrieveRecipeInformationAPI200ResponseNutrition =
    encodeObject << encodeRetrieveRecipeInformationAPI200ResponseNutritionPairs


encodeRetrieveRecipeInformationAPI200ResponseNutritionWithTag : ( String, String ) -> RetrieveRecipeInformationAPI200ResponseNutrition -> Json.Encode.Value
encodeRetrieveRecipeInformationAPI200ResponseNutritionWithTag (tagField, tag) model =
    encodeObject (encodeRetrieveRecipeInformationAPI200ResponseNutritionPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRetrieveRecipeInformationAPI200ResponseNutritionPairs : RetrieveRecipeInformationAPI200ResponseNutrition -> List EncodedField
encodeRetrieveRecipeInformationAPI200ResponseNutritionPairs model =
    let
        pairs =
            [ maybeEncode "weight_per_serving" encodeSearchDrinksAPI200ResponseDrinksInnerNutritionWeightPerServing model.weightPerServing
            , maybeEncode "caloric_breakdown" encodeSearchDrinksAPI200ResponseDrinksInnerNutritionCaloricBreakdown model.caloricBreakdown
            , maybeEncode "flavonoids" (Json.Encode.list encodeSearchDrinksAPI200ResponseDrinksInnerNutritionFlavonoidsInner) model.flavonoids
            , maybeEncode "ingredient_breakdown" (Json.Encode.list encodeRetrieveRecipeInformationAPI200ResponseNutritionIngredientBreakdownInner) model.ingredientBreakdown
            , maybeEncode "properties" (Json.Encode.list encodeSearchRecipesAPI200ResponseRecipesInnerNutritionNutrientsInner) model.properties
            , maybeEncode "nutrients" (Json.Encode.list encodeSearchDrinksAPI200ResponseDrinksInnerNutritionNutrientsInner) model.nutrients
            ]
    in
    pairs


encodeRetrieveRecipeInformationAPI200ResponseNutritionIngredientBreakdownInner : RetrieveRecipeInformationAPI200ResponseNutritionIngredientBreakdownInner -> Json.Encode.Value
encodeRetrieveRecipeInformationAPI200ResponseNutritionIngredientBreakdownInner =
    encodeObject << encodeRetrieveRecipeInformationAPI200ResponseNutritionIngredientBreakdownInnerPairs


encodeRetrieveRecipeInformationAPI200ResponseNutritionIngredientBreakdownInnerWithTag : ( String, String ) -> RetrieveRecipeInformationAPI200ResponseNutritionIngredientBreakdownInner -> Json.Encode.Value
encodeRetrieveRecipeInformationAPI200ResponseNutritionIngredientBreakdownInnerWithTag (tagField, tag) model =
    encodeObject (encodeRetrieveRecipeInformationAPI200ResponseNutritionIngredientBreakdownInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRetrieveRecipeInformationAPI200ResponseNutritionIngredientBreakdownInnerPairs : RetrieveRecipeInformationAPI200ResponseNutritionIngredientBreakdownInner -> List EncodedField
encodeRetrieveRecipeInformationAPI200ResponseNutritionIngredientBreakdownInnerPairs model =
    let
        pairs =
            [ maybeEncodeNullable "name" Json.Encode.string model.name
            , maybeEncode "amount" Json.Encode.float model.amount
            , maybeEncodeNullable "unit" Json.Encode.string model.unit
            , maybeEncode "id" Json.Encode.int model.id
            , maybeEncode "nutrients" (Json.Encode.list encodeSearchDrinksAPI200ResponseDrinksInnerNutritionNutrientsInner) model.nutrients
            ]
    in
    pairs


encodeRetrieveRecipeInformationAPI200ResponseScores : RetrieveRecipeInformationAPI200ResponseScores -> Json.Encode.Value
encodeRetrieveRecipeInformationAPI200ResponseScores =
    encodeObject << encodeRetrieveRecipeInformationAPI200ResponseScoresPairs


encodeRetrieveRecipeInformationAPI200ResponseScoresWithTag : ( String, String ) -> RetrieveRecipeInformationAPI200ResponseScores -> Json.Encode.Value
encodeRetrieveRecipeInformationAPI200ResponseScoresWithTag (tagField, tag) model =
    encodeObject (encodeRetrieveRecipeInformationAPI200ResponseScoresPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRetrieveRecipeInformationAPI200ResponseScoresPairs : RetrieveRecipeInformationAPI200ResponseScores -> List EncodedField
encodeRetrieveRecipeInformationAPI200ResponseScoresPairs model =
    let
        pairs =
            [ maybeEncode "meta_score" Json.Encode.float model.metaScore
            , maybeEncode "weight_watcher_smart_points" Json.Encode.int model.weightWatcherSmartPoints
            , maybeEncode "health_score" Json.Encode.int model.healthScore
            ]
    in
    pairs


encodeRetrieveRecipeInformationAPI200ResponseTaste : RetrieveRecipeInformationAPI200ResponseTaste -> Json.Encode.Value
encodeRetrieveRecipeInformationAPI200ResponseTaste =
    encodeObject << encodeRetrieveRecipeInformationAPI200ResponseTastePairs


encodeRetrieveRecipeInformationAPI200ResponseTasteWithTag : ( String, String ) -> RetrieveRecipeInformationAPI200ResponseTaste -> Json.Encode.Value
encodeRetrieveRecipeInformationAPI200ResponseTasteWithTag (tagField, tag) model =
    encodeObject (encodeRetrieveRecipeInformationAPI200ResponseTastePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRetrieveRecipeInformationAPI200ResponseTastePairs : RetrieveRecipeInformationAPI200ResponseTaste -> List EncodedField
encodeRetrieveRecipeInformationAPI200ResponseTastePairs model =
    let
        pairs =
            [ maybeEncode "fattiness" Json.Encode.float model.fattiness
            , maybeEncode "spiciness" Json.Encode.int model.spiciness
            , maybeEncode "saltiness" Json.Encode.int model.saltiness
            , maybeEncode "bitterness" Json.Encode.float model.bitterness
            , maybeEncode "savoriness" Json.Encode.float model.savoriness
            , maybeEncode "sweetness" Json.Encode.float model.sweetness
            , maybeEncode "sourness" Json.Encode.float model.sourness
            ]
    in
    pairs


encodeRetrieveRecipeInformationAPI200ResponseTimes : RetrieveRecipeInformationAPI200ResponseTimes -> Json.Encode.Value
encodeRetrieveRecipeInformationAPI200ResponseTimes =
    encodeObject << encodeRetrieveRecipeInformationAPI200ResponseTimesPairs


encodeRetrieveRecipeInformationAPI200ResponseTimesWithTag : ( String, String ) -> RetrieveRecipeInformationAPI200ResponseTimes -> Json.Encode.Value
encodeRetrieveRecipeInformationAPI200ResponseTimesWithTag (tagField, tag) model =
    encodeObject (encodeRetrieveRecipeInformationAPI200ResponseTimesPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRetrieveRecipeInformationAPI200ResponseTimesPairs : RetrieveRecipeInformationAPI200ResponseTimes -> List EncodedField
encodeRetrieveRecipeInformationAPI200ResponseTimesPairs model =
    let
        pairs =
            [ maybeEncode "total_minutes" Json.Encode.int model.totalMinutes
            ]
    in
    pairs


encodeScoreReadabilityAPI200Response : ScoreReadabilityAPI200Response -> Json.Encode.Value
encodeScoreReadabilityAPI200Response =
    encodeObject << encodeScoreReadabilityAPI200ResponsePairs


encodeScoreReadabilityAPI200ResponseWithTag : ( String, String ) -> ScoreReadabilityAPI200Response -> Json.Encode.Value
encodeScoreReadabilityAPI200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeScoreReadabilityAPI200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeScoreReadabilityAPI200ResponsePairs : ScoreReadabilityAPI200Response -> List EncodedField
encodeScoreReadabilityAPI200ResponsePairs model =
    let
        pairs =
            [ maybeEncode "readability" encodeScoreTextAPI200ResponseReadability model.readability
            ]
    in
    pairs


encodeScoreTextAPI200Response : ScoreTextAPI200Response -> Json.Encode.Value
encodeScoreTextAPI200Response =
    encodeObject << encodeScoreTextAPI200ResponsePairs


encodeScoreTextAPI200ResponseWithTag : ( String, String ) -> ScoreTextAPI200Response -> Json.Encode.Value
encodeScoreTextAPI200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeScoreTextAPI200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeScoreTextAPI200ResponsePairs : ScoreTextAPI200Response -> List EncodedField
encodeScoreTextAPI200ResponsePairs model =
    let
        pairs =
            [ maybeEncode "number_of_words" Json.Encode.int model.numberOfWords
            , maybeEncode "number_of_sentences" Json.Encode.int model.numberOfSentences
            , maybeEncode "readability" encodeScoreTextAPI200ResponseReadability model.readability
            , maybeEncode "skimmability" encodeScoreTextAPI200ResponseSkimmability model.skimmability
            , maybeEncode "interestingness" encodeScoreTextAPI200ResponseInterestingness model.interestingness
            , maybeEncode "style" encodeScoreTextAPI200ResponseStyle model.style
            , maybeEncode "total_score" Json.Encode.float model.totalScore
            ]
    in
    pairs


encodeScoreTextAPI200ResponseInterestingness : ScoreTextAPI200ResponseInterestingness -> Json.Encode.Value
encodeScoreTextAPI200ResponseInterestingness =
    encodeObject << encodeScoreTextAPI200ResponseInterestingnessPairs


encodeScoreTextAPI200ResponseInterestingnessWithTag : ( String, String ) -> ScoreTextAPI200ResponseInterestingness -> Json.Encode.Value
encodeScoreTextAPI200ResponseInterestingnessWithTag (tagField, tag) model =
    encodeObject (encodeScoreTextAPI200ResponseInterestingnessPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeScoreTextAPI200ResponseInterestingnessPairs : ScoreTextAPI200ResponseInterestingness -> List EncodedField
encodeScoreTextAPI200ResponseInterestingnessPairs model =
    let
        pairs =
            [ maybeEncode "mainscores" encodeScoreTextAPI200ResponseSkimmabilityMainscores model.mainscores
            , maybeEncode "subscores" encodeScoreTextAPI200ResponseInterestingnessSubscores model.subscores
            ]
    in
    pairs


encodeScoreTextAPI200ResponseInterestingnessSubscores : ScoreTextAPI200ResponseInterestingnessSubscores -> Json.Encode.Value
encodeScoreTextAPI200ResponseInterestingnessSubscores =
    encodeObject << encodeScoreTextAPI200ResponseInterestingnessSubscoresPairs


encodeScoreTextAPI200ResponseInterestingnessSubscoresWithTag : ( String, String ) -> ScoreTextAPI200ResponseInterestingnessSubscores -> Json.Encode.Value
encodeScoreTextAPI200ResponseInterestingnessSubscoresWithTag (tagField, tag) model =
    encodeObject (encodeScoreTextAPI200ResponseInterestingnessSubscoresPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeScoreTextAPI200ResponseInterestingnessSubscoresPairs : ScoreTextAPI200ResponseInterestingnessSubscores -> List EncodedField
encodeScoreTextAPI200ResponseInterestingnessSubscoresPairs model =
    let
        pairs =
            [ maybeEncode "title_rating_score" (Json.Encode.list Json.Encode.int) model.titleRatingScore
            , maybeEncode "quote_score" (Json.Encode.list Json.Encode.int) model.quoteScore
            , maybeEncode "length_score" (Json.Encode.list Json.Encode.int) model.lengthScore
            , maybeEncode "link_score" (Json.Encode.list Json.Encode.int) model.linkScore
            , maybeEncode "google_hits_score" (Json.Encode.list Json.Encode.int) model.googleHitsScore
            ]
    in
    pairs


encodeScoreTextAPI200ResponseReadability : ScoreTextAPI200ResponseReadability -> Json.Encode.Value
encodeScoreTextAPI200ResponseReadability =
    encodeObject << encodeScoreTextAPI200ResponseReadabilityPairs


encodeScoreTextAPI200ResponseReadabilityWithTag : ( String, String ) -> ScoreTextAPI200ResponseReadability -> Json.Encode.Value
encodeScoreTextAPI200ResponseReadabilityWithTag (tagField, tag) model =
    encodeObject (encodeScoreTextAPI200ResponseReadabilityPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeScoreTextAPI200ResponseReadabilityPairs : ScoreTextAPI200ResponseReadability -> List EncodedField
encodeScoreTextAPI200ResponseReadabilityPairs model =
    let
        pairs =
            [ maybeEncode "mainscores" encodeScoreTextAPI200ResponseReadabilityMainscores model.mainscores
            , maybeEncode "subscores" encodeScoreTextAPI200ResponseReadabilitySubscores model.subscores
            ]
    in
    pairs


encodeScoreTextAPI200ResponseReadabilityMainscores : ScoreTextAPI200ResponseReadabilityMainscores -> Json.Encode.Value
encodeScoreTextAPI200ResponseReadabilityMainscores =
    encodeObject << encodeScoreTextAPI200ResponseReadabilityMainscoresPairs


encodeScoreTextAPI200ResponseReadabilityMainscoresWithTag : ( String, String ) -> ScoreTextAPI200ResponseReadabilityMainscores -> Json.Encode.Value
encodeScoreTextAPI200ResponseReadabilityMainscoresWithTag (tagField, tag) model =
    encodeObject (encodeScoreTextAPI200ResponseReadabilityMainscoresPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeScoreTextAPI200ResponseReadabilityMainscoresPairs : ScoreTextAPI200ResponseReadabilityMainscores -> List EncodedField
encodeScoreTextAPI200ResponseReadabilityMainscoresPairs model =
    let
        pairs =
            [ maybeEncode "total_possible" Json.Encode.int model.totalPossible
            , maybeEncode "total" Json.Encode.int model.total
            ]
    in
    pairs


encodeScoreTextAPI200ResponseReadabilitySubscores : ScoreTextAPI200ResponseReadabilitySubscores -> Json.Encode.Value
encodeScoreTextAPI200ResponseReadabilitySubscores =
    encodeObject << encodeScoreTextAPI200ResponseReadabilitySubscoresPairs


encodeScoreTextAPI200ResponseReadabilitySubscoresWithTag : ( String, String ) -> ScoreTextAPI200ResponseReadabilitySubscores -> Json.Encode.Value
encodeScoreTextAPI200ResponseReadabilitySubscoresWithTag (tagField, tag) model =
    encodeObject (encodeScoreTextAPI200ResponseReadabilitySubscoresPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeScoreTextAPI200ResponseReadabilitySubscoresPairs : ScoreTextAPI200ResponseReadabilitySubscores -> List EncodedField
encodeScoreTextAPI200ResponseReadabilitySubscoresPairs model =
    let
        pairs =
            [ maybeEncode "reading_time_seconds" Json.Encode.int model.readingTimeSeconds
            , maybeEncode "forcast" Json.Encode.float model.forcast
            , maybeEncode "flesch" Json.Encode.float model.flesch
            , maybeEncode "smog" Json.Encode.float model.smog
            , maybeEncode "ari" Json.Encode.float model.ari
            , maybeEncode "lix" Json.Encode.float model.lix
            , maybeEncode "coleman_liau" Json.Encode.float model.colemanLiau
            , maybeEncode "kincaid" Json.Encode.float model.kincaid
            , maybeEncode "fog" Json.Encode.float model.fog
            ]
    in
    pairs


encodeScoreTextAPI200ResponseSkimmability : ScoreTextAPI200ResponseSkimmability -> Json.Encode.Value
encodeScoreTextAPI200ResponseSkimmability =
    encodeObject << encodeScoreTextAPI200ResponseSkimmabilityPairs


encodeScoreTextAPI200ResponseSkimmabilityWithTag : ( String, String ) -> ScoreTextAPI200ResponseSkimmability -> Json.Encode.Value
encodeScoreTextAPI200ResponseSkimmabilityWithTag (tagField, tag) model =
    encodeObject (encodeScoreTextAPI200ResponseSkimmabilityPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeScoreTextAPI200ResponseSkimmabilityPairs : ScoreTextAPI200ResponseSkimmability -> List EncodedField
encodeScoreTextAPI200ResponseSkimmabilityPairs model =
    let
        pairs =
            [ maybeEncode "mainscores" encodeScoreTextAPI200ResponseSkimmabilityMainscores model.mainscores
            , maybeEncode "subscores" encodeScoreTextAPI200ResponseSkimmabilitySubscores model.subscores
            ]
    in
    pairs


encodeScoreTextAPI200ResponseSkimmabilityMainscores : ScoreTextAPI200ResponseSkimmabilityMainscores -> Json.Encode.Value
encodeScoreTextAPI200ResponseSkimmabilityMainscores =
    encodeObject << encodeScoreTextAPI200ResponseSkimmabilityMainscoresPairs


encodeScoreTextAPI200ResponseSkimmabilityMainscoresWithTag : ( String, String ) -> ScoreTextAPI200ResponseSkimmabilityMainscores -> Json.Encode.Value
encodeScoreTextAPI200ResponseSkimmabilityMainscoresWithTag (tagField, tag) model =
    encodeObject (encodeScoreTextAPI200ResponseSkimmabilityMainscoresPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeScoreTextAPI200ResponseSkimmabilityMainscoresPairs : ScoreTextAPI200ResponseSkimmabilityMainscores -> List EncodedField
encodeScoreTextAPI200ResponseSkimmabilityMainscoresPairs model =
    let
        pairs =
            [ maybeEncode "total_possible" Json.Encode.int model.totalPossible
            , maybeEncode "total" Json.Encode.float model.total
            ]
    in
    pairs


encodeScoreTextAPI200ResponseSkimmabilitySubscores : ScoreTextAPI200ResponseSkimmabilitySubscores -> Json.Encode.Value
encodeScoreTextAPI200ResponseSkimmabilitySubscores =
    encodeObject << encodeScoreTextAPI200ResponseSkimmabilitySubscoresPairs


encodeScoreTextAPI200ResponseSkimmabilitySubscoresWithTag : ( String, String ) -> ScoreTextAPI200ResponseSkimmabilitySubscores -> Json.Encode.Value
encodeScoreTextAPI200ResponseSkimmabilitySubscoresWithTag (tagField, tag) model =
    encodeObject (encodeScoreTextAPI200ResponseSkimmabilitySubscoresPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeScoreTextAPI200ResponseSkimmabilitySubscoresPairs : ScoreTextAPI200ResponseSkimmabilitySubscores -> List EncodedField
encodeScoreTextAPI200ResponseSkimmabilitySubscoresPairs model =
    let
        pairs =
            [ maybeEncode "bullet_point_ratio_score" (Json.Encode.list Json.Encode.int) model.bulletPointRatioScore
            , maybeEncode "image_score" (Json.Encode.list Json.Encode.int) model.imageScore
            , maybeEncode "highlighted_word_ratio_score" (Json.Encode.list Json.Encode.int) model.highlightedWordRatioScore
            , maybeEncode "video_score" (Json.Encode.list Json.Encode.int) model.videoScore
            , maybeEncode "paragraph_score" (Json.Encode.list Json.Encode.int) model.paragraphScore
            , maybeEncode "paragraph_headline_ratio_score" (Json.Encode.list Json.Encode.int) model.paragraphHeadlineRatioScore
            ]
    in
    pairs


encodeScoreTextAPI200ResponseStyle : ScoreTextAPI200ResponseStyle -> Json.Encode.Value
encodeScoreTextAPI200ResponseStyle =
    encodeObject << encodeScoreTextAPI200ResponseStylePairs


encodeScoreTextAPI200ResponseStyleWithTag : ( String, String ) -> ScoreTextAPI200ResponseStyle -> Json.Encode.Value
encodeScoreTextAPI200ResponseStyleWithTag (tagField, tag) model =
    encodeObject (encodeScoreTextAPI200ResponseStylePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeScoreTextAPI200ResponseStylePairs : ScoreTextAPI200ResponseStyle -> List EncodedField
encodeScoreTextAPI200ResponseStylePairs model =
    let
        pairs =
            [ maybeEncode "mainscores" encodeScoreTextAPI200ResponseReadabilityMainscores model.mainscores
            , maybeEncode "subscores" encodeScoreTextAPI200ResponseStyleSubscores model.subscores
            ]
    in
    pairs


encodeScoreTextAPI200ResponseStyleSubscores : ScoreTextAPI200ResponseStyleSubscores -> Json.Encode.Value
encodeScoreTextAPI200ResponseStyleSubscores =
    encodeObject << encodeScoreTextAPI200ResponseStyleSubscoresPairs


encodeScoreTextAPI200ResponseStyleSubscoresWithTag : ( String, String ) -> ScoreTextAPI200ResponseStyleSubscores -> Json.Encode.Value
encodeScoreTextAPI200ResponseStyleSubscoresWithTag (tagField, tag) model =
    encodeObject (encodeScoreTextAPI200ResponseStyleSubscoresPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeScoreTextAPI200ResponseStyleSubscoresPairs : ScoreTextAPI200ResponseStyleSubscores -> List EncodedField
encodeScoreTextAPI200ResponseStyleSubscoresPairs model =
    let
        pairs =
            [ maybeEncode "abbreviation_score" (Json.Encode.list Json.Encode.int) model.abbreviationScore
            , maybeEncode "style_score" (Json.Encode.list Json.Encode.int) model.styleScore
            , maybeEncode "spelling_score" (Json.Encode.list Json.Encode.int) model.spellingScore
            ]
    in
    pairs


encodeSearchBooksAPI200Response : SearchBooksAPI200Response -> Json.Encode.Value
encodeSearchBooksAPI200Response =
    encodeObject << encodeSearchBooksAPI200ResponsePairs


encodeSearchBooksAPI200ResponseWithTag : ( String, String ) -> SearchBooksAPI200Response -> Json.Encode.Value
encodeSearchBooksAPI200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeSearchBooksAPI200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchBooksAPI200ResponsePairs : SearchBooksAPI200Response -> List EncodedField
encodeSearchBooksAPI200ResponsePairs model =
    let
        pairs =
            [ maybeEncode "total_results" Json.Encode.int model.totalResults
            , maybeEncode "number" Json.Encode.int model.number
            , maybeEncode "offset" Json.Encode.int model.offset
            , maybeEncode "books" (Json.Encode.list (Json.Encode.list encodeSearchBooksAPI200ResponseBooksInnerInner)) model.books
            ]
    in
    pairs


encodeSearchBooksAPI200ResponseBooksInnerInner : SearchBooksAPI200ResponseBooksInnerInner -> Json.Encode.Value
encodeSearchBooksAPI200ResponseBooksInnerInner =
    encodeObject << encodeSearchBooksAPI200ResponseBooksInnerInnerPairs


encodeSearchBooksAPI200ResponseBooksInnerInnerWithTag : ( String, String ) -> SearchBooksAPI200ResponseBooksInnerInner -> Json.Encode.Value
encodeSearchBooksAPI200ResponseBooksInnerInnerWithTag (tagField, tag) model =
    encodeObject (encodeSearchBooksAPI200ResponseBooksInnerInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchBooksAPI200ResponseBooksInnerInnerPairs : SearchBooksAPI200ResponseBooksInnerInner -> List EncodedField
encodeSearchBooksAPI200ResponseBooksInnerInnerPairs model =
    let
        pairs =
            [ maybeEncodeNullable "title" Json.Encode.string model.title
            , maybeEncodeNullable "image" Json.Encode.string model.image
            , maybeEncode "id" Json.Encode.int model.id
            ]
    in
    pairs


encodeSearchDrinksAPI200Response : SearchDrinksAPI200Response -> Json.Encode.Value
encodeSearchDrinksAPI200Response =
    encodeObject << encodeSearchDrinksAPI200ResponsePairs


encodeSearchDrinksAPI200ResponseWithTag : ( String, String ) -> SearchDrinksAPI200Response -> Json.Encode.Value
encodeSearchDrinksAPI200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeSearchDrinksAPI200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchDrinksAPI200ResponsePairs : SearchDrinksAPI200Response -> List EncodedField
encodeSearchDrinksAPI200ResponsePairs model =
    let
        pairs =
            [ maybeEncode "offset" Json.Encode.int model.offset
            , maybeEncode "number" Json.Encode.int model.number
            , maybeEncode "drinks" (Json.Encode.list encodeSearchDrinksAPI200ResponseDrinksInner) model.drinks
            , maybeEncode "total_results" Json.Encode.int model.totalResults
            ]
    in
    pairs


encodeSearchDrinksAPI200ResponseDrinksInner : SearchDrinksAPI200ResponseDrinksInner -> Json.Encode.Value
encodeSearchDrinksAPI200ResponseDrinksInner =
    encodeObject << encodeSearchDrinksAPI200ResponseDrinksInnerPairs


encodeSearchDrinksAPI200ResponseDrinksInnerWithTag : ( String, String ) -> SearchDrinksAPI200ResponseDrinksInner -> Json.Encode.Value
encodeSearchDrinksAPI200ResponseDrinksInnerWithTag (tagField, tag) model =
    encodeObject (encodeSearchDrinksAPI200ResponseDrinksInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchDrinksAPI200ResponseDrinksInnerPairs : SearchDrinksAPI200ResponseDrinksInner -> List EncodedField
encodeSearchDrinksAPI200ResponseDrinksInnerPairs model =
    let
        pairs =
            [ maybeEncode "flavors" (Json.Encode.list Json.Encode.string) model.flavors
            , maybeEncode "instructions" (Json.Encode.list encodeSearchDrinksAPI200ResponseDrinksInnerInstructionsInner) model.instructions
            , maybeEncode "images" (Json.Encode.list Json.Encode.string) model.images
            , maybeEncode "nutrition" encodeSearchDrinksAPI200ResponseDrinksInnerNutrition model.nutrition
            , maybeEncodeNullable "glass_type" Json.Encode.string model.glassType
            , maybeEncode "credits" encodeSearchDrinksAPI200ResponseDrinksInnerCredits model.credits
            , maybeEncode "price_per_serving" Json.Encode.float model.pricePerServing
            , maybeEncodeNullable "description" Json.Encode.string model.description
            , maybeEncode "ingredients" (Json.Encode.list encodeSearchDrinksAPI200ResponseDrinksInnerIngredientsInner) model.ingredients
            , maybeEncode "id" Json.Encode.int model.id
            , maybeEncodeNullable "title" Json.Encode.string model.title
            , maybeEncode "cuisines" (Json.Encode.list Json.Encode.string) model.cuisines
            ]
    in
    pairs


encodeSearchDrinksAPI200ResponseDrinksInnerCredits : SearchDrinksAPI200ResponseDrinksInnerCredits -> Json.Encode.Value
encodeSearchDrinksAPI200ResponseDrinksInnerCredits =
    encodeObject << encodeSearchDrinksAPI200ResponseDrinksInnerCreditsPairs


encodeSearchDrinksAPI200ResponseDrinksInnerCreditsWithTag : ( String, String ) -> SearchDrinksAPI200ResponseDrinksInnerCredits -> Json.Encode.Value
encodeSearchDrinksAPI200ResponseDrinksInnerCreditsWithTag (tagField, tag) model =
    encodeObject (encodeSearchDrinksAPI200ResponseDrinksInnerCreditsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchDrinksAPI200ResponseDrinksInnerCreditsPairs : SearchDrinksAPI200ResponseDrinksInnerCredits -> List EncodedField
encodeSearchDrinksAPI200ResponseDrinksInnerCreditsPairs model =
    let
        pairs =
            [ maybeEncodeNullable "text" Json.Encode.string model.text
            , maybeEncodeNullable "source_name" Json.Encode.string model.sourceName
            , maybeEncodeNullable "source_url" Json.Encode.string model.sourceUrl
            ]
    in
    pairs


encodeSearchDrinksAPI200ResponseDrinksInnerIngredientsInner : SearchDrinksAPI200ResponseDrinksInnerIngredientsInner -> Json.Encode.Value
encodeSearchDrinksAPI200ResponseDrinksInnerIngredientsInner =
    encodeObject << encodeSearchDrinksAPI200ResponseDrinksInnerIngredientsInnerPairs


encodeSearchDrinksAPI200ResponseDrinksInnerIngredientsInnerWithTag : ( String, String ) -> SearchDrinksAPI200ResponseDrinksInnerIngredientsInner -> Json.Encode.Value
encodeSearchDrinksAPI200ResponseDrinksInnerIngredientsInnerWithTag (tagField, tag) model =
    encodeObject (encodeSearchDrinksAPI200ResponseDrinksInnerIngredientsInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchDrinksAPI200ResponseDrinksInnerIngredientsInnerPairs : SearchDrinksAPI200ResponseDrinksInnerIngredientsInner -> List EncodedField
encodeSearchDrinksAPI200ResponseDrinksInnerIngredientsInnerPairs model =
    let
        pairs =
            [ maybeEncodeNullable "image" Json.Encode.string model.image
            , maybeEncodeNullable "name_clean" Json.Encode.string model.nameClean
            , maybeEncode "amount" Json.Encode.int model.amount
            , maybeEncodeNullable "unit" Json.Encode.string model.unit
            , maybeEncode "measures" encodeSearchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasures model.measures
            , maybeEncodeNullable "original" Json.Encode.string model.original
            , maybeEncode "meta" (Json.Encode.list Json.Encode.string) model.meta
            , maybeEncodeNullable "original_name" Json.Encode.string model.originalName
            , maybeEncodeNullable "name" Json.Encode.string model.name
            , maybeEncode "id" Json.Encode.int model.id
            , maybeEncodeNullable "aisle" Json.Encode.string model.aisle
            , maybeEncodeNullable "consistency" Json.Encode.string model.consistency
            ]
    in
    pairs


encodeSearchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasures : SearchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasures -> Json.Encode.Value
encodeSearchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasures =
    encodeObject << encodeSearchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresPairs


encodeSearchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresWithTag : ( String, String ) -> SearchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasures -> Json.Encode.Value
encodeSearchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresWithTag (tagField, tag) model =
    encodeObject (encodeSearchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresPairs : SearchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasures -> List EncodedField
encodeSearchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresPairs model =
    let
        pairs =
            [ maybeEncode "metric" encodeSearchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresMetric model.metric
            , maybeEncode "us" encodeSearchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresUs model.us
            ]
    in
    pairs


encodeSearchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresMetric : SearchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresMetric -> Json.Encode.Value
encodeSearchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresMetric =
    encodeObject << encodeSearchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresMetricPairs


encodeSearchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresMetricWithTag : ( String, String ) -> SearchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresMetric -> Json.Encode.Value
encodeSearchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresMetricWithTag (tagField, tag) model =
    encodeObject (encodeSearchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresMetricPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresMetricPairs : SearchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresMetric -> List EncodedField
encodeSearchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresMetricPairs model =
    let
        pairs =
            [ maybeEncodeNullable "unit_short" Json.Encode.string model.unitShort
            , maybeEncode "amount" Json.Encode.float model.amount
            , maybeEncodeNullable "unit_long" Json.Encode.string model.unitLong
            ]
    in
    pairs


encodeSearchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresUs : SearchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresUs -> Json.Encode.Value
encodeSearchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresUs =
    encodeObject << encodeSearchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresUsPairs


encodeSearchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresUsWithTag : ( String, String ) -> SearchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresUs -> Json.Encode.Value
encodeSearchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresUsWithTag (tagField, tag) model =
    encodeObject (encodeSearchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresUsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresUsPairs : SearchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresUs -> List EncodedField
encodeSearchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresUsPairs model =
    let
        pairs =
            [ maybeEncodeNullable "unit_short" Json.Encode.string model.unitShort
            , maybeEncode "amount" Json.Encode.int model.amount
            , maybeEncodeNullable "unit_long" Json.Encode.string model.unitLong
            ]
    in
    pairs


encodeSearchDrinksAPI200ResponseDrinksInnerInstructionsInner : SearchDrinksAPI200ResponseDrinksInnerInstructionsInner -> Json.Encode.Value
encodeSearchDrinksAPI200ResponseDrinksInnerInstructionsInner =
    encodeObject << encodeSearchDrinksAPI200ResponseDrinksInnerInstructionsInnerPairs


encodeSearchDrinksAPI200ResponseDrinksInnerInstructionsInnerWithTag : ( String, String ) -> SearchDrinksAPI200ResponseDrinksInnerInstructionsInner -> Json.Encode.Value
encodeSearchDrinksAPI200ResponseDrinksInnerInstructionsInnerWithTag (tagField, tag) model =
    encodeObject (encodeSearchDrinksAPI200ResponseDrinksInnerInstructionsInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchDrinksAPI200ResponseDrinksInnerInstructionsInnerPairs : SearchDrinksAPI200ResponseDrinksInnerInstructionsInner -> List EncodedField
encodeSearchDrinksAPI200ResponseDrinksInnerInstructionsInnerPairs model =
    let
        pairs =
            [ maybeEncodeNullable "name" Json.Encode.string model.name
            , maybeEncode "steps" (Json.Encode.list encodeSearchDrinksAPI200ResponseDrinksInnerInstructionsInnerStepsInner) model.steps
            ]
    in
    pairs


encodeSearchDrinksAPI200ResponseDrinksInnerInstructionsInnerStepsInner : SearchDrinksAPI200ResponseDrinksInnerInstructionsInnerStepsInner -> Json.Encode.Value
encodeSearchDrinksAPI200ResponseDrinksInnerInstructionsInnerStepsInner =
    encodeObject << encodeSearchDrinksAPI200ResponseDrinksInnerInstructionsInnerStepsInnerPairs


encodeSearchDrinksAPI200ResponseDrinksInnerInstructionsInnerStepsInnerWithTag : ( String, String ) -> SearchDrinksAPI200ResponseDrinksInnerInstructionsInnerStepsInner -> Json.Encode.Value
encodeSearchDrinksAPI200ResponseDrinksInnerInstructionsInnerStepsInnerWithTag (tagField, tag) model =
    encodeObject (encodeSearchDrinksAPI200ResponseDrinksInnerInstructionsInnerStepsInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchDrinksAPI200ResponseDrinksInnerInstructionsInnerStepsInnerPairs : SearchDrinksAPI200ResponseDrinksInnerInstructionsInnerStepsInner -> List EncodedField
encodeSearchDrinksAPI200ResponseDrinksInnerInstructionsInnerStepsInnerPairs model =
    let
        pairs =
            [ maybeEncode "number" Json.Encode.int model.number
            , maybeEncode "ingredients" (Json.Encode.list encodeSearchDrinksAPI200ResponseDrinksInnerInstructionsInnerStepsInnerIngredientsInner) model.ingredients
            , maybeEncode "equipment" (Json.Encode.list Json.Encode.string) model.equipment
            , maybeEncodeNullable "step" Json.Encode.string model.step
            ]
    in
    pairs


encodeSearchDrinksAPI200ResponseDrinksInnerInstructionsInnerStepsInnerIngredientsInner : SearchDrinksAPI200ResponseDrinksInnerInstructionsInnerStepsInnerIngredientsInner -> Json.Encode.Value
encodeSearchDrinksAPI200ResponseDrinksInnerInstructionsInnerStepsInnerIngredientsInner =
    encodeObject << encodeSearchDrinksAPI200ResponseDrinksInnerInstructionsInnerStepsInnerIngredientsInnerPairs


encodeSearchDrinksAPI200ResponseDrinksInnerInstructionsInnerStepsInnerIngredientsInnerWithTag : ( String, String ) -> SearchDrinksAPI200ResponseDrinksInnerInstructionsInnerStepsInnerIngredientsInner -> Json.Encode.Value
encodeSearchDrinksAPI200ResponseDrinksInnerInstructionsInnerStepsInnerIngredientsInnerWithTag (tagField, tag) model =
    encodeObject (encodeSearchDrinksAPI200ResponseDrinksInnerInstructionsInnerStepsInnerIngredientsInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchDrinksAPI200ResponseDrinksInnerInstructionsInnerStepsInnerIngredientsInnerPairs : SearchDrinksAPI200ResponseDrinksInnerInstructionsInnerStepsInnerIngredientsInner -> List EncodedField
encodeSearchDrinksAPI200ResponseDrinksInnerInstructionsInnerStepsInnerIngredientsInnerPairs model =
    let
        pairs =
            [ maybeEncodeNullable "name" Json.Encode.string model.name
            , maybeEncodeNullable "image" Json.Encode.string model.image
            , maybeEncode "id" Json.Encode.int model.id
            ]
    in
    pairs


encodeSearchDrinksAPI200ResponseDrinksInnerNutrition : SearchDrinksAPI200ResponseDrinksInnerNutrition -> Json.Encode.Value
encodeSearchDrinksAPI200ResponseDrinksInnerNutrition =
    encodeObject << encodeSearchDrinksAPI200ResponseDrinksInnerNutritionPairs


encodeSearchDrinksAPI200ResponseDrinksInnerNutritionWithTag : ( String, String ) -> SearchDrinksAPI200ResponseDrinksInnerNutrition -> Json.Encode.Value
encodeSearchDrinksAPI200ResponseDrinksInnerNutritionWithTag (tagField, tag) model =
    encodeObject (encodeSearchDrinksAPI200ResponseDrinksInnerNutritionPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchDrinksAPI200ResponseDrinksInnerNutritionPairs : SearchDrinksAPI200ResponseDrinksInnerNutrition -> List EncodedField
encodeSearchDrinksAPI200ResponseDrinksInnerNutritionPairs model =
    let
        pairs =
            [ maybeEncode "weight_per_serving" encodeSearchDrinksAPI200ResponseDrinksInnerNutritionWeightPerServing model.weightPerServing
            , maybeEncode "caloric_breakdown" encodeSearchDrinksAPI200ResponseDrinksInnerNutritionCaloricBreakdown model.caloricBreakdown
            , maybeEncode "flavonoids" (Json.Encode.list encodeSearchDrinksAPI200ResponseDrinksInnerNutritionFlavonoidsInner) model.flavonoids
            , maybeEncode "ingredient_breakdown" (Json.Encode.list encodeSearchDrinksAPI200ResponseDrinksInnerNutritionIngredientBreakdownInner) model.ingredientBreakdown
            , maybeEncode "properties" (Json.Encode.list encodeSearchDrinksAPI200ResponseDrinksInnerNutritionFlavonoidsInner) model.properties
            , maybeEncode "nutrients" (Json.Encode.list encodeSearchDrinksAPI200ResponseDrinksInnerNutritionNutrientsInner) model.nutrients
            ]
    in
    pairs


encodeSearchDrinksAPI200ResponseDrinksInnerNutritionCaloricBreakdown : SearchDrinksAPI200ResponseDrinksInnerNutritionCaloricBreakdown -> Json.Encode.Value
encodeSearchDrinksAPI200ResponseDrinksInnerNutritionCaloricBreakdown =
    encodeObject << encodeSearchDrinksAPI200ResponseDrinksInnerNutritionCaloricBreakdownPairs


encodeSearchDrinksAPI200ResponseDrinksInnerNutritionCaloricBreakdownWithTag : ( String, String ) -> SearchDrinksAPI200ResponseDrinksInnerNutritionCaloricBreakdown -> Json.Encode.Value
encodeSearchDrinksAPI200ResponseDrinksInnerNutritionCaloricBreakdownWithTag (tagField, tag) model =
    encodeObject (encodeSearchDrinksAPI200ResponseDrinksInnerNutritionCaloricBreakdownPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchDrinksAPI200ResponseDrinksInnerNutritionCaloricBreakdownPairs : SearchDrinksAPI200ResponseDrinksInnerNutritionCaloricBreakdown -> List EncodedField
encodeSearchDrinksAPI200ResponseDrinksInnerNutritionCaloricBreakdownPairs model =
    let
        pairs =
            [ maybeEncode "percent_fat" Json.Encode.float model.percentFat
            , maybeEncode "percent_carbs" Json.Encode.float model.percentCarbs
            , maybeEncode "percent_protein" Json.Encode.float model.percentProtein
            ]
    in
    pairs


encodeSearchDrinksAPI200ResponseDrinksInnerNutritionFlavonoidsInner : SearchDrinksAPI200ResponseDrinksInnerNutritionFlavonoidsInner -> Json.Encode.Value
encodeSearchDrinksAPI200ResponseDrinksInnerNutritionFlavonoidsInner =
    encodeObject << encodeSearchDrinksAPI200ResponseDrinksInnerNutritionFlavonoidsInnerPairs


encodeSearchDrinksAPI200ResponseDrinksInnerNutritionFlavonoidsInnerWithTag : ( String, String ) -> SearchDrinksAPI200ResponseDrinksInnerNutritionFlavonoidsInner -> Json.Encode.Value
encodeSearchDrinksAPI200ResponseDrinksInnerNutritionFlavonoidsInnerWithTag (tagField, tag) model =
    encodeObject (encodeSearchDrinksAPI200ResponseDrinksInnerNutritionFlavonoidsInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchDrinksAPI200ResponseDrinksInnerNutritionFlavonoidsInnerPairs : SearchDrinksAPI200ResponseDrinksInnerNutritionFlavonoidsInner -> List EncodedField
encodeSearchDrinksAPI200ResponseDrinksInnerNutritionFlavonoidsInnerPairs model =
    let
        pairs =
            [ maybeEncodeNullable "name" Json.Encode.string model.name
            , maybeEncode "amount" Json.Encode.int model.amount
            , maybeEncodeNullable "unit" Json.Encode.string model.unit
            ]
    in
    pairs


encodeSearchDrinksAPI200ResponseDrinksInnerNutritionIngredientBreakdownInner : SearchDrinksAPI200ResponseDrinksInnerNutritionIngredientBreakdownInner -> Json.Encode.Value
encodeSearchDrinksAPI200ResponseDrinksInnerNutritionIngredientBreakdownInner =
    encodeObject << encodeSearchDrinksAPI200ResponseDrinksInnerNutritionIngredientBreakdownInnerPairs


encodeSearchDrinksAPI200ResponseDrinksInnerNutritionIngredientBreakdownInnerWithTag : ( String, String ) -> SearchDrinksAPI200ResponseDrinksInnerNutritionIngredientBreakdownInner -> Json.Encode.Value
encodeSearchDrinksAPI200ResponseDrinksInnerNutritionIngredientBreakdownInnerWithTag (tagField, tag) model =
    encodeObject (encodeSearchDrinksAPI200ResponseDrinksInnerNutritionIngredientBreakdownInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchDrinksAPI200ResponseDrinksInnerNutritionIngredientBreakdownInnerPairs : SearchDrinksAPI200ResponseDrinksInnerNutritionIngredientBreakdownInner -> List EncodedField
encodeSearchDrinksAPI200ResponseDrinksInnerNutritionIngredientBreakdownInnerPairs model =
    let
        pairs =
            [ maybeEncodeNullable "name" Json.Encode.string model.name
            , maybeEncode "amount" Json.Encode.int model.amount
            , maybeEncodeNullable "unit" Json.Encode.string model.unit
            , maybeEncode "id" Json.Encode.int model.id
            , maybeEncode "nutrients" (Json.Encode.list encodeSearchDrinksAPI200ResponseDrinksInnerNutritionIngredientBreakdownInnerNutrientsInner) model.nutrients
            ]
    in
    pairs


encodeSearchDrinksAPI200ResponseDrinksInnerNutritionIngredientBreakdownInnerNutrientsInner : SearchDrinksAPI200ResponseDrinksInnerNutritionIngredientBreakdownInnerNutrientsInner -> Json.Encode.Value
encodeSearchDrinksAPI200ResponseDrinksInnerNutritionIngredientBreakdownInnerNutrientsInner =
    encodeObject << encodeSearchDrinksAPI200ResponseDrinksInnerNutritionIngredientBreakdownInnerNutrientsInnerPairs


encodeSearchDrinksAPI200ResponseDrinksInnerNutritionIngredientBreakdownInnerNutrientsInnerWithTag : ( String, String ) -> SearchDrinksAPI200ResponseDrinksInnerNutritionIngredientBreakdownInnerNutrientsInner -> Json.Encode.Value
encodeSearchDrinksAPI200ResponseDrinksInnerNutritionIngredientBreakdownInnerNutrientsInnerWithTag (tagField, tag) model =
    encodeObject (encodeSearchDrinksAPI200ResponseDrinksInnerNutritionIngredientBreakdownInnerNutrientsInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchDrinksAPI200ResponseDrinksInnerNutritionIngredientBreakdownInnerNutrientsInnerPairs : SearchDrinksAPI200ResponseDrinksInnerNutritionIngredientBreakdownInnerNutrientsInner -> List EncodedField
encodeSearchDrinksAPI200ResponseDrinksInnerNutritionIngredientBreakdownInnerNutrientsInnerPairs model =
    let
        pairs =
            [ maybeEncodeNullable "name" Json.Encode.string model.name
            , maybeEncode "percent_of_daily_needs" Json.Encode.float model.percentOfDailyNeeds
            , maybeEncode "amount" Json.Encode.int model.amount
            , maybeEncodeNullable "unit" Json.Encode.string model.unit
            ]
    in
    pairs


encodeSearchDrinksAPI200ResponseDrinksInnerNutritionNutrientsInner : SearchDrinksAPI200ResponseDrinksInnerNutritionNutrientsInner -> Json.Encode.Value
encodeSearchDrinksAPI200ResponseDrinksInnerNutritionNutrientsInner =
    encodeObject << encodeSearchDrinksAPI200ResponseDrinksInnerNutritionNutrientsInnerPairs


encodeSearchDrinksAPI200ResponseDrinksInnerNutritionNutrientsInnerWithTag : ( String, String ) -> SearchDrinksAPI200ResponseDrinksInnerNutritionNutrientsInner -> Json.Encode.Value
encodeSearchDrinksAPI200ResponseDrinksInnerNutritionNutrientsInnerWithTag (tagField, tag) model =
    encodeObject (encodeSearchDrinksAPI200ResponseDrinksInnerNutritionNutrientsInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchDrinksAPI200ResponseDrinksInnerNutritionNutrientsInnerPairs : SearchDrinksAPI200ResponseDrinksInnerNutritionNutrientsInner -> List EncodedField
encodeSearchDrinksAPI200ResponseDrinksInnerNutritionNutrientsInnerPairs model =
    let
        pairs =
            [ maybeEncodeNullable "name" Json.Encode.string model.name
            , maybeEncode "percent_of_daily_needs" Json.Encode.float model.percentOfDailyNeeds
            , maybeEncode "amount" Json.Encode.float model.amount
            , maybeEncodeNullable "unit" Json.Encode.string model.unit
            ]
    in
    pairs


encodeSearchDrinksAPI200ResponseDrinksInnerNutritionWeightPerServing : SearchDrinksAPI200ResponseDrinksInnerNutritionWeightPerServing -> Json.Encode.Value
encodeSearchDrinksAPI200ResponseDrinksInnerNutritionWeightPerServing =
    encodeObject << encodeSearchDrinksAPI200ResponseDrinksInnerNutritionWeightPerServingPairs


encodeSearchDrinksAPI200ResponseDrinksInnerNutritionWeightPerServingWithTag : ( String, String ) -> SearchDrinksAPI200ResponseDrinksInnerNutritionWeightPerServing -> Json.Encode.Value
encodeSearchDrinksAPI200ResponseDrinksInnerNutritionWeightPerServingWithTag (tagField, tag) model =
    encodeObject (encodeSearchDrinksAPI200ResponseDrinksInnerNutritionWeightPerServingPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchDrinksAPI200ResponseDrinksInnerNutritionWeightPerServingPairs : SearchDrinksAPI200ResponseDrinksInnerNutritionWeightPerServing -> List EncodedField
encodeSearchDrinksAPI200ResponseDrinksInnerNutritionWeightPerServingPairs model =
    let
        pairs =
            [ maybeEncode "amount" Json.Encode.int model.amount
            , maybeEncodeNullable "unit" Json.Encode.string model.unit
            ]
    in
    pairs


encodeSearchGifsAPI200Response : SearchGifsAPI200Response -> Json.Encode.Value
encodeSearchGifsAPI200Response =
    encodeObject << encodeSearchGifsAPI200ResponsePairs


encodeSearchGifsAPI200ResponseWithTag : ( String, String ) -> SearchGifsAPI200Response -> Json.Encode.Value
encodeSearchGifsAPI200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeSearchGifsAPI200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchGifsAPI200ResponsePairs : SearchGifsAPI200Response -> List EncodedField
encodeSearchGifsAPI200ResponsePairs model =
    let
        pairs =
            [ maybeEncode "images" (Json.Encode.list encodeSearchGifsAPI200ResponseImagesInner) model.images
            ]
    in
    pairs


encodeSearchGifsAPI200ResponseImagesInner : SearchGifsAPI200ResponseImagesInner -> Json.Encode.Value
encodeSearchGifsAPI200ResponseImagesInner =
    encodeObject << encodeSearchGifsAPI200ResponseImagesInnerPairs


encodeSearchGifsAPI200ResponseImagesInnerWithTag : ( String, String ) -> SearchGifsAPI200ResponseImagesInner -> Json.Encode.Value
encodeSearchGifsAPI200ResponseImagesInnerWithTag (tagField, tag) model =
    encodeObject (encodeSearchGifsAPI200ResponseImagesInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchGifsAPI200ResponseImagesInnerPairs : SearchGifsAPI200ResponseImagesInner -> List EncodedField
encodeSearchGifsAPI200ResponseImagesInnerPairs model =
    let
        pairs =
            [ maybeEncode "width" Json.Encode.int model.width
            , maybeEncodeNullable "url" Json.Encode.string model.url
            , maybeEncode "height" Json.Encode.int model.height
            ]
    in
    pairs


encodeSearchIconsAPI200Response : SearchIconsAPI200Response -> Json.Encode.Value
encodeSearchIconsAPI200Response =
    encodeObject << encodeSearchIconsAPI200ResponsePairs


encodeSearchIconsAPI200ResponseWithTag : ( String, String ) -> SearchIconsAPI200Response -> Json.Encode.Value
encodeSearchIconsAPI200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeSearchIconsAPI200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchIconsAPI200ResponsePairs : SearchIconsAPI200Response -> List EncodedField
encodeSearchIconsAPI200ResponsePairs model =
    let
        pairs =
            [ maybeEncode "icons" (Json.Encode.list encodeSearchRoyaltyFreeImagesAPI200ResponseImagesInner) model.icons
            ]
    in
    pairs


encodeSearchJokesAPI200Response : SearchJokesAPI200Response -> Json.Encode.Value
encodeSearchJokesAPI200Response =
    encodeObject << encodeSearchJokesAPI200ResponsePairs


encodeSearchJokesAPI200ResponseWithTag : ( String, String ) -> SearchJokesAPI200Response -> Json.Encode.Value
encodeSearchJokesAPI200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeSearchJokesAPI200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchJokesAPI200ResponsePairs : SearchJokesAPI200Response -> List EncodedField
encodeSearchJokesAPI200ResponsePairs model =
    let
        pairs =
            [ maybeEncode "jokes" (Json.Encode.list encodeSearchJokesAPI200ResponseJokesInner) model.jokes
            , maybeEncode "available" Json.Encode.int model.available
            ]
    in
    pairs


encodeSearchJokesAPI200ResponseJokesInner : SearchJokesAPI200ResponseJokesInner -> Json.Encode.Value
encodeSearchJokesAPI200ResponseJokesInner =
    encodeObject << encodeSearchJokesAPI200ResponseJokesInnerPairs


encodeSearchJokesAPI200ResponseJokesInnerWithTag : ( String, String ) -> SearchJokesAPI200ResponseJokesInner -> Json.Encode.Value
encodeSearchJokesAPI200ResponseJokesInnerWithTag (tagField, tag) model =
    encodeObject (encodeSearchJokesAPI200ResponseJokesInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchJokesAPI200ResponseJokesInnerPairs : SearchJokesAPI200ResponseJokesInner -> List EncodedField
encodeSearchJokesAPI200ResponseJokesInnerPairs model =
    let
        pairs =
            [ maybeEncodeNullable "joke" Json.Encode.string model.joke
            ]
    in
    pairs


encodeSearchMemesAPI200Response : SearchMemesAPI200Response -> Json.Encode.Value
encodeSearchMemesAPI200Response =
    encodeObject << encodeSearchMemesAPI200ResponsePairs


encodeSearchMemesAPI200ResponseWithTag : ( String, String ) -> SearchMemesAPI200Response -> Json.Encode.Value
encodeSearchMemesAPI200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeSearchMemesAPI200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchMemesAPI200ResponsePairs : SearchMemesAPI200Response -> List EncodedField
encodeSearchMemesAPI200ResponsePairs model =
    let
        pairs =
            [ maybeEncode "memes" (Json.Encode.list encodeSearchMemesAPI200ResponseMemesInner) model.memes
            , maybeEncode "available" Json.Encode.int model.available
            ]
    in
    pairs


encodeSearchMemesAPI200ResponseMemesInner : SearchMemesAPI200ResponseMemesInner -> Json.Encode.Value
encodeSearchMemesAPI200ResponseMemesInner =
    encodeObject << encodeSearchMemesAPI200ResponseMemesInnerPairs


encodeSearchMemesAPI200ResponseMemesInnerWithTag : ( String, String ) -> SearchMemesAPI200ResponseMemesInner -> Json.Encode.Value
encodeSearchMemesAPI200ResponseMemesInnerWithTag (tagField, tag) model =
    encodeObject (encodeSearchMemesAPI200ResponseMemesInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchMemesAPI200ResponseMemesInnerPairs : SearchMemesAPI200ResponseMemesInner -> List EncodedField
encodeSearchMemesAPI200ResponseMemesInnerPairs model =
    let
        pairs =
            [ maybeEncodeNullable "type" Json.Encode.string model.type_
            , maybeEncodeNullable "description" Json.Encode.string model.description
            , maybeEncodeNullable "url" Json.Encode.string model.url
            ]
    in
    pairs


encodeSearchNewsAPI200Response : SearchNewsAPI200Response -> Json.Encode.Value
encodeSearchNewsAPI200Response =
    encodeObject << encodeSearchNewsAPI200ResponsePairs


encodeSearchNewsAPI200ResponseWithTag : ( String, String ) -> SearchNewsAPI200Response -> Json.Encode.Value
encodeSearchNewsAPI200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeSearchNewsAPI200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchNewsAPI200ResponsePairs : SearchNewsAPI200Response -> List EncodedField
encodeSearchNewsAPI200ResponsePairs model =
    let
        pairs =
            [ maybeEncode "offset" Json.Encode.int model.offset
            , maybeEncode "number" Json.Encode.int model.number
            , maybeEncode "available" Json.Encode.int model.available
            , maybeEncode "news" (Json.Encode.list encodeSearchNewsAPI200ResponseNewsInner) model.news
            ]
    in
    pairs


encodeSearchNewsAPI200ResponseNewsInner : SearchNewsAPI200ResponseNewsInner -> Json.Encode.Value
encodeSearchNewsAPI200ResponseNewsInner =
    encodeObject << encodeSearchNewsAPI200ResponseNewsInnerPairs


encodeSearchNewsAPI200ResponseNewsInnerWithTag : ( String, String ) -> SearchNewsAPI200ResponseNewsInner -> Json.Encode.Value
encodeSearchNewsAPI200ResponseNewsInnerWithTag (tagField, tag) model =
    encodeObject (encodeSearchNewsAPI200ResponseNewsInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchNewsAPI200ResponseNewsInnerPairs : SearchNewsAPI200ResponseNewsInner -> List EncodedField
encodeSearchNewsAPI200ResponseNewsInnerPairs model =
    let
        pairs =
            [ maybeEncodeNullable "summary" Json.Encode.string model.summary
            , maybeEncodeNullable "image" Json.Encode.string model.image
            , maybeEncode "sentiment" Json.Encode.float model.sentiment
            , maybeEncodeNullable "language" Json.Encode.string model.language
            , maybeEncodeNullable "video" Json.Encode.string model.video
            , maybeEncodeNullable "title" Json.Encode.string model.title
            , maybeEncodeNullable "url" Json.Encode.string model.url
            , maybeEncodeNullable "source_country" Json.Encode.string model.sourceCountry
            , maybeEncode "id" Json.Encode.int model.id
            , maybeEncodeNullable "text" Json.Encode.string model.text
            , maybeEncodeNullable "category" Json.Encode.string model.category
            , maybeEncodeNullable "publish_date" Json.Encode.string model.publishDate
            , maybeEncode "authors" (Json.Encode.list Json.Encode.string) model.authors
            ]
    in
    pairs


encodeSearchRecipesAPI200Response : SearchRecipesAPI200Response -> Json.Encode.Value
encodeSearchRecipesAPI200Response =
    encodeObject << encodeSearchRecipesAPI200ResponsePairs


encodeSearchRecipesAPI200ResponseWithTag : ( String, String ) -> SearchRecipesAPI200Response -> Json.Encode.Value
encodeSearchRecipesAPI200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeSearchRecipesAPI200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchRecipesAPI200ResponsePairs : SearchRecipesAPI200Response -> List EncodedField
encodeSearchRecipesAPI200ResponsePairs model =
    let
        pairs =
            [ maybeEncode "offset" Json.Encode.int model.offset
            , maybeEncode "number" Json.Encode.int model.number
            , maybeEncode "recipes" (Json.Encode.list encodeSearchRecipesAPI200ResponseRecipesInner) model.recipes
            , maybeEncode "total_results" Json.Encode.int model.totalResults
            ]
    in
    pairs


encodeSearchRecipesAPI200ResponseRecipesInner : SearchRecipesAPI200ResponseRecipesInner -> Json.Encode.Value
encodeSearchRecipesAPI200ResponseRecipesInner =
    encodeObject << encodeSearchRecipesAPI200ResponseRecipesInnerPairs


encodeSearchRecipesAPI200ResponseRecipesInnerWithTag : ( String, String ) -> SearchRecipesAPI200ResponseRecipesInner -> Json.Encode.Value
encodeSearchRecipesAPI200ResponseRecipesInnerWithTag (tagField, tag) model =
    encodeObject (encodeSearchRecipesAPI200ResponseRecipesInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchRecipesAPI200ResponseRecipesInnerPairs : SearchRecipesAPI200ResponseRecipesInner -> List EncodedField
encodeSearchRecipesAPI200ResponseRecipesInnerPairs model =
    let
        pairs =
            [ maybeEncode "images" (Json.Encode.list Json.Encode.string) model.images
            , maybeEncode "nutrition" encodeSearchRecipesAPI200ResponseRecipesInnerNutrition model.nutrition
            , maybeEncode "id" Json.Encode.int model.id
            , maybeEncodeNullable "title" Json.Encode.string model.title
            ]
    in
    pairs


encodeSearchRecipesAPI200ResponseRecipesInnerNutrition : SearchRecipesAPI200ResponseRecipesInnerNutrition -> Json.Encode.Value
encodeSearchRecipesAPI200ResponseRecipesInnerNutrition =
    encodeObject << encodeSearchRecipesAPI200ResponseRecipesInnerNutritionPairs


encodeSearchRecipesAPI200ResponseRecipesInnerNutritionWithTag : ( String, String ) -> SearchRecipesAPI200ResponseRecipesInnerNutrition -> Json.Encode.Value
encodeSearchRecipesAPI200ResponseRecipesInnerNutritionWithTag (tagField, tag) model =
    encodeObject (encodeSearchRecipesAPI200ResponseRecipesInnerNutritionPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchRecipesAPI200ResponseRecipesInnerNutritionPairs : SearchRecipesAPI200ResponseRecipesInnerNutrition -> List EncodedField
encodeSearchRecipesAPI200ResponseRecipesInnerNutritionPairs model =
    let
        pairs =
            [ maybeEncode "nutrients" (Json.Encode.list encodeSearchRecipesAPI200ResponseRecipesInnerNutritionNutrientsInner) model.nutrients
            ]
    in
    pairs


encodeSearchRecipesAPI200ResponseRecipesInnerNutritionNutrientsInner : SearchRecipesAPI200ResponseRecipesInnerNutritionNutrientsInner -> Json.Encode.Value
encodeSearchRecipesAPI200ResponseRecipesInnerNutritionNutrientsInner =
    encodeObject << encodeSearchRecipesAPI200ResponseRecipesInnerNutritionNutrientsInnerPairs


encodeSearchRecipesAPI200ResponseRecipesInnerNutritionNutrientsInnerWithTag : ( String, String ) -> SearchRecipesAPI200ResponseRecipesInnerNutritionNutrientsInner -> Json.Encode.Value
encodeSearchRecipesAPI200ResponseRecipesInnerNutritionNutrientsInnerWithTag (tagField, tag) model =
    encodeObject (encodeSearchRecipesAPI200ResponseRecipesInnerNutritionNutrientsInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchRecipesAPI200ResponseRecipesInnerNutritionNutrientsInnerPairs : SearchRecipesAPI200ResponseRecipesInnerNutritionNutrientsInner -> List EncodedField
encodeSearchRecipesAPI200ResponseRecipesInnerNutritionNutrientsInnerPairs model =
    let
        pairs =
            [ maybeEncodeNullable "name" Json.Encode.string model.name
            , maybeEncode "amount" Json.Encode.float model.amount
            , maybeEncodeNullable "unit" Json.Encode.string model.unit
            ]
    in
    pairs


encodeSearchRestaurantsAPI200Response : SearchRestaurantsAPI200Response -> Json.Encode.Value
encodeSearchRestaurantsAPI200Response =
    encodeObject << encodeSearchRestaurantsAPI200ResponsePairs


encodeSearchRestaurantsAPI200ResponseWithTag : ( String, String ) -> SearchRestaurantsAPI200Response -> Json.Encode.Value
encodeSearchRestaurantsAPI200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeSearchRestaurantsAPI200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchRestaurantsAPI200ResponsePairs : SearchRestaurantsAPI200Response -> List EncodedField
encodeSearchRestaurantsAPI200ResponsePairs model =
    let
        pairs =
            [ maybeEncode "restaurants" (Json.Encode.list encodeSearchRestaurantsAPI200ResponseRestaurantsInner) model.restaurants
            ]
    in
    pairs


encodeSearchRestaurantsAPI200ResponseRestaurantsInner : SearchRestaurantsAPI200ResponseRestaurantsInner -> Json.Encode.Value
encodeSearchRestaurantsAPI200ResponseRestaurantsInner =
    encodeObject << encodeSearchRestaurantsAPI200ResponseRestaurantsInnerPairs


encodeSearchRestaurantsAPI200ResponseRestaurantsInnerWithTag : ( String, String ) -> SearchRestaurantsAPI200ResponseRestaurantsInner -> Json.Encode.Value
encodeSearchRestaurantsAPI200ResponseRestaurantsInnerWithTag (tagField, tag) model =
    encodeObject (encodeSearchRestaurantsAPI200ResponseRestaurantsInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchRestaurantsAPI200ResponseRestaurantsInnerPairs : SearchRestaurantsAPI200ResponseRestaurantsInner -> List EncodedField
encodeSearchRestaurantsAPI200ResponseRestaurantsInnerPairs model =
    let
        pairs =
            [ maybeEncode "offers_third_party_delivery" Json.Encode.bool model.offersThirdPartyDelivery
            , maybeEncode "address" encodeSearchRestaurantsAPI200ResponseRestaurantsInnerAddress model.address
            , maybeEncode "supports_upc_codes" Json.Encode.bool model.supportsUpcCodes
            , maybeEncode "is_open" Json.Encode.bool model.isOpen
            , maybeEncodeNullable "description" Json.Encode.string model.description
            , maybeEncode "weighted_rating_value" Json.Encode.int model.weightedRatingValue
            , maybeEncodeNullable "type" Json.Encode.string model.type_
            , maybeEncode "offers_first_party_delivery" Json.Encode.bool model.offersFirstPartyDelivery
            , maybeEncode "aggregated_rating_count" Json.Encode.int model.aggregatedRatingCount
            , maybeEncode "pickup_enabled" Json.Encode.bool model.pickupEnabled
            , maybeEncode "cuisines" (Json.Encode.list Json.Encode.string) model.cuisines
            , maybeEncode "miles" Json.Encode.float model.miles
            , maybeEncode "dollar_signs" Json.Encode.int model.dollarSigns
            , maybeEncode "delivery_enabled" Json.Encode.bool model.deliveryEnabled
            , maybeEncodeNullable "name" Json.Encode.string model.name
            , maybeEncode "phone_number" Json.Encode.float model.phoneNumber
            , maybeEncodeNullable "_id" Json.Encode.string model.id
            , maybeEncode "local_hours" encodeSearchRestaurantsAPI200ResponseRestaurantsInnerLocalHours model.localHours
            ]
    in
    pairs


encodeSearchRestaurantsAPI200ResponseRestaurantsInnerAddress : SearchRestaurantsAPI200ResponseRestaurantsInnerAddress -> Json.Encode.Value
encodeSearchRestaurantsAPI200ResponseRestaurantsInnerAddress =
    encodeObject << encodeSearchRestaurantsAPI200ResponseRestaurantsInnerAddressPairs


encodeSearchRestaurantsAPI200ResponseRestaurantsInnerAddressWithTag : ( String, String ) -> SearchRestaurantsAPI200ResponseRestaurantsInnerAddress -> Json.Encode.Value
encodeSearchRestaurantsAPI200ResponseRestaurantsInnerAddressWithTag (tagField, tag) model =
    encodeObject (encodeSearchRestaurantsAPI200ResponseRestaurantsInnerAddressPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchRestaurantsAPI200ResponseRestaurantsInnerAddressPairs : SearchRestaurantsAPI200ResponseRestaurantsInnerAddress -> List EncodedField
encodeSearchRestaurantsAPI200ResponseRestaurantsInnerAddressPairs model =
    let
        pairs =
            [ maybeEncodeNullable "zipcode" Json.Encode.string model.zipcode
            , maybeEncodeNullable "country" Json.Encode.string model.country
            , maybeEncodeNullable "city" Json.Encode.string model.city
            , maybeEncode "latitude" Json.Encode.float model.latitude
            , maybeEncode "lon" Json.Encode.float model.lon
            , maybeEncodeNullable "street_addr_2" Json.Encode.string model.streetAddr2
            , maybeEncodeNullable "state" Json.Encode.string model.state
            , maybeEncodeNullable "street_addr" Json.Encode.string model.streetAddr
            , maybeEncode "lat" Json.Encode.float model.lat
            , maybeEncode "longitude" Json.Encode.float model.longitude
            ]
    in
    pairs


encodeSearchRestaurantsAPI200ResponseRestaurantsInnerLocalHours : SearchRestaurantsAPI200ResponseRestaurantsInnerLocalHours -> Json.Encode.Value
encodeSearchRestaurantsAPI200ResponseRestaurantsInnerLocalHours =
    encodeObject << encodeSearchRestaurantsAPI200ResponseRestaurantsInnerLocalHoursPairs


encodeSearchRestaurantsAPI200ResponseRestaurantsInnerLocalHoursWithTag : ( String, String ) -> SearchRestaurantsAPI200ResponseRestaurantsInnerLocalHours -> Json.Encode.Value
encodeSearchRestaurantsAPI200ResponseRestaurantsInnerLocalHoursWithTag (tagField, tag) model =
    encodeObject (encodeSearchRestaurantsAPI200ResponseRestaurantsInnerLocalHoursPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchRestaurantsAPI200ResponseRestaurantsInnerLocalHoursPairs : SearchRestaurantsAPI200ResponseRestaurantsInnerLocalHours -> List EncodedField
encodeSearchRestaurantsAPI200ResponseRestaurantsInnerLocalHoursPairs model =
    let
        pairs =
            [ maybeEncode "operational" encodeSearchRestaurantsAPI200ResponseRestaurantsInnerLocalHoursOperational model.operational
            , maybeEncode "delivery" encodeSearchRestaurantsAPI200ResponseRestaurantsInnerLocalHoursOperational model.delivery
            , maybeEncode "pickup" encodeSearchRestaurantsAPI200ResponseRestaurantsInnerLocalHoursOperational model.pickup
            , maybeEncode "dine_in" encodeSearchRestaurantsAPI200ResponseRestaurantsInnerLocalHoursOperational model.dineIn
            ]
    in
    pairs


encodeSearchRestaurantsAPI200ResponseRestaurantsInnerLocalHoursOperational : SearchRestaurantsAPI200ResponseRestaurantsInnerLocalHoursOperational -> Json.Encode.Value
encodeSearchRestaurantsAPI200ResponseRestaurantsInnerLocalHoursOperational =
    encodeObject << encodeSearchRestaurantsAPI200ResponseRestaurantsInnerLocalHoursOperationalPairs


encodeSearchRestaurantsAPI200ResponseRestaurantsInnerLocalHoursOperationalWithTag : ( String, String ) -> SearchRestaurantsAPI200ResponseRestaurantsInnerLocalHoursOperational -> Json.Encode.Value
encodeSearchRestaurantsAPI200ResponseRestaurantsInnerLocalHoursOperationalWithTag (tagField, tag) model =
    encodeObject (encodeSearchRestaurantsAPI200ResponseRestaurantsInnerLocalHoursOperationalPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchRestaurantsAPI200ResponseRestaurantsInnerLocalHoursOperationalPairs : SearchRestaurantsAPI200ResponseRestaurantsInnerLocalHoursOperational -> List EncodedField
encodeSearchRestaurantsAPI200ResponseRestaurantsInnerLocalHoursOperationalPairs model =
    let
        pairs =
            [ maybeEncodeNullable "sunday" Json.Encode.string model.sunday
            , maybeEncodeNullable "saturday" Json.Encode.string model.saturday
            , maybeEncodeNullable "tuesday" Json.Encode.string model.tuesday
            , maybeEncodeNullable "thursday" Json.Encode.string model.thursday
            , maybeEncodeNullable "friday" Json.Encode.string model.friday
            , maybeEncodeNullable "wednesday" Json.Encode.string model.wednesday
            , maybeEncodeNullable "monday" Json.Encode.string model.monday
            ]
    in
    pairs


encodeSearchRoyaltyFreeImagesAPI200Response : SearchRoyaltyFreeImagesAPI200Response -> Json.Encode.Value
encodeSearchRoyaltyFreeImagesAPI200Response =
    encodeObject << encodeSearchRoyaltyFreeImagesAPI200ResponsePairs


encodeSearchRoyaltyFreeImagesAPI200ResponseWithTag : ( String, String ) -> SearchRoyaltyFreeImagesAPI200Response -> Json.Encode.Value
encodeSearchRoyaltyFreeImagesAPI200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeSearchRoyaltyFreeImagesAPI200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchRoyaltyFreeImagesAPI200ResponsePairs : SearchRoyaltyFreeImagesAPI200Response -> List EncodedField
encodeSearchRoyaltyFreeImagesAPI200ResponsePairs model =
    let
        pairs =
            [ maybeEncode "images" (Json.Encode.list encodeSearchRoyaltyFreeImagesAPI200ResponseImagesInner) model.images
            ]
    in
    pairs


encodeSearchRoyaltyFreeImagesAPI200ResponseImagesInner : SearchRoyaltyFreeImagesAPI200ResponseImagesInner -> Json.Encode.Value
encodeSearchRoyaltyFreeImagesAPI200ResponseImagesInner =
    encodeObject << encodeSearchRoyaltyFreeImagesAPI200ResponseImagesInnerPairs


encodeSearchRoyaltyFreeImagesAPI200ResponseImagesInnerWithTag : ( String, String ) -> SearchRoyaltyFreeImagesAPI200ResponseImagesInner -> Json.Encode.Value
encodeSearchRoyaltyFreeImagesAPI200ResponseImagesInnerWithTag (tagField, tag) model =
    encodeObject (encodeSearchRoyaltyFreeImagesAPI200ResponseImagesInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchRoyaltyFreeImagesAPI200ResponseImagesInnerPairs : SearchRoyaltyFreeImagesAPI200ResponseImagesInner -> List EncodedField
encodeSearchRoyaltyFreeImagesAPI200ResponseImagesInnerPairs model =
    let
        pairs =
            [ maybeEncode "width" Json.Encode.int model.width
            , maybeEncode "license" encodeSearchRoyaltyFreeImagesAPI200ResponseImagesInnerLicense model.license
            , maybeEncodeNullable "thumbnail" Json.Encode.string model.thumbnail
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "url" Json.Encode.string model.url
            , maybeEncode "height" Json.Encode.int model.height
            ]
    in
    pairs


encodeSearchRoyaltyFreeImagesAPI200ResponseImagesInnerLicense : SearchRoyaltyFreeImagesAPI200ResponseImagesInnerLicense -> Json.Encode.Value
encodeSearchRoyaltyFreeImagesAPI200ResponseImagesInnerLicense =
    encodeObject << encodeSearchRoyaltyFreeImagesAPI200ResponseImagesInnerLicensePairs


encodeSearchRoyaltyFreeImagesAPI200ResponseImagesInnerLicenseWithTag : ( String, String ) -> SearchRoyaltyFreeImagesAPI200ResponseImagesInnerLicense -> Json.Encode.Value
encodeSearchRoyaltyFreeImagesAPI200ResponseImagesInnerLicenseWithTag (tagField, tag) model =
    encodeObject (encodeSearchRoyaltyFreeImagesAPI200ResponseImagesInnerLicensePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchRoyaltyFreeImagesAPI200ResponseImagesInnerLicensePairs : SearchRoyaltyFreeImagesAPI200ResponseImagesInnerLicense -> List EncodedField
encodeSearchRoyaltyFreeImagesAPI200ResponseImagesInnerLicensePairs model =
    let
        pairs =
            [ maybeEncodeNullable "name" Json.Encode.string model.name
            , maybeEncodeNullable "link" Json.Encode.string model.link
            ]
    in
    pairs


encodeSearchWebAPI200Response : SearchWebAPI200Response -> Json.Encode.Value
encodeSearchWebAPI200Response =
    encodeObject << encodeSearchWebAPI200ResponsePairs


encodeSearchWebAPI200ResponseWithTag : ( String, String ) -> SearchWebAPI200Response -> Json.Encode.Value
encodeSearchWebAPI200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeSearchWebAPI200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchWebAPI200ResponsePairs : SearchWebAPI200Response -> List EncodedField
encodeSearchWebAPI200ResponsePairs model =
    let
        pairs =
            [ maybeEncode "results" (Json.Encode.list encodeSearchWebAPI200ResponseResultsInner) model.results
            ]
    in
    pairs


encodeSearchWebAPI200ResponseResultsInner : SearchWebAPI200ResponseResultsInner -> Json.Encode.Value
encodeSearchWebAPI200ResponseResultsInner =
    encodeObject << encodeSearchWebAPI200ResponseResultsInnerPairs


encodeSearchWebAPI200ResponseResultsInnerWithTag : ( String, String ) -> SearchWebAPI200ResponseResultsInner -> Json.Encode.Value
encodeSearchWebAPI200ResponseResultsInnerWithTag (tagField, tag) model =
    encodeObject (encodeSearchWebAPI200ResponseResultsInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchWebAPI200ResponseResultsInnerPairs : SearchWebAPI200ResponseResultsInner -> List EncodedField
encodeSearchWebAPI200ResponseResultsInnerPairs model =
    let
        pairs =
            [ maybeEncodeNullable "title" Json.Encode.string model.title
            , maybeEncodeNullable "summary" Json.Encode.string model.summary
            , maybeEncodeNullable "url" Json.Encode.string model.url
            ]
    in
    pairs


encodeSingularizeWordAPI200Response : SingularizeWordAPI200Response -> Json.Encode.Value
encodeSingularizeWordAPI200Response =
    encodeObject << encodeSingularizeWordAPI200ResponsePairs


encodeSingularizeWordAPI200ResponseWithTag : ( String, String ) -> SingularizeWordAPI200Response -> Json.Encode.Value
encodeSingularizeWordAPI200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeSingularizeWordAPI200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSingularizeWordAPI200ResponsePairs : SingularizeWordAPI200Response -> List EncodedField
encodeSingularizeWordAPI200ResponsePairs model =
    let
        pairs =
            [ maybeEncodeNullable "original" Json.Encode.string model.original
            , maybeEncodeNullable "singular" Json.Encode.string model.singular
            ]
    in
    pairs


encodeStemTextAPI200Response : StemTextAPI200Response -> Json.Encode.Value
encodeStemTextAPI200Response =
    encodeObject << encodeStemTextAPI200ResponsePairs


encodeStemTextAPI200ResponseWithTag : ( String, String ) -> StemTextAPI200Response -> Json.Encode.Value
encodeStemTextAPI200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeStemTextAPI200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeStemTextAPI200ResponsePairs : StemTextAPI200Response -> List EncodedField
encodeStemTextAPI200ResponsePairs model =
    let
        pairs =
            [ maybeEncodeNullable "original" Json.Encode.string model.original
            , maybeEncodeNullable "stemmed" Json.Encode.string model.stemmed
            ]
    in
    pairs


encodeStoreKeyValueGETAPI200Response : StoreKeyValueGETAPI200Response -> Json.Encode.Value
encodeStoreKeyValueGETAPI200Response =
    encodeObject << encodeStoreKeyValueGETAPI200ResponsePairs


encodeStoreKeyValueGETAPI200ResponseWithTag : ( String, String ) -> StoreKeyValueGETAPI200Response -> Json.Encode.Value
encodeStoreKeyValueGETAPI200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeStoreKeyValueGETAPI200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeStoreKeyValueGETAPI200ResponsePairs : StoreKeyValueGETAPI200Response -> List EncodedField
encodeStoreKeyValueGETAPI200ResponsePairs model =
    let
        pairs =
            [ maybeEncodeNullable "status" Json.Encode.string model.status
            ]
    in
    pairs


encodeTagPartOfSpeechAPI200Response : TagPartOfSpeechAPI200Response -> Json.Encode.Value
encodeTagPartOfSpeechAPI200Response =
    encodeObject << encodeTagPartOfSpeechAPI200ResponsePairs


encodeTagPartOfSpeechAPI200ResponseWithTag : ( String, String ) -> TagPartOfSpeechAPI200Response -> Json.Encode.Value
encodeTagPartOfSpeechAPI200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeTagPartOfSpeechAPI200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeTagPartOfSpeechAPI200ResponsePairs : TagPartOfSpeechAPI200Response -> List EncodedField
encodeTagPartOfSpeechAPI200ResponsePairs model =
    let
        pairs =
            [ maybeEncodeNullable "tagged_text" Json.Encode.string model.taggedText
            ]
    in
    pairs


encodeTopNewsAPI200Response : TopNewsAPI200Response -> Json.Encode.Value
encodeTopNewsAPI200Response =
    encodeObject << encodeTopNewsAPI200ResponsePairs


encodeTopNewsAPI200ResponseWithTag : ( String, String ) -> TopNewsAPI200Response -> Json.Encode.Value
encodeTopNewsAPI200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeTopNewsAPI200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeTopNewsAPI200ResponsePairs : TopNewsAPI200Response -> List EncodedField
encodeTopNewsAPI200ResponsePairs model =
    let
        pairs =
            [ maybeEncode "top_news" (Json.Encode.list encodeTopNewsAPI200ResponseTopNewsInner) model.topNews
            , maybeEncodeNullable "language" Json.Encode.string model.language
            , maybeEncodeNullable "country" Json.Encode.string model.country
            ]
    in
    pairs


encodeTopNewsAPI200ResponseTopNewsInner : TopNewsAPI200ResponseTopNewsInner -> Json.Encode.Value
encodeTopNewsAPI200ResponseTopNewsInner =
    encodeObject << encodeTopNewsAPI200ResponseTopNewsInnerPairs


encodeTopNewsAPI200ResponseTopNewsInnerWithTag : ( String, String ) -> TopNewsAPI200ResponseTopNewsInner -> Json.Encode.Value
encodeTopNewsAPI200ResponseTopNewsInnerWithTag (tagField, tag) model =
    encodeObject (encodeTopNewsAPI200ResponseTopNewsInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeTopNewsAPI200ResponseTopNewsInnerPairs : TopNewsAPI200ResponseTopNewsInner -> List EncodedField
encodeTopNewsAPI200ResponseTopNewsInnerPairs model =
    let
        pairs =
            [ maybeEncode "news" (Json.Encode.list encodeTopNewsAPI200ResponseTopNewsInnerNewsInner) model.news
            ]
    in
    pairs


encodeTopNewsAPI200ResponseTopNewsInnerNewsInner : TopNewsAPI200ResponseTopNewsInnerNewsInner -> Json.Encode.Value
encodeTopNewsAPI200ResponseTopNewsInnerNewsInner =
    encodeObject << encodeTopNewsAPI200ResponseTopNewsInnerNewsInnerPairs


encodeTopNewsAPI200ResponseTopNewsInnerNewsInnerWithTag : ( String, String ) -> TopNewsAPI200ResponseTopNewsInnerNewsInner -> Json.Encode.Value
encodeTopNewsAPI200ResponseTopNewsInnerNewsInnerWithTag (tagField, tag) model =
    encodeObject (encodeTopNewsAPI200ResponseTopNewsInnerNewsInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeTopNewsAPI200ResponseTopNewsInnerNewsInnerPairs : TopNewsAPI200ResponseTopNewsInnerNewsInner -> List EncodedField
encodeTopNewsAPI200ResponseTopNewsInnerNewsInnerPairs model =
    let
        pairs =
            [ maybeEncodeNullable "summary" Json.Encode.string model.summary
            , maybeEncodeNullable "image" Json.Encode.string model.image
            , maybeEncode "id" Json.Encode.int model.id
            , maybeEncodeNullable "text" Json.Encode.string model.text
            , maybeEncodeNullable "title" Json.Encode.string model.title
            , maybeEncodeNullable "publish_date" Json.Encode.string model.publishDate
            , maybeEncodeNullable "url" Json.Encode.string model.url
            , maybeEncode "authors" (Json.Encode.list Json.Encode.string) model.authors
            ]
    in
    pairs


encodeVectorSearchAPI200Response : VectorSearchAPI200Response -> Json.Encode.Value
encodeVectorSearchAPI200Response =
    encodeObject << encodeVectorSearchAPI200ResponsePairs


encodeVectorSearchAPI200ResponseWithTag : ( String, String ) -> VectorSearchAPI200Response -> Json.Encode.Value
encodeVectorSearchAPI200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeVectorSearchAPI200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeVectorSearchAPI200ResponsePairs : VectorSearchAPI200Response -> List EncodedField
encodeVectorSearchAPI200ResponsePairs model =
    let
        pairs =
            [ maybeEncode "vectors" (Json.Encode.list encodeVectorSearchAPI200ResponseVectorsInner) model.vectors
            ]
    in
    pairs


encodeVectorSearchAPI200ResponseVectorsInner : VectorSearchAPI200ResponseVectorsInner -> Json.Encode.Value
encodeVectorSearchAPI200ResponseVectorsInner =
    encodeObject << encodeVectorSearchAPI200ResponseVectorsInnerPairs


encodeVectorSearchAPI200ResponseVectorsInnerWithTag : ( String, String ) -> VectorSearchAPI200ResponseVectorsInner -> Json.Encode.Value
encodeVectorSearchAPI200ResponseVectorsInnerWithTag (tagField, tag) model =
    encodeObject (encodeVectorSearchAPI200ResponseVectorsInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeVectorSearchAPI200ResponseVectorsInnerPairs : VectorSearchAPI200ResponseVectorsInner -> List EncodedField
encodeVectorSearchAPI200ResponseVectorsInnerPairs model =
    let
        pairs =
            [ maybeEncodeNullable "license" Json.Encode.string model.license
            , maybeEncodeNullable "title" Json.Encode.string model.title
            , maybeEncodeNullable "author" Json.Encode.string model.author
            , maybeEncodeNullable "image_url" Json.Encode.string model.imageUrl
            ]
    in
    pairs


encodeVerifyEmailAddressAPI200Response : VerifyEmailAddressAPI200Response -> Json.Encode.Value
encodeVerifyEmailAddressAPI200Response =
    encodeObject << encodeVerifyEmailAddressAPI200ResponsePairs


encodeVerifyEmailAddressAPI200ResponseWithTag : ( String, String ) -> VerifyEmailAddressAPI200Response -> Json.Encode.Value
encodeVerifyEmailAddressAPI200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeVerifyEmailAddressAPI200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeVerifyEmailAddressAPI200ResponsePairs : VerifyEmailAddressAPI200Response -> List EncodedField
encodeVerifyEmailAddressAPI200ResponsePairs model =
    let
        pairs =
            [ maybeEncodeNullable "email" Json.Encode.string model.email
            , maybeEncodeNullable "domain" Json.Encode.string model.domain
            , maybeEncodeNullable "first_name" Json.Encode.string model.firstName
            , maybeEncodeNullable "middle_name" Json.Encode.string model.middleName
            , maybeEncodeNullable "last_name" Json.Encode.string model.lastName
            , maybeEncodeNullable "full_name" Json.Encode.string model.fullName
            , maybeEncodeNullable "username" Json.Encode.string model.username
            , maybeEncodeNullable "image" Json.Encode.string model.image
            , maybeEncodeNullable "result" Json.Encode.string model.result
            , maybeEncode "disposable" Json.Encode.bool model.disposable
            , maybeEncode "accept_all" Json.Encode.bool model.acceptAll
            , maybeEncode "free_provider" Json.Encode.bool model.freeProvider
            ]
    in
    pairs


-- DECODER


computeNutritionAPI200ResponseDecoder : Json.Decode.Decoder ComputeNutritionAPI200Response
computeNutritionAPI200ResponseDecoder =
    Json.Decode.succeed ComputeNutritionAPI200Response
        |> maybeDecode "nutrients" (Json.Decode.list searchDrinksAPI200ResponseDrinksInnerNutritionNutrientsInnerDecoder) Nothing
        |> maybeDecode "properties" (Json.Decode.list searchDrinksAPI200ResponseDrinksInnerNutritionFlavonoidsInnerDecoder) Nothing
        |> maybeDecode "flavonoids" (Json.Decode.list searchRecipesAPI200ResponseRecipesInnerNutritionNutrientsInnerDecoder) Nothing
        |> maybeDecode "ingredient_breakdown" (Json.Decode.list computeNutritionAPI200ResponseIngredientBreakdownInnerDecoder) Nothing
        |> maybeDecode "caloric_breakdown" searchDrinksAPI200ResponseDrinksInnerNutritionCaloricBreakdownDecoder Nothing
        |> maybeDecode "weight_per_serving" searchDrinksAPI200ResponseDrinksInnerNutritionWeightPerServingDecoder Nothing


computeNutritionAPI200ResponseIngredientBreakdownInnerDecoder : Json.Decode.Decoder ComputeNutritionAPI200ResponseIngredientBreakdownInner
computeNutritionAPI200ResponseIngredientBreakdownInnerDecoder =
    Json.Decode.succeed ComputeNutritionAPI200ResponseIngredientBreakdownInner
        |> maybeDecodeNullable "name" Json.Decode.string Nothing
        |> maybeDecode "amount" Json.Decode.int Nothing
        |> maybeDecodeNullable "unit" Json.Decode.string Nothing
        |> maybeDecode "id" Json.Decode.int Nothing
        |> maybeDecode "nutrients" (Json.Decode.list computeNutritionAPI200ResponseIngredientBreakdownInnerNutrientsInnerDecoder) Nothing


computeNutritionAPI200ResponseIngredientBreakdownInnerNutrientsInnerDecoder : Json.Decode.Decoder ComputeNutritionAPI200ResponseIngredientBreakdownInnerNutrientsInner
computeNutritionAPI200ResponseIngredientBreakdownInnerNutrientsInnerDecoder =
    Json.Decode.succeed ComputeNutritionAPI200ResponseIngredientBreakdownInnerNutrientsInner
        |> maybeDecodeNullable "name" Json.Decode.string Nothing
        |> maybeDecode "percent_of_daily_needs" Json.Decode.int Nothing
        |> maybeDecode "amount" Json.Decode.int Nothing
        |> maybeDecodeNullable "unit" Json.Decode.string Nothing


convertUnitsAPI200ResponseDecoder : Json.Decode.Decoder ConvertUnitsAPI200Response
convertUnitsAPI200ResponseDecoder =
    Json.Decode.succeed ConvertUnitsAPI200Response
        |> maybeDecode "target_amount" Json.Decode.float Nothing
        |> maybeDecodeNullable "target_unit" Json.Decode.string Nothing


correctSpellingAPI200ResponseDecoder : Json.Decode.Decoder CorrectSpellingAPI200Response
correctSpellingAPI200ResponseDecoder =
    Json.Decode.succeed CorrectSpellingAPI200Response
        |> maybeDecodeNullable "corrected_text" Json.Decode.string Nothing


detectGenderByNameAPI200ResponseDecoder : Json.Decode.Decoder DetectGenderByNameAPI200Response
detectGenderByNameAPI200ResponseDecoder =
    Json.Decode.succeed DetectGenderByNameAPI200Response
        |> maybeDecodeNullable "name" Json.Decode.string Nothing
        |> maybeDecode "probability_male" Json.Decode.float Nothing
        |> maybeDecode "probability_female" Json.Decode.float Nothing
        |> maybeDecode "popularity" Json.Decode.float Nothing


detectLanguageAPI200ResponseInnerDecoder : Json.Decode.Decoder DetectLanguageAPI200ResponseInner
detectLanguageAPI200ResponseInnerDecoder =
    Json.Decode.succeed DetectLanguageAPI200ResponseInner
        |> maybeDecodeNullable "language" Json.Decode.string Nothing
        |> maybeDecode "confidence" Json.Decode.float Nothing


detectMainImageColorAPI200ResponseInnerDecoder : Json.Decode.Decoder DetectMainImageColorAPI200ResponseInner
detectMainImageColorAPI200ResponseInnerDecoder =
    Json.Decode.succeed DetectMainImageColorAPI200ResponseInner
        |> maybeDecodeNullable "specific_color" Json.Decode.string Nothing
        |> maybeDecodeNullable "main_color" Json.Decode.string Nothing
        |> maybeDecodeNullable "hex_code" Json.Decode.string Nothing


detectSentimentAPI200ResponseDecoder : Json.Decode.Decoder DetectSentimentAPI200Response
detectSentimentAPI200ResponseDecoder =
    Json.Decode.succeed DetectSentimentAPI200Response
        |> maybeDecode "document" detectSentimentAPI200ResponseDocumentDecoder Nothing
        |> maybeDecode "sentences" (Json.Decode.list detectSentimentAPI200ResponseSentencesInnerDecoder) Nothing


detectSentimentAPI200ResponseDocumentDecoder : Json.Decode.Decoder DetectSentimentAPI200ResponseDocument
detectSentimentAPI200ResponseDocumentDecoder =
    Json.Decode.succeed DetectSentimentAPI200ResponseDocument
        |> maybeDecodeNullable "sentiment" Json.Decode.string Nothing
        |> maybeDecode "confidence" Json.Decode.int Nothing
        |> maybeDecode "average_confidence" Json.Decode.int Nothing


detectSentimentAPI200ResponseSentencesInnerDecoder : Json.Decode.Decoder DetectSentimentAPI200ResponseSentencesInner
detectSentimentAPI200ResponseSentencesInnerDecoder =
    Json.Decode.succeed DetectSentimentAPI200ResponseSentencesInner
        |> maybeDecode "length" Json.Decode.int Nothing
        |> maybeDecodeNullable "sentiment" Json.Decode.string Nothing
        |> maybeDecode "offset" Json.Decode.int Nothing
        |> maybeDecode "confidence" Json.Decode.int Nothing


extractAuthorsAPI200ResponseDecoder : Json.Decode.Decoder ExtractAuthorsAPI200Response
extractAuthorsAPI200ResponseDecoder =
    Json.Decode.succeed ExtractAuthorsAPI200Response
        |> maybeDecode "authors" (Json.Decode.list extractAuthorsAPI200ResponseAuthorsInnerDecoder) Nothing


extractAuthorsAPI200ResponseAuthorsInnerDecoder : Json.Decode.Decoder ExtractAuthorsAPI200ResponseAuthorsInner
extractAuthorsAPI200ResponseAuthorsInnerDecoder =
    Json.Decode.succeed ExtractAuthorsAPI200ResponseAuthorsInner
        |> maybeDecodeNullable "link" Json.Decode.string Nothing
        |> maybeDecodeNullable "name" Json.Decode.string Nothing


extractContentFromAWebPageAPI200ResponseDecoder : Json.Decode.Decoder ExtractContentFromAWebPageAPI200Response
extractContentFromAWebPageAPI200ResponseDecoder =
    Json.Decode.succeed ExtractContentFromAWebPageAPI200Response
        |> maybeDecodeNullable "title" Json.Decode.string Nothing
        |> maybeDecodeNullable "main_text" Json.Decode.string Nothing
        |> maybeDecodeNullable "main_html" Json.Decode.string Nothing
        |> maybeDecode "images" (Json.Decode.list Json.Decode.string) Nothing


extractDatesAPI200ResponseDecoder : Json.Decode.Decoder ExtractDatesAPI200Response
extractDatesAPI200ResponseDecoder =
    Json.Decode.succeed ExtractDatesAPI200Response
        |> maybeDecode "dates" (Json.Decode.list extractDatesAPI200ResponseDatesInnerDecoder) Nothing


extractDatesAPI200ResponseDatesInnerDecoder : Json.Decode.Decoder ExtractDatesAPI200ResponseDatesInner
extractDatesAPI200ResponseDatesInnerDecoder =
    Json.Decode.succeed ExtractDatesAPI200ResponseDatesInner
        |> maybeDecode "start_position" Json.Decode.int Nothing
        |> maybeDecodeNullable "date" Json.Decode.string Nothing
        |> maybeDecode "normalized_date" Json.Decode.float Nothing
        |> maybeDecodeNullable "tag" Json.Decode.string Nothing
        |> maybeDecode "end_position" Json.Decode.int Nothing


extractEntitiesAPI200ResponseDecoder : Json.Decode.Decoder ExtractEntitiesAPI200Response
extractEntitiesAPI200ResponseDecoder =
    Json.Decode.succeed ExtractEntitiesAPI200Response
        |> maybeDecode "entities" (Json.Decode.list extractEntitiesAPI200ResponseEntitiesInnerDecoder) Nothing


extractEntitiesAPI200ResponseEntitiesInnerDecoder : Json.Decode.Decoder ExtractEntitiesAPI200ResponseEntitiesInner
extractEntitiesAPI200ResponseEntitiesInnerDecoder =
    Json.Decode.succeed ExtractEntitiesAPI200ResponseEntitiesInner
        |> maybeDecode "start_position" Json.Decode.int Nothing
        |> maybeDecodeNullable "image" Json.Decode.string Nothing
        |> maybeDecodeNullable "type" Json.Decode.string Nothing
        |> maybeDecodeNullable "value" Json.Decode.string Nothing
        |> maybeDecode "end_position" Json.Decode.int Nothing


extractNewsAPI200ResponseDecoder : Json.Decode.Decoder ExtractNewsAPI200Response
extractNewsAPI200ResponseDecoder =
    Json.Decode.succeed ExtractNewsAPI200Response
        |> maybeDecodeNullable "title" Json.Decode.string Nothing
        |> maybeDecodeNullable "text" Json.Decode.string Nothing
        |> maybeDecodeNullable "url" Json.Decode.string Nothing
        |> maybeDecode "images" (Json.Decode.list extractNewsAPI200ResponseImagesInnerDecoder) Nothing
        |> maybeDecode "videos" (Json.Decode.list extractNewsAPI200ResponseVideosInnerDecoder) Nothing
        |> maybeDecodeNullable "publish_date" Json.Decode.string Nothing
        |> maybeDecode "authors" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecodeNullable "language" Json.Decode.string Nothing


extractNewsAPI200ResponseImagesInnerDecoder : Json.Decode.Decoder ExtractNewsAPI200ResponseImagesInner
extractNewsAPI200ResponseImagesInnerDecoder =
    Json.Decode.succeed ExtractNewsAPI200ResponseImagesInner
        |> maybeDecode "width" Json.Decode.int Nothing
        |> maybeDecodeNullable "title" Json.Decode.string Nothing
        |> maybeDecodeNullable "url" Json.Decode.string Nothing
        |> maybeDecode "height" Json.Decode.int Nothing


extractNewsAPI200ResponseVideosInnerDecoder : Json.Decode.Decoder ExtractNewsAPI200ResponseVideosInner
extractNewsAPI200ResponseVideosInnerDecoder =
    Json.Decode.succeed ExtractNewsAPI200ResponseVideosInner
        |> maybeDecodeNullable "summary" Json.Decode.string Nothing
        |> maybeDecode "duration" Json.Decode.int Nothing
        |> maybeDecodeNullable "thumbnail" Json.Decode.string Nothing
        |> maybeDecodeNullable "title" Json.Decode.string Nothing
        |> maybeDecodeNullable "url" Json.Decode.string Nothing


extractPublishDateAPI200ResponseDecoder : Json.Decode.Decoder ExtractPublishDateAPI200Response
extractPublishDateAPI200ResponseDecoder =
    Json.Decode.succeed ExtractPublishDateAPI200Response
        |> maybeDecodeNullable "publish_date" Json.Decode.string Nothing


findSimilarBooksAPI200ResponseDecoder : Json.Decode.Decoder FindSimilarBooksAPI200Response
findSimilarBooksAPI200ResponseDecoder =
    Json.Decode.succeed FindSimilarBooksAPI200Response
        |> maybeDecode "similar_books" (Json.Decode.list searchBooksAPI200ResponseBooksInnerInnerDecoder) Nothing


generateNonsenseWordAPI200ResponseDecoder : Json.Decode.Decoder GenerateNonsenseWordAPI200Response
generateNonsenseWordAPI200ResponseDecoder =
    Json.Decode.succeed GenerateNonsenseWordAPI200Response
        |> maybeDecodeNullable "word" Json.Decode.string Nothing
        |> maybeDecode "rating" Json.Decode.float Nothing


listWordSynonymsAPI200ResponseDecoder : Json.Decode.Decoder ListWordSynonymsAPI200Response
listWordSynonymsAPI200ResponseDecoder =
    Json.Decode.succeed ListWordSynonymsAPI200Response
        |> maybeDecode "synonyms" (Json.Decode.list Json.Decode.string) Nothing


pluralizeWordAPI200ResponseDecoder : Json.Decode.Decoder PluralizeWordAPI200Response
pluralizeWordAPI200ResponseDecoder =
    Json.Decode.succeed PluralizeWordAPI200Response
        |> maybeDecodeNullable "original" Json.Decode.string Nothing
        |> maybeDecodeNullable "plural" Json.Decode.string Nothing


randomMemeAPI200ResponseDecoder : Json.Decode.Decoder RandomMemeAPI200Response
randomMemeAPI200ResponseDecoder =
    Json.Decode.succeed RandomMemeAPI200Response
        |> maybeDecodeNullable "description" Json.Decode.string Nothing
        |> maybeDecodeNullable "url" Json.Decode.string Nothing
        |> maybeDecodeNullable "type" Json.Decode.string Nothing
        |> maybeDecode "width" Json.Decode.int Nothing
        |> maybeDecode "height" Json.Decode.int Nothing
        |> maybeDecode "ratio" Json.Decode.float Nothing


randomPoemAPI200ResponseDecoder : Json.Decode.Decoder RandomPoemAPI200Response
randomPoemAPI200ResponseDecoder =
    Json.Decode.succeed RandomPoemAPI200Response
        |> maybeDecodeNullable "title" Json.Decode.string Nothing
        |> maybeDecodeNullable "author" Json.Decode.string Nothing
        |> maybeDecodeNullable "poem" Json.Decode.string Nothing


randomQuoteAPI200ResponseDecoder : Json.Decode.Decoder RandomQuoteAPI200Response
randomQuoteAPI200ResponseDecoder =
    Json.Decode.succeed RandomQuoteAPI200Response
        |> maybeDecodeNullable "author" Json.Decode.string Nothing
        |> maybeDecodeNullable "quote" Json.Decode.string Nothing


randomRiddleAPI200ResponseDecoder : Json.Decode.Decoder RandomRiddleAPI200Response
randomRiddleAPI200ResponseDecoder =
    Json.Decode.succeed RandomRiddleAPI200Response
        |> maybeDecodeNullable "riddle" Json.Decode.string Nothing
        |> maybeDecodeNullable "answer" Json.Decode.string Nothing
        |> maybeDecodeNullable "difficulty" Json.Decode.string Nothing


randomTriviaAPI200ResponseDecoder : Json.Decode.Decoder RandomTriviaAPI200Response
randomTriviaAPI200ResponseDecoder =
    Json.Decode.succeed RandomTriviaAPI200Response
        |> maybeDecodeNullable "trivia" Json.Decode.string Nothing


readKeyValueFromStoreAPI200ResponseDecoder : Json.Decode.Decoder ReadKeyValueFromStoreAPI200Response
readKeyValueFromStoreAPI200ResponseDecoder =
    Json.Decode.succeed ReadKeyValueFromStoreAPI200Response
        |> maybeDecodeNullable "value" Json.Decode.string Nothing


retrievePageRankAPI200ResponseDecoder : Json.Decode.Decoder RetrievePageRankAPI200Response
retrievePageRankAPI200ResponseDecoder =
    Json.Decode.succeed RetrievePageRankAPI200Response
        |> maybeDecode "page_rank" Json.Decode.float Nothing
        |> maybeDecode "position" Json.Decode.int Nothing
        |> maybeDecode "percentile" Json.Decode.float Nothing


retrieveRecipeInformationAPI200ResponseDecoder : Json.Decode.Decoder RetrieveRecipeInformationAPI200Response
retrieveRecipeInformationAPI200ResponseDecoder =
    Json.Decode.succeed RetrieveRecipeInformationAPI200Response
        |> maybeDecode "id" Json.Decode.int Nothing
        |> maybeDecodeNullable "title" Json.Decode.string Nothing
        |> maybeDecode "servings" Json.Decode.int Nothing
        |> maybeDecode "images" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecode "dietary_properties" retrieveRecipeInformationAPI200ResponseDietaryPropertiesDecoder Nothing
        |> maybeDecode "price_per_serving" Json.Decode.float Nothing
        |> maybeDecode "times" retrieveRecipeInformationAPI200ResponseTimesDecoder Nothing
        |> maybeDecode "nutrition" retrieveRecipeInformationAPI200ResponseNutritionDecoder Nothing
        |> maybeDecode "taste" retrieveRecipeInformationAPI200ResponseTasteDecoder Nothing
        |> maybeDecode "cuisines" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecode "meal_types" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecode "occasions" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecode "ingredients" (Json.Decode.list retrieveRecipeInformationAPI200ResponseIngredientsInnerDecoder) Nothing
        |> maybeDecode "instructions" (Json.Decode.list retrieveRecipeInformationAPI200ResponseInstructionsInnerDecoder) Nothing
        |> maybeDecode "credits" retrieveRecipeInformationAPI200ResponseCreditsDecoder Nothing
        |> maybeDecode "scores" retrieveRecipeInformationAPI200ResponseScoresDecoder Nothing


retrieveRecipeInformationAPI200ResponseCreditsDecoder : Json.Decode.Decoder RetrieveRecipeInformationAPI200ResponseCredits
retrieveRecipeInformationAPI200ResponseCreditsDecoder =
    Json.Decode.succeed RetrieveRecipeInformationAPI200ResponseCredits
        |> maybeDecodeNullable "license" Json.Decode.string Nothing
        |> maybeDecodeNullable "text" Json.Decode.string Nothing
        |> maybeDecodeNullable "source_name" Json.Decode.string Nothing
        |> maybeDecodeNullable "source_url" Json.Decode.string Nothing


retrieveRecipeInformationAPI200ResponseDietaryPropertiesDecoder : Json.Decode.Decoder RetrieveRecipeInformationAPI200ResponseDietaryProperties
retrieveRecipeInformationAPI200ResponseDietaryPropertiesDecoder =
    Json.Decode.succeed RetrieveRecipeInformationAPI200ResponseDietaryProperties
        |> maybeDecode "low_fodmap" Json.Decode.bool Nothing
        |> maybeDecode "vegetarian" Json.Decode.bool Nothing
        |> maybeDecode "vegan" Json.Decode.bool Nothing
        |> maybeDecode "gluten_free" Json.Decode.bool Nothing
        |> maybeDecode "dairy_free" Json.Decode.bool Nothing
        |> maybeDecodeNullable "gaps" Json.Decode.string Nothing
        |> maybeDecode "diets" (Json.Decode.list Json.Decode.string) Nothing


retrieveRecipeInformationAPI200ResponseIngredientsInnerDecoder : Json.Decode.Decoder RetrieveRecipeInformationAPI200ResponseIngredientsInner
retrieveRecipeInformationAPI200ResponseIngredientsInnerDecoder =
    Json.Decode.succeed RetrieveRecipeInformationAPI200ResponseIngredientsInner
        |> maybeDecodeNullable "image" Json.Decode.string Nothing
        |> maybeDecodeNullable "name_clean" Json.Decode.string Nothing
        |> maybeDecode "amount" Json.Decode.float Nothing
        |> maybeDecodeNullable "unit" Json.Decode.string Nothing
        |> maybeDecode "measures" retrieveRecipeInformationAPI200ResponseIngredientsInnerMeasuresDecoder Nothing
        |> maybeDecodeNullable "original" Json.Decode.string Nothing
        |> maybeDecode "meta" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecodeNullable "original_name" Json.Decode.string Nothing
        |> maybeDecodeNullable "name" Json.Decode.string Nothing
        |> maybeDecode "id" Json.Decode.int Nothing
        |> maybeDecodeNullable "aisle" Json.Decode.string Nothing
        |> maybeDecodeNullable "consistency" Json.Decode.string Nothing


retrieveRecipeInformationAPI200ResponseIngredientsInnerMeasuresDecoder : Json.Decode.Decoder RetrieveRecipeInformationAPI200ResponseIngredientsInnerMeasures
retrieveRecipeInformationAPI200ResponseIngredientsInnerMeasuresDecoder =
    Json.Decode.succeed RetrieveRecipeInformationAPI200ResponseIngredientsInnerMeasures
        |> maybeDecode "metric" searchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresMetricDecoder Nothing
        |> maybeDecode "us" searchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresMetricDecoder Nothing


retrieveRecipeInformationAPI200ResponseInstructionsInnerDecoder : Json.Decode.Decoder RetrieveRecipeInformationAPI200ResponseInstructionsInner
retrieveRecipeInformationAPI200ResponseInstructionsInnerDecoder =
    Json.Decode.succeed RetrieveRecipeInformationAPI200ResponseInstructionsInner
        |> maybeDecodeNullable "name" Json.Decode.string Nothing
        |> maybeDecode "steps" (Json.Decode.list retrieveRecipeInformationAPI200ResponseInstructionsInnerStepsInnerDecoder) Nothing


retrieveRecipeInformationAPI200ResponseInstructionsInnerStepsInnerDecoder : Json.Decode.Decoder RetrieveRecipeInformationAPI200ResponseInstructionsInnerStepsInner
retrieveRecipeInformationAPI200ResponseInstructionsInnerStepsInnerDecoder =
    Json.Decode.succeed RetrieveRecipeInformationAPI200ResponseInstructionsInnerStepsInner
        |> maybeDecode "number" Json.Decode.int Nothing
        |> maybeDecode "ingredients" (Json.Decode.list searchDrinksAPI200ResponseDrinksInnerInstructionsInnerStepsInnerIngredientsInnerDecoder) Nothing
        |> maybeDecode "equipment" (Json.Decode.list searchDrinksAPI200ResponseDrinksInnerInstructionsInnerStepsInnerIngredientsInnerDecoder) Nothing
        |> maybeDecodeNullable "step" Json.Decode.string Nothing


retrieveRecipeInformationAPI200ResponseNutritionDecoder : Json.Decode.Decoder RetrieveRecipeInformationAPI200ResponseNutrition
retrieveRecipeInformationAPI200ResponseNutritionDecoder =
    Json.Decode.succeed RetrieveRecipeInformationAPI200ResponseNutrition
        |> maybeDecode "weight_per_serving" searchDrinksAPI200ResponseDrinksInnerNutritionWeightPerServingDecoder Nothing
        |> maybeDecode "caloric_breakdown" searchDrinksAPI200ResponseDrinksInnerNutritionCaloricBreakdownDecoder Nothing
        |> maybeDecode "flavonoids" (Json.Decode.list searchDrinksAPI200ResponseDrinksInnerNutritionFlavonoidsInnerDecoder) Nothing
        |> maybeDecode "ingredient_breakdown" (Json.Decode.list retrieveRecipeInformationAPI200ResponseNutritionIngredientBreakdownInnerDecoder) Nothing
        |> maybeDecode "properties" (Json.Decode.list searchRecipesAPI200ResponseRecipesInnerNutritionNutrientsInnerDecoder) Nothing
        |> maybeDecode "nutrients" (Json.Decode.list searchDrinksAPI200ResponseDrinksInnerNutritionNutrientsInnerDecoder) Nothing


retrieveRecipeInformationAPI200ResponseNutritionIngredientBreakdownInnerDecoder : Json.Decode.Decoder RetrieveRecipeInformationAPI200ResponseNutritionIngredientBreakdownInner
retrieveRecipeInformationAPI200ResponseNutritionIngredientBreakdownInnerDecoder =
    Json.Decode.succeed RetrieveRecipeInformationAPI200ResponseNutritionIngredientBreakdownInner
        |> maybeDecodeNullable "name" Json.Decode.string Nothing
        |> maybeDecode "amount" Json.Decode.float Nothing
        |> maybeDecodeNullable "unit" Json.Decode.string Nothing
        |> maybeDecode "id" Json.Decode.int Nothing
        |> maybeDecode "nutrients" (Json.Decode.list searchDrinksAPI200ResponseDrinksInnerNutritionNutrientsInnerDecoder) Nothing


retrieveRecipeInformationAPI200ResponseScoresDecoder : Json.Decode.Decoder RetrieveRecipeInformationAPI200ResponseScores
retrieveRecipeInformationAPI200ResponseScoresDecoder =
    Json.Decode.succeed RetrieveRecipeInformationAPI200ResponseScores
        |> maybeDecode "meta_score" Json.Decode.float Nothing
        |> maybeDecode "weight_watcher_smart_points" Json.Decode.int Nothing
        |> maybeDecode "health_score" Json.Decode.int Nothing


retrieveRecipeInformationAPI200ResponseTasteDecoder : Json.Decode.Decoder RetrieveRecipeInformationAPI200ResponseTaste
retrieveRecipeInformationAPI200ResponseTasteDecoder =
    Json.Decode.succeed RetrieveRecipeInformationAPI200ResponseTaste
        |> maybeDecode "fattiness" Json.Decode.float Nothing
        |> maybeDecode "spiciness" Json.Decode.int Nothing
        |> maybeDecode "saltiness" Json.Decode.int Nothing
        |> maybeDecode "bitterness" Json.Decode.float Nothing
        |> maybeDecode "savoriness" Json.Decode.float Nothing
        |> maybeDecode "sweetness" Json.Decode.float Nothing
        |> maybeDecode "sourness" Json.Decode.float Nothing


retrieveRecipeInformationAPI200ResponseTimesDecoder : Json.Decode.Decoder RetrieveRecipeInformationAPI200ResponseTimes
retrieveRecipeInformationAPI200ResponseTimesDecoder =
    Json.Decode.succeed RetrieveRecipeInformationAPI200ResponseTimes
        |> maybeDecode "total_minutes" Json.Decode.int Nothing


scoreReadabilityAPI200ResponseDecoder : Json.Decode.Decoder ScoreReadabilityAPI200Response
scoreReadabilityAPI200ResponseDecoder =
    Json.Decode.succeed ScoreReadabilityAPI200Response
        |> maybeDecode "readability" scoreTextAPI200ResponseReadabilityDecoder Nothing


scoreTextAPI200ResponseDecoder : Json.Decode.Decoder ScoreTextAPI200Response
scoreTextAPI200ResponseDecoder =
    Json.Decode.succeed ScoreTextAPI200Response
        |> maybeDecode "number_of_words" Json.Decode.int Nothing
        |> maybeDecode "number_of_sentences" Json.Decode.int Nothing
        |> maybeDecode "readability" scoreTextAPI200ResponseReadabilityDecoder Nothing
        |> maybeDecode "skimmability" scoreTextAPI200ResponseSkimmabilityDecoder Nothing
        |> maybeDecode "interestingness" scoreTextAPI200ResponseInterestingnessDecoder Nothing
        |> maybeDecode "style" scoreTextAPI200ResponseStyleDecoder Nothing
        |> maybeDecode "total_score" Json.Decode.float Nothing


scoreTextAPI200ResponseInterestingnessDecoder : Json.Decode.Decoder ScoreTextAPI200ResponseInterestingness
scoreTextAPI200ResponseInterestingnessDecoder =
    Json.Decode.succeed ScoreTextAPI200ResponseInterestingness
        |> maybeDecode "mainscores" scoreTextAPI200ResponseSkimmabilityMainscoresDecoder Nothing
        |> maybeDecode "subscores" scoreTextAPI200ResponseInterestingnessSubscoresDecoder Nothing


scoreTextAPI200ResponseInterestingnessSubscoresDecoder : Json.Decode.Decoder ScoreTextAPI200ResponseInterestingnessSubscores
scoreTextAPI200ResponseInterestingnessSubscoresDecoder =
    Json.Decode.succeed ScoreTextAPI200ResponseInterestingnessSubscores
        |> maybeDecode "title_rating_score" (Json.Decode.list Json.Decode.int) Nothing
        |> maybeDecode "quote_score" (Json.Decode.list Json.Decode.int) Nothing
        |> maybeDecode "length_score" (Json.Decode.list Json.Decode.int) Nothing
        |> maybeDecode "link_score" (Json.Decode.list Json.Decode.int) Nothing
        |> maybeDecode "google_hits_score" (Json.Decode.list Json.Decode.int) Nothing


scoreTextAPI200ResponseReadabilityDecoder : Json.Decode.Decoder ScoreTextAPI200ResponseReadability
scoreTextAPI200ResponseReadabilityDecoder =
    Json.Decode.succeed ScoreTextAPI200ResponseReadability
        |> maybeDecode "mainscores" scoreTextAPI200ResponseReadabilityMainscoresDecoder Nothing
        |> maybeDecode "subscores" scoreTextAPI200ResponseReadabilitySubscoresDecoder Nothing


scoreTextAPI200ResponseReadabilityMainscoresDecoder : Json.Decode.Decoder ScoreTextAPI200ResponseReadabilityMainscores
scoreTextAPI200ResponseReadabilityMainscoresDecoder =
    Json.Decode.succeed ScoreTextAPI200ResponseReadabilityMainscores
        |> maybeDecode "total_possible" Json.Decode.int Nothing
        |> maybeDecode "total" Json.Decode.int Nothing


scoreTextAPI200ResponseReadabilitySubscoresDecoder : Json.Decode.Decoder ScoreTextAPI200ResponseReadabilitySubscores
scoreTextAPI200ResponseReadabilitySubscoresDecoder =
    Json.Decode.succeed ScoreTextAPI200ResponseReadabilitySubscores
        |> maybeDecode "reading_time_seconds" Json.Decode.int Nothing
        |> maybeDecode "forcast" Json.Decode.float Nothing
        |> maybeDecode "flesch" Json.Decode.float Nothing
        |> maybeDecode "smog" Json.Decode.float Nothing
        |> maybeDecode "ari" Json.Decode.float Nothing
        |> maybeDecode "lix" Json.Decode.float Nothing
        |> maybeDecode "coleman_liau" Json.Decode.float Nothing
        |> maybeDecode "kincaid" Json.Decode.float Nothing
        |> maybeDecode "fog" Json.Decode.float Nothing


scoreTextAPI200ResponseSkimmabilityDecoder : Json.Decode.Decoder ScoreTextAPI200ResponseSkimmability
scoreTextAPI200ResponseSkimmabilityDecoder =
    Json.Decode.succeed ScoreTextAPI200ResponseSkimmability
        |> maybeDecode "mainscores" scoreTextAPI200ResponseSkimmabilityMainscoresDecoder Nothing
        |> maybeDecode "subscores" scoreTextAPI200ResponseSkimmabilitySubscoresDecoder Nothing


scoreTextAPI200ResponseSkimmabilityMainscoresDecoder : Json.Decode.Decoder ScoreTextAPI200ResponseSkimmabilityMainscores
scoreTextAPI200ResponseSkimmabilityMainscoresDecoder =
    Json.Decode.succeed ScoreTextAPI200ResponseSkimmabilityMainscores
        |> maybeDecode "total_possible" Json.Decode.int Nothing
        |> maybeDecode "total" Json.Decode.float Nothing


scoreTextAPI200ResponseSkimmabilitySubscoresDecoder : Json.Decode.Decoder ScoreTextAPI200ResponseSkimmabilitySubscores
scoreTextAPI200ResponseSkimmabilitySubscoresDecoder =
    Json.Decode.succeed ScoreTextAPI200ResponseSkimmabilitySubscores
        |> maybeDecode "bullet_point_ratio_score" (Json.Decode.list Json.Decode.int) Nothing
        |> maybeDecode "image_score" (Json.Decode.list Json.Decode.int) Nothing
        |> maybeDecode "highlighted_word_ratio_score" (Json.Decode.list Json.Decode.int) Nothing
        |> maybeDecode "video_score" (Json.Decode.list Json.Decode.int) Nothing
        |> maybeDecode "paragraph_score" (Json.Decode.list Json.Decode.int) Nothing
        |> maybeDecode "paragraph_headline_ratio_score" (Json.Decode.list Json.Decode.int) Nothing


scoreTextAPI200ResponseStyleDecoder : Json.Decode.Decoder ScoreTextAPI200ResponseStyle
scoreTextAPI200ResponseStyleDecoder =
    Json.Decode.succeed ScoreTextAPI200ResponseStyle
        |> maybeDecode "mainscores" scoreTextAPI200ResponseReadabilityMainscoresDecoder Nothing
        |> maybeDecode "subscores" scoreTextAPI200ResponseStyleSubscoresDecoder Nothing


scoreTextAPI200ResponseStyleSubscoresDecoder : Json.Decode.Decoder ScoreTextAPI200ResponseStyleSubscores
scoreTextAPI200ResponseStyleSubscoresDecoder =
    Json.Decode.succeed ScoreTextAPI200ResponseStyleSubscores
        |> maybeDecode "abbreviation_score" (Json.Decode.list Json.Decode.int) Nothing
        |> maybeDecode "style_score" (Json.Decode.list Json.Decode.int) Nothing
        |> maybeDecode "spelling_score" (Json.Decode.list Json.Decode.int) Nothing


searchBooksAPI200ResponseDecoder : Json.Decode.Decoder SearchBooksAPI200Response
searchBooksAPI200ResponseDecoder =
    Json.Decode.succeed SearchBooksAPI200Response
        |> maybeDecode "total_results" Json.Decode.int Nothing
        |> maybeDecode "number" Json.Decode.int Nothing
        |> maybeDecode "offset" Json.Decode.int Nothing
        |> maybeDecode "books" (Json.Decode.list (Json.Decode.list searchBooksAPI200ResponseBooksInnerInnerDecoder)) Nothing


searchBooksAPI200ResponseBooksInnerInnerDecoder : Json.Decode.Decoder SearchBooksAPI200ResponseBooksInnerInner
searchBooksAPI200ResponseBooksInnerInnerDecoder =
    Json.Decode.succeed SearchBooksAPI200ResponseBooksInnerInner
        |> maybeDecodeNullable "title" Json.Decode.string Nothing
        |> maybeDecodeNullable "image" Json.Decode.string Nothing
        |> maybeDecode "id" Json.Decode.int Nothing


searchDrinksAPI200ResponseDecoder : Json.Decode.Decoder SearchDrinksAPI200Response
searchDrinksAPI200ResponseDecoder =
    Json.Decode.succeed SearchDrinksAPI200Response
        |> maybeDecode "offset" Json.Decode.int Nothing
        |> maybeDecode "number" Json.Decode.int Nothing
        |> maybeDecode "drinks" (Json.Decode.list searchDrinksAPI200ResponseDrinksInnerDecoder) Nothing
        |> maybeDecode "total_results" Json.Decode.int Nothing


searchDrinksAPI200ResponseDrinksInnerDecoder : Json.Decode.Decoder SearchDrinksAPI200ResponseDrinksInner
searchDrinksAPI200ResponseDrinksInnerDecoder =
    Json.Decode.succeed SearchDrinksAPI200ResponseDrinksInner
        |> maybeDecode "flavors" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecode "instructions" (Json.Decode.list searchDrinksAPI200ResponseDrinksInnerInstructionsInnerDecoder) Nothing
        |> maybeDecode "images" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecode "nutrition" searchDrinksAPI200ResponseDrinksInnerNutritionDecoder Nothing
        |> maybeDecodeNullable "glass_type" Json.Decode.string Nothing
        |> maybeDecode "credits" searchDrinksAPI200ResponseDrinksInnerCreditsDecoder Nothing
        |> maybeDecode "price_per_serving" Json.Decode.float Nothing
        |> maybeDecodeNullable "description" Json.Decode.string Nothing
        |> maybeDecode "ingredients" (Json.Decode.list searchDrinksAPI200ResponseDrinksInnerIngredientsInnerDecoder) Nothing
        |> maybeDecode "id" Json.Decode.int Nothing
        |> maybeDecodeNullable "title" Json.Decode.string Nothing
        |> maybeDecode "cuisines" (Json.Decode.list Json.Decode.string) Nothing


searchDrinksAPI200ResponseDrinksInnerCreditsDecoder : Json.Decode.Decoder SearchDrinksAPI200ResponseDrinksInnerCredits
searchDrinksAPI200ResponseDrinksInnerCreditsDecoder =
    Json.Decode.succeed SearchDrinksAPI200ResponseDrinksInnerCredits
        |> maybeDecodeNullable "text" Json.Decode.string Nothing
        |> maybeDecodeNullable "source_name" Json.Decode.string Nothing
        |> maybeDecodeNullable "source_url" Json.Decode.string Nothing


searchDrinksAPI200ResponseDrinksInnerIngredientsInnerDecoder : Json.Decode.Decoder SearchDrinksAPI200ResponseDrinksInnerIngredientsInner
searchDrinksAPI200ResponseDrinksInnerIngredientsInnerDecoder =
    Json.Decode.succeed SearchDrinksAPI200ResponseDrinksInnerIngredientsInner
        |> maybeDecodeNullable "image" Json.Decode.string Nothing
        |> maybeDecodeNullable "name_clean" Json.Decode.string Nothing
        |> maybeDecode "amount" Json.Decode.int Nothing
        |> maybeDecodeNullable "unit" Json.Decode.string Nothing
        |> maybeDecode "measures" searchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresDecoder Nothing
        |> maybeDecodeNullable "original" Json.Decode.string Nothing
        |> maybeDecode "meta" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecodeNullable "original_name" Json.Decode.string Nothing
        |> maybeDecodeNullable "name" Json.Decode.string Nothing
        |> maybeDecode "id" Json.Decode.int Nothing
        |> maybeDecodeNullable "aisle" Json.Decode.string Nothing
        |> maybeDecodeNullable "consistency" Json.Decode.string Nothing


searchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresDecoder : Json.Decode.Decoder SearchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasures
searchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresDecoder =
    Json.Decode.succeed SearchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasures
        |> maybeDecode "metric" searchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresMetricDecoder Nothing
        |> maybeDecode "us" searchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresUsDecoder Nothing


searchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresMetricDecoder : Json.Decode.Decoder SearchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresMetric
searchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresMetricDecoder =
    Json.Decode.succeed SearchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresMetric
        |> maybeDecodeNullable "unit_short" Json.Decode.string Nothing
        |> maybeDecode "amount" Json.Decode.float Nothing
        |> maybeDecodeNullable "unit_long" Json.Decode.string Nothing


searchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresUsDecoder : Json.Decode.Decoder SearchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresUs
searchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresUsDecoder =
    Json.Decode.succeed SearchDrinksAPI200ResponseDrinksInnerIngredientsInnerMeasuresUs
        |> maybeDecodeNullable "unit_short" Json.Decode.string Nothing
        |> maybeDecode "amount" Json.Decode.int Nothing
        |> maybeDecodeNullable "unit_long" Json.Decode.string Nothing


searchDrinksAPI200ResponseDrinksInnerInstructionsInnerDecoder : Json.Decode.Decoder SearchDrinksAPI200ResponseDrinksInnerInstructionsInner
searchDrinksAPI200ResponseDrinksInnerInstructionsInnerDecoder =
    Json.Decode.succeed SearchDrinksAPI200ResponseDrinksInnerInstructionsInner
        |> maybeDecodeNullable "name" Json.Decode.string Nothing
        |> maybeDecode "steps" (Json.Decode.list searchDrinksAPI200ResponseDrinksInnerInstructionsInnerStepsInnerDecoder) Nothing


searchDrinksAPI200ResponseDrinksInnerInstructionsInnerStepsInnerDecoder : Json.Decode.Decoder SearchDrinksAPI200ResponseDrinksInnerInstructionsInnerStepsInner
searchDrinksAPI200ResponseDrinksInnerInstructionsInnerStepsInnerDecoder =
    Json.Decode.succeed SearchDrinksAPI200ResponseDrinksInnerInstructionsInnerStepsInner
        |> maybeDecode "number" Json.Decode.int Nothing
        |> maybeDecode "ingredients" (Json.Decode.list searchDrinksAPI200ResponseDrinksInnerInstructionsInnerStepsInnerIngredientsInnerDecoder) Nothing
        |> maybeDecode "equipment" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecodeNullable "step" Json.Decode.string Nothing


searchDrinksAPI200ResponseDrinksInnerInstructionsInnerStepsInnerIngredientsInnerDecoder : Json.Decode.Decoder SearchDrinksAPI200ResponseDrinksInnerInstructionsInnerStepsInnerIngredientsInner
searchDrinksAPI200ResponseDrinksInnerInstructionsInnerStepsInnerIngredientsInnerDecoder =
    Json.Decode.succeed SearchDrinksAPI200ResponseDrinksInnerInstructionsInnerStepsInnerIngredientsInner
        |> maybeDecodeNullable "name" Json.Decode.string Nothing
        |> maybeDecodeNullable "image" Json.Decode.string Nothing
        |> maybeDecode "id" Json.Decode.int Nothing


searchDrinksAPI200ResponseDrinksInnerNutritionDecoder : Json.Decode.Decoder SearchDrinksAPI200ResponseDrinksInnerNutrition
searchDrinksAPI200ResponseDrinksInnerNutritionDecoder =
    Json.Decode.succeed SearchDrinksAPI200ResponseDrinksInnerNutrition
        |> maybeDecode "weight_per_serving" searchDrinksAPI200ResponseDrinksInnerNutritionWeightPerServingDecoder Nothing
        |> maybeDecode "caloric_breakdown" searchDrinksAPI200ResponseDrinksInnerNutritionCaloricBreakdownDecoder Nothing
        |> maybeDecode "flavonoids" (Json.Decode.list searchDrinksAPI200ResponseDrinksInnerNutritionFlavonoidsInnerDecoder) Nothing
        |> maybeDecode "ingredient_breakdown" (Json.Decode.list searchDrinksAPI200ResponseDrinksInnerNutritionIngredientBreakdownInnerDecoder) Nothing
        |> maybeDecode "properties" (Json.Decode.list searchDrinksAPI200ResponseDrinksInnerNutritionFlavonoidsInnerDecoder) Nothing
        |> maybeDecode "nutrients" (Json.Decode.list searchDrinksAPI200ResponseDrinksInnerNutritionNutrientsInnerDecoder) Nothing


searchDrinksAPI200ResponseDrinksInnerNutritionCaloricBreakdownDecoder : Json.Decode.Decoder SearchDrinksAPI200ResponseDrinksInnerNutritionCaloricBreakdown
searchDrinksAPI200ResponseDrinksInnerNutritionCaloricBreakdownDecoder =
    Json.Decode.succeed SearchDrinksAPI200ResponseDrinksInnerNutritionCaloricBreakdown
        |> maybeDecode "percent_fat" Json.Decode.float Nothing
        |> maybeDecode "percent_carbs" Json.Decode.float Nothing
        |> maybeDecode "percent_protein" Json.Decode.float Nothing


searchDrinksAPI200ResponseDrinksInnerNutritionFlavonoidsInnerDecoder : Json.Decode.Decoder SearchDrinksAPI200ResponseDrinksInnerNutritionFlavonoidsInner
searchDrinksAPI200ResponseDrinksInnerNutritionFlavonoidsInnerDecoder =
    Json.Decode.succeed SearchDrinksAPI200ResponseDrinksInnerNutritionFlavonoidsInner
        |> maybeDecodeNullable "name" Json.Decode.string Nothing
        |> maybeDecode "amount" Json.Decode.int Nothing
        |> maybeDecodeNullable "unit" Json.Decode.string Nothing


searchDrinksAPI200ResponseDrinksInnerNutritionIngredientBreakdownInnerDecoder : Json.Decode.Decoder SearchDrinksAPI200ResponseDrinksInnerNutritionIngredientBreakdownInner
searchDrinksAPI200ResponseDrinksInnerNutritionIngredientBreakdownInnerDecoder =
    Json.Decode.succeed SearchDrinksAPI200ResponseDrinksInnerNutritionIngredientBreakdownInner
        |> maybeDecodeNullable "name" Json.Decode.string Nothing
        |> maybeDecode "amount" Json.Decode.int Nothing
        |> maybeDecodeNullable "unit" Json.Decode.string Nothing
        |> maybeDecode "id" Json.Decode.int Nothing
        |> maybeDecode "nutrients" (Json.Decode.list searchDrinksAPI200ResponseDrinksInnerNutritionIngredientBreakdownInnerNutrientsInnerDecoder) Nothing


searchDrinksAPI200ResponseDrinksInnerNutritionIngredientBreakdownInnerNutrientsInnerDecoder : Json.Decode.Decoder SearchDrinksAPI200ResponseDrinksInnerNutritionIngredientBreakdownInnerNutrientsInner
searchDrinksAPI200ResponseDrinksInnerNutritionIngredientBreakdownInnerNutrientsInnerDecoder =
    Json.Decode.succeed SearchDrinksAPI200ResponseDrinksInnerNutritionIngredientBreakdownInnerNutrientsInner
        |> maybeDecodeNullable "name" Json.Decode.string Nothing
        |> maybeDecode "percent_of_daily_needs" Json.Decode.float Nothing
        |> maybeDecode "amount" Json.Decode.int Nothing
        |> maybeDecodeNullable "unit" Json.Decode.string Nothing


searchDrinksAPI200ResponseDrinksInnerNutritionNutrientsInnerDecoder : Json.Decode.Decoder SearchDrinksAPI200ResponseDrinksInnerNutritionNutrientsInner
searchDrinksAPI200ResponseDrinksInnerNutritionNutrientsInnerDecoder =
    Json.Decode.succeed SearchDrinksAPI200ResponseDrinksInnerNutritionNutrientsInner
        |> maybeDecodeNullable "name" Json.Decode.string Nothing
        |> maybeDecode "percent_of_daily_needs" Json.Decode.float Nothing
        |> maybeDecode "amount" Json.Decode.float Nothing
        |> maybeDecodeNullable "unit" Json.Decode.string Nothing


searchDrinksAPI200ResponseDrinksInnerNutritionWeightPerServingDecoder : Json.Decode.Decoder SearchDrinksAPI200ResponseDrinksInnerNutritionWeightPerServing
searchDrinksAPI200ResponseDrinksInnerNutritionWeightPerServingDecoder =
    Json.Decode.succeed SearchDrinksAPI200ResponseDrinksInnerNutritionWeightPerServing
        |> maybeDecode "amount" Json.Decode.int Nothing
        |> maybeDecodeNullable "unit" Json.Decode.string Nothing


searchGifsAPI200ResponseDecoder : Json.Decode.Decoder SearchGifsAPI200Response
searchGifsAPI200ResponseDecoder =
    Json.Decode.succeed SearchGifsAPI200Response
        |> maybeDecode "images" (Json.Decode.list searchGifsAPI200ResponseImagesInnerDecoder) Nothing


searchGifsAPI200ResponseImagesInnerDecoder : Json.Decode.Decoder SearchGifsAPI200ResponseImagesInner
searchGifsAPI200ResponseImagesInnerDecoder =
    Json.Decode.succeed SearchGifsAPI200ResponseImagesInner
        |> maybeDecode "width" Json.Decode.int Nothing
        |> maybeDecodeNullable "url" Json.Decode.string Nothing
        |> maybeDecode "height" Json.Decode.int Nothing


searchIconsAPI200ResponseDecoder : Json.Decode.Decoder SearchIconsAPI200Response
searchIconsAPI200ResponseDecoder =
    Json.Decode.succeed SearchIconsAPI200Response
        |> maybeDecode "icons" (Json.Decode.list searchRoyaltyFreeImagesAPI200ResponseImagesInnerDecoder) Nothing


searchJokesAPI200ResponseDecoder : Json.Decode.Decoder SearchJokesAPI200Response
searchJokesAPI200ResponseDecoder =
    Json.Decode.succeed SearchJokesAPI200Response
        |> maybeDecode "jokes" (Json.Decode.list searchJokesAPI200ResponseJokesInnerDecoder) Nothing
        |> maybeDecode "available" Json.Decode.int Nothing


searchJokesAPI200ResponseJokesInnerDecoder : Json.Decode.Decoder SearchJokesAPI200ResponseJokesInner
searchJokesAPI200ResponseJokesInnerDecoder =
    Json.Decode.succeed SearchJokesAPI200ResponseJokesInner
        |> maybeDecodeNullable "joke" Json.Decode.string Nothing


searchMemesAPI200ResponseDecoder : Json.Decode.Decoder SearchMemesAPI200Response
searchMemesAPI200ResponseDecoder =
    Json.Decode.succeed SearchMemesAPI200Response
        |> maybeDecode "memes" (Json.Decode.list searchMemesAPI200ResponseMemesInnerDecoder) Nothing
        |> maybeDecode "available" Json.Decode.int Nothing


searchMemesAPI200ResponseMemesInnerDecoder : Json.Decode.Decoder SearchMemesAPI200ResponseMemesInner
searchMemesAPI200ResponseMemesInnerDecoder =
    Json.Decode.succeed SearchMemesAPI200ResponseMemesInner
        |> maybeDecodeNullable "type" Json.Decode.string Nothing
        |> maybeDecodeNullable "description" Json.Decode.string Nothing
        |> maybeDecodeNullable "url" Json.Decode.string Nothing


searchNewsAPI200ResponseDecoder : Json.Decode.Decoder SearchNewsAPI200Response
searchNewsAPI200ResponseDecoder =
    Json.Decode.succeed SearchNewsAPI200Response
        |> maybeDecode "offset" Json.Decode.int Nothing
        |> maybeDecode "number" Json.Decode.int Nothing
        |> maybeDecode "available" Json.Decode.int Nothing
        |> maybeDecode "news" (Json.Decode.list searchNewsAPI200ResponseNewsInnerDecoder) Nothing


searchNewsAPI200ResponseNewsInnerDecoder : Json.Decode.Decoder SearchNewsAPI200ResponseNewsInner
searchNewsAPI200ResponseNewsInnerDecoder =
    Json.Decode.succeed SearchNewsAPI200ResponseNewsInner
        |> maybeDecodeNullable "summary" Json.Decode.string Nothing
        |> maybeDecodeNullable "image" Json.Decode.string Nothing
        |> maybeDecode "sentiment" Json.Decode.float Nothing
        |> maybeDecodeNullable "language" Json.Decode.string Nothing
        |> maybeDecodeNullable "video" Json.Decode.string Nothing
        |> maybeDecodeNullable "title" Json.Decode.string Nothing
        |> maybeDecodeNullable "url" Json.Decode.string Nothing
        |> maybeDecodeNullable "source_country" Json.Decode.string Nothing
        |> maybeDecode "id" Json.Decode.int Nothing
        |> maybeDecodeNullable "text" Json.Decode.string Nothing
        |> maybeDecodeNullable "category" Json.Decode.string Nothing
        |> maybeDecodeNullable "publish_date" Json.Decode.string Nothing
        |> maybeDecode "authors" (Json.Decode.list Json.Decode.string) Nothing


searchRecipesAPI200ResponseDecoder : Json.Decode.Decoder SearchRecipesAPI200Response
searchRecipesAPI200ResponseDecoder =
    Json.Decode.succeed SearchRecipesAPI200Response
        |> maybeDecode "offset" Json.Decode.int Nothing
        |> maybeDecode "number" Json.Decode.int Nothing
        |> maybeDecode "recipes" (Json.Decode.list searchRecipesAPI200ResponseRecipesInnerDecoder) Nothing
        |> maybeDecode "total_results" Json.Decode.int Nothing


searchRecipesAPI200ResponseRecipesInnerDecoder : Json.Decode.Decoder SearchRecipesAPI200ResponseRecipesInner
searchRecipesAPI200ResponseRecipesInnerDecoder =
    Json.Decode.succeed SearchRecipesAPI200ResponseRecipesInner
        |> maybeDecode "images" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecode "nutrition" searchRecipesAPI200ResponseRecipesInnerNutritionDecoder Nothing
        |> maybeDecode "id" Json.Decode.int Nothing
        |> maybeDecodeNullable "title" Json.Decode.string Nothing


searchRecipesAPI200ResponseRecipesInnerNutritionDecoder : Json.Decode.Decoder SearchRecipesAPI200ResponseRecipesInnerNutrition
searchRecipesAPI200ResponseRecipesInnerNutritionDecoder =
    Json.Decode.succeed SearchRecipesAPI200ResponseRecipesInnerNutrition
        |> maybeDecode "nutrients" (Json.Decode.list searchRecipesAPI200ResponseRecipesInnerNutritionNutrientsInnerDecoder) Nothing


searchRecipesAPI200ResponseRecipesInnerNutritionNutrientsInnerDecoder : Json.Decode.Decoder SearchRecipesAPI200ResponseRecipesInnerNutritionNutrientsInner
searchRecipesAPI200ResponseRecipesInnerNutritionNutrientsInnerDecoder =
    Json.Decode.succeed SearchRecipesAPI200ResponseRecipesInnerNutritionNutrientsInner
        |> maybeDecodeNullable "name" Json.Decode.string Nothing
        |> maybeDecode "amount" Json.Decode.float Nothing
        |> maybeDecodeNullable "unit" Json.Decode.string Nothing


searchRestaurantsAPI200ResponseDecoder : Json.Decode.Decoder SearchRestaurantsAPI200Response
searchRestaurantsAPI200ResponseDecoder =
    Json.Decode.succeed SearchRestaurantsAPI200Response
        |> maybeDecode "restaurants" (Json.Decode.list searchRestaurantsAPI200ResponseRestaurantsInnerDecoder) Nothing


searchRestaurantsAPI200ResponseRestaurantsInnerDecoder : Json.Decode.Decoder SearchRestaurantsAPI200ResponseRestaurantsInner
searchRestaurantsAPI200ResponseRestaurantsInnerDecoder =
    Json.Decode.succeed SearchRestaurantsAPI200ResponseRestaurantsInner
        |> maybeDecode "offers_third_party_delivery" Json.Decode.bool Nothing
        |> maybeDecode "address" searchRestaurantsAPI200ResponseRestaurantsInnerAddressDecoder Nothing
        |> maybeDecode "supports_upc_codes" Json.Decode.bool Nothing
        |> maybeDecode "is_open" Json.Decode.bool Nothing
        |> maybeDecodeNullable "description" Json.Decode.string Nothing
        |> maybeDecode "weighted_rating_value" Json.Decode.int Nothing
        |> maybeDecodeNullable "type" Json.Decode.string Nothing
        |> maybeDecode "offers_first_party_delivery" Json.Decode.bool Nothing
        |> maybeDecode "aggregated_rating_count" Json.Decode.int Nothing
        |> maybeDecode "pickup_enabled" Json.Decode.bool Nothing
        |> maybeDecode "cuisines" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecode "miles" Json.Decode.float Nothing
        |> maybeDecode "dollar_signs" Json.Decode.int Nothing
        |> maybeDecode "delivery_enabled" Json.Decode.bool Nothing
        |> maybeDecodeNullable "name" Json.Decode.string Nothing
        |> maybeDecode "phone_number" Json.Decode.float Nothing
        |> maybeDecodeNullable "_id" Json.Decode.string Nothing
        |> maybeDecode "local_hours" searchRestaurantsAPI200ResponseRestaurantsInnerLocalHoursDecoder Nothing


searchRestaurantsAPI200ResponseRestaurantsInnerAddressDecoder : Json.Decode.Decoder SearchRestaurantsAPI200ResponseRestaurantsInnerAddress
searchRestaurantsAPI200ResponseRestaurantsInnerAddressDecoder =
    Json.Decode.succeed SearchRestaurantsAPI200ResponseRestaurantsInnerAddress
        |> maybeDecodeNullable "zipcode" Json.Decode.string Nothing
        |> maybeDecodeNullable "country" Json.Decode.string Nothing
        |> maybeDecodeNullable "city" Json.Decode.string Nothing
        |> maybeDecode "latitude" Json.Decode.float Nothing
        |> maybeDecode "lon" Json.Decode.float Nothing
        |> maybeDecodeNullable "street_addr_2" Json.Decode.string Nothing
        |> maybeDecodeNullable "state" Json.Decode.string Nothing
        |> maybeDecodeNullable "street_addr" Json.Decode.string Nothing
        |> maybeDecode "lat" Json.Decode.float Nothing
        |> maybeDecode "longitude" Json.Decode.float Nothing


searchRestaurantsAPI200ResponseRestaurantsInnerLocalHoursDecoder : Json.Decode.Decoder SearchRestaurantsAPI200ResponseRestaurantsInnerLocalHours
searchRestaurantsAPI200ResponseRestaurantsInnerLocalHoursDecoder =
    Json.Decode.succeed SearchRestaurantsAPI200ResponseRestaurantsInnerLocalHours
        |> maybeDecode "operational" searchRestaurantsAPI200ResponseRestaurantsInnerLocalHoursOperationalDecoder Nothing
        |> maybeDecode "delivery" searchRestaurantsAPI200ResponseRestaurantsInnerLocalHoursOperationalDecoder Nothing
        |> maybeDecode "pickup" searchRestaurantsAPI200ResponseRestaurantsInnerLocalHoursOperationalDecoder Nothing
        |> maybeDecode "dine_in" searchRestaurantsAPI200ResponseRestaurantsInnerLocalHoursOperationalDecoder Nothing


searchRestaurantsAPI200ResponseRestaurantsInnerLocalHoursOperationalDecoder : Json.Decode.Decoder SearchRestaurantsAPI200ResponseRestaurantsInnerLocalHoursOperational
searchRestaurantsAPI200ResponseRestaurantsInnerLocalHoursOperationalDecoder =
    Json.Decode.succeed SearchRestaurantsAPI200ResponseRestaurantsInnerLocalHoursOperational
        |> maybeDecodeNullable "sunday" Json.Decode.string Nothing
        |> maybeDecodeNullable "saturday" Json.Decode.string Nothing
        |> maybeDecodeNullable "tuesday" Json.Decode.string Nothing
        |> maybeDecodeNullable "thursday" Json.Decode.string Nothing
        |> maybeDecodeNullable "friday" Json.Decode.string Nothing
        |> maybeDecodeNullable "wednesday" Json.Decode.string Nothing
        |> maybeDecodeNullable "monday" Json.Decode.string Nothing


searchRoyaltyFreeImagesAPI200ResponseDecoder : Json.Decode.Decoder SearchRoyaltyFreeImagesAPI200Response
searchRoyaltyFreeImagesAPI200ResponseDecoder =
    Json.Decode.succeed SearchRoyaltyFreeImagesAPI200Response
        |> maybeDecode "images" (Json.Decode.list searchRoyaltyFreeImagesAPI200ResponseImagesInnerDecoder) Nothing


searchRoyaltyFreeImagesAPI200ResponseImagesInnerDecoder : Json.Decode.Decoder SearchRoyaltyFreeImagesAPI200ResponseImagesInner
searchRoyaltyFreeImagesAPI200ResponseImagesInnerDecoder =
    Json.Decode.succeed SearchRoyaltyFreeImagesAPI200ResponseImagesInner
        |> maybeDecode "width" Json.Decode.int Nothing
        |> maybeDecode "license" searchRoyaltyFreeImagesAPI200ResponseImagesInnerLicenseDecoder Nothing
        |> maybeDecodeNullable "thumbnail" Json.Decode.string Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "url" Json.Decode.string Nothing
        |> maybeDecode "height" Json.Decode.int Nothing


searchRoyaltyFreeImagesAPI200ResponseImagesInnerLicenseDecoder : Json.Decode.Decoder SearchRoyaltyFreeImagesAPI200ResponseImagesInnerLicense
searchRoyaltyFreeImagesAPI200ResponseImagesInnerLicenseDecoder =
    Json.Decode.succeed SearchRoyaltyFreeImagesAPI200ResponseImagesInnerLicense
        |> maybeDecodeNullable "name" Json.Decode.string Nothing
        |> maybeDecodeNullable "link" Json.Decode.string Nothing


searchWebAPI200ResponseDecoder : Json.Decode.Decoder SearchWebAPI200Response
searchWebAPI200ResponseDecoder =
    Json.Decode.succeed SearchWebAPI200Response
        |> maybeDecode "results" (Json.Decode.list searchWebAPI200ResponseResultsInnerDecoder) Nothing


searchWebAPI200ResponseResultsInnerDecoder : Json.Decode.Decoder SearchWebAPI200ResponseResultsInner
searchWebAPI200ResponseResultsInnerDecoder =
    Json.Decode.succeed SearchWebAPI200ResponseResultsInner
        |> maybeDecodeNullable "title" Json.Decode.string Nothing
        |> maybeDecodeNullable "summary" Json.Decode.string Nothing
        |> maybeDecodeNullable "url" Json.Decode.string Nothing


singularizeWordAPI200ResponseDecoder : Json.Decode.Decoder SingularizeWordAPI200Response
singularizeWordAPI200ResponseDecoder =
    Json.Decode.succeed SingularizeWordAPI200Response
        |> maybeDecodeNullable "original" Json.Decode.string Nothing
        |> maybeDecodeNullable "singular" Json.Decode.string Nothing


stemTextAPI200ResponseDecoder : Json.Decode.Decoder StemTextAPI200Response
stemTextAPI200ResponseDecoder =
    Json.Decode.succeed StemTextAPI200Response
        |> maybeDecodeNullable "original" Json.Decode.string Nothing
        |> maybeDecodeNullable "stemmed" Json.Decode.string Nothing


storeKeyValueGETAPI200ResponseDecoder : Json.Decode.Decoder StoreKeyValueGETAPI200Response
storeKeyValueGETAPI200ResponseDecoder =
    Json.Decode.succeed StoreKeyValueGETAPI200Response
        |> maybeDecodeNullable "status" Json.Decode.string Nothing


tagPartOfSpeechAPI200ResponseDecoder : Json.Decode.Decoder TagPartOfSpeechAPI200Response
tagPartOfSpeechAPI200ResponseDecoder =
    Json.Decode.succeed TagPartOfSpeechAPI200Response
        |> maybeDecodeNullable "tagged_text" Json.Decode.string Nothing


topNewsAPI200ResponseDecoder : Json.Decode.Decoder TopNewsAPI200Response
topNewsAPI200ResponseDecoder =
    Json.Decode.succeed TopNewsAPI200Response
        |> maybeDecode "top_news" (Json.Decode.list topNewsAPI200ResponseTopNewsInnerDecoder) Nothing
        |> maybeDecodeNullable "language" Json.Decode.string Nothing
        |> maybeDecodeNullable "country" Json.Decode.string Nothing


topNewsAPI200ResponseTopNewsInnerDecoder : Json.Decode.Decoder TopNewsAPI200ResponseTopNewsInner
topNewsAPI200ResponseTopNewsInnerDecoder =
    Json.Decode.succeed TopNewsAPI200ResponseTopNewsInner
        |> maybeDecode "news" (Json.Decode.list topNewsAPI200ResponseTopNewsInnerNewsInnerDecoder) Nothing


topNewsAPI200ResponseTopNewsInnerNewsInnerDecoder : Json.Decode.Decoder TopNewsAPI200ResponseTopNewsInnerNewsInner
topNewsAPI200ResponseTopNewsInnerNewsInnerDecoder =
    Json.Decode.succeed TopNewsAPI200ResponseTopNewsInnerNewsInner
        |> maybeDecodeNullable "summary" Json.Decode.string Nothing
        |> maybeDecodeNullable "image" Json.Decode.string Nothing
        |> maybeDecode "id" Json.Decode.int Nothing
        |> maybeDecodeNullable "text" Json.Decode.string Nothing
        |> maybeDecodeNullable "title" Json.Decode.string Nothing
        |> maybeDecodeNullable "publish_date" Json.Decode.string Nothing
        |> maybeDecodeNullable "url" Json.Decode.string Nothing
        |> maybeDecode "authors" (Json.Decode.list Json.Decode.string) Nothing


vectorSearchAPI200ResponseDecoder : Json.Decode.Decoder VectorSearchAPI200Response
vectorSearchAPI200ResponseDecoder =
    Json.Decode.succeed VectorSearchAPI200Response
        |> maybeDecode "vectors" (Json.Decode.list vectorSearchAPI200ResponseVectorsInnerDecoder) Nothing


vectorSearchAPI200ResponseVectorsInnerDecoder : Json.Decode.Decoder VectorSearchAPI200ResponseVectorsInner
vectorSearchAPI200ResponseVectorsInnerDecoder =
    Json.Decode.succeed VectorSearchAPI200ResponseVectorsInner
        |> maybeDecodeNullable "license" Json.Decode.string Nothing
        |> maybeDecodeNullable "title" Json.Decode.string Nothing
        |> maybeDecodeNullable "author" Json.Decode.string Nothing
        |> maybeDecodeNullable "image_url" Json.Decode.string Nothing


verifyEmailAddressAPI200ResponseDecoder : Json.Decode.Decoder VerifyEmailAddressAPI200Response
verifyEmailAddressAPI200ResponseDecoder =
    Json.Decode.succeed VerifyEmailAddressAPI200Response
        |> maybeDecodeNullable "email" Json.Decode.string Nothing
        |> maybeDecodeNullable "domain" Json.Decode.string Nothing
        |> maybeDecodeNullable "first_name" Json.Decode.string Nothing
        |> maybeDecodeNullable "middle_name" Json.Decode.string Nothing
        |> maybeDecodeNullable "last_name" Json.Decode.string Nothing
        |> maybeDecodeNullable "full_name" Json.Decode.string Nothing
        |> maybeDecodeNullable "username" Json.Decode.string Nothing
        |> maybeDecodeNullable "image" Json.Decode.string Nothing
        |> maybeDecodeNullable "result" Json.Decode.string Nothing
        |> maybeDecode "disposable" Json.Decode.bool Nothing
        |> maybeDecode "accept_all" Json.Decode.bool Nothing
        |> maybeDecode "free_provider" Json.Decode.bool Nothing




-- HELPER


type alias EncodedField =
    Maybe ( String, Json.Encode.Value )


encodeObject : List EncodedField -> Json.Encode.Value
encodeObject =
    Json.Encode.object << List.filterMap identity


encode : String -> (a -> Json.Encode.Value) -> a -> EncodedField
encode key encoder value =
    Just ( key, encoder value )


encodeNullable : String -> (a -> Json.Encode.Value) -> Maybe a -> EncodedField
encodeNullable key encoder value =
    Just ( key, Maybe.withDefault Json.Encode.null (Maybe.map encoder value) )


maybeEncode : String -> (a -> Json.Encode.Value) -> Maybe a -> EncodedField
maybeEncode key encoder =
    Maybe.map (Tuple.pair key << encoder)


maybeEncodeNullable : String -> (a -> Json.Encode.Value) -> Maybe a -> EncodedField
maybeEncodeNullable =
    encodeNullable


decode : String -> Json.Decode.Decoder a -> Json.Decode.Decoder (a -> b) -> Json.Decode.Decoder b
decode key decoder =
    decodeChain (Json.Decode.field key decoder)


decodeLazy : (a -> c) -> String -> Json.Decode.Decoder a -> Json.Decode.Decoder (c -> b) -> Json.Decode.Decoder b
decodeLazy f key decoder =
    decodeChainLazy f (Json.Decode.field key decoder)


decodeNullable : String -> Json.Decode.Decoder a -> Json.Decode.Decoder (Maybe a -> b) -> Json.Decode.Decoder b
decodeNullable key decoder =
    decodeChain (maybeField key decoder Nothing)


decodeNullableLazy : (Maybe a -> c) -> String -> Json.Decode.Decoder a -> Json.Decode.Decoder (c -> b) -> Json.Decode.Decoder b
decodeNullableLazy f key decoder =
    decodeChainLazy f (maybeField key decoder Nothing)


maybeDecode : String -> Json.Decode.Decoder a -> Maybe a -> Json.Decode.Decoder (Maybe a -> b) -> Json.Decode.Decoder b
maybeDecode key decoder fallback =
    -- let's be kind to null-values as well
    decodeChain (maybeField key decoder fallback)


maybeDecodeLazy : (Maybe a -> c) -> String -> Json.Decode.Decoder a -> Maybe a -> Json.Decode.Decoder (c -> b) -> Json.Decode.Decoder b
maybeDecodeLazy f key decoder fallback =
    -- let's be kind to null-values as well
    decodeChainLazy f (maybeField key decoder fallback)


maybeDecodeNullable : String -> Json.Decode.Decoder a -> Maybe a -> Json.Decode.Decoder (Maybe a -> b) -> Json.Decode.Decoder b
maybeDecodeNullable key decoder fallback =
    decodeChain (maybeField key decoder fallback)


maybeDecodeNullableLazy : (Maybe a -> c) -> String -> Json.Decode.Decoder a -> Maybe a -> Json.Decode.Decoder (c -> b) -> Json.Decode.Decoder b
maybeDecodeNullableLazy f key decoder fallback =
    decodeChainLazy f (maybeField key decoder fallback)


maybeField : String -> Json.Decode.Decoder a -> Maybe a -> Json.Decode.Decoder (Maybe a)
maybeField key decoder fallback =
    let
        fieldDecoder =
            Json.Decode.field key Json.Decode.value

        valueDecoder =
            Json.Decode.oneOf [ Json.Decode.map Just decoder, Json.Decode.null fallback ]

        decodeObject rawObject =
            case Json.Decode.decodeValue fieldDecoder rawObject of
                Ok rawValue ->
                    case Json.Decode.decodeValue valueDecoder rawValue of
                        Ok value ->
                            Json.Decode.succeed value

                        Err error ->
                            Json.Decode.fail (Json.Decode.errorToString error)

                Err _ ->
                    Json.Decode.succeed fallback
    in
    Json.Decode.value
        |> Json.Decode.andThen decodeObject


decodeChain : Json.Decode.Decoder a -> Json.Decode.Decoder (a -> b) -> Json.Decode.Decoder b
decodeChain =
    Json.Decode.map2 (|>)


decodeChainLazy : (a -> c) -> Json.Decode.Decoder a -> Json.Decode.Decoder (c -> b) -> Json.Decode.Decoder b
decodeChainLazy f =
    decodeChain << Json.Decode.map f
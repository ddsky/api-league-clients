{-
   API League
   API League is a Hub for World Class APIs.

   The version of the OpenAPI document: 1.0
   Contact: mail@apileague.com

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git

   DO NOT EDIT THIS FILE MANUALLY.

   For more info on generating Elm code, see https://eriktim.github.io/openapi-elm/
-}


module Api.Data exposing
    ( ComputeNutrition200Response
    , ComputeNutrition200ResponseIngredientBreakdownInner
    , ComputeNutrition200ResponseIngredientBreakdownInnerNutrientsInner
    , ConvertUnits200Response
    , CorrectSpelling200Response
    , DetectLanguage200ResponseInner
    , DetectMainImageColor200ResponseInner
    , DetectSentiment200Response
    , DetectSentiment200ResponseDocument
    , DetectSentiment200ResponseSentencesInner
    , ExtractAuthors200Response
    , ExtractAuthors200ResponseAuthorsInner
    , ExtractContentFromAWebPage200Response
    , ExtractDates200Response
    , ExtractDates200ResponseDatesInner
    , ExtractEntities200Response
    , ExtractEntities200ResponseEntitiesInner
    , ExtractNews200Response
    , ExtractPublishDate200Response
    , FindSimilarBooks200Response
    , GenerateNonsenseWord200Response
    , ListWordSynonyms200Response
    , PartOfSpeechTagging200Response
    , PluralizeWord200Response
    , RandomMeme200Response
    , RandomPoem200Response
    , RandomQuote200Response
    , RandomTrivia200Response
    , ReadKeyValueFromStore200Response
    , RetrieveRecipeInformation200Response
    , RetrieveRecipeInformation200ResponseCredits
    , RetrieveRecipeInformation200ResponseDietaryProperties
    , RetrieveRecipeInformation200ResponseIngredientsInner
    , RetrieveRecipeInformation200ResponseIngredientsInnerMeasures
    , RetrieveRecipeInformation200ResponseIngredientsInnerMeasuresMetric
    , RetrieveRecipeInformation200ResponseInstructionsInner
    , RetrieveRecipeInformation200ResponseInstructionsInnerStepsInner
    , RetrieveRecipeInformation200ResponseInstructionsInnerStepsInnerIngredientsInner
    , RetrieveRecipeInformation200ResponseNutrition
    , RetrieveRecipeInformation200ResponseNutritionCaloricBreakdown
    , RetrieveRecipeInformation200ResponseNutritionFlavonoidsInner
    , RetrieveRecipeInformation200ResponseNutritionIngredientBreakdownInner
    , RetrieveRecipeInformation200ResponseNutritionIngredientBreakdownInnerNutrientsInner
    , RetrieveRecipeInformation200ResponseNutritionWeightPerServing
    , RetrieveRecipeInformation200ResponseScores
    , RetrieveRecipeInformation200ResponseTaste
    , RetrieveRecipeInformation200ResponseTimes
    , ScoreReadability200Response
    , ScoreText200Response
    , ScoreText200ResponseInterestingness
    , ScoreText200ResponseInterestingnessSubscores
    , ScoreText200ResponseReadability
    , ScoreText200ResponseReadabilityMainscores
    , ScoreText200ResponseReadabilitySubscores
    , ScoreText200ResponseSkimmability
    , ScoreText200ResponseSkimmabilityMainscores
    , ScoreText200ResponseSkimmabilitySubscores
    , ScoreText200ResponseStyle
    , ScoreText200ResponseStyleSubscores
    , SearchBooks200Response
    , SearchBooks200ResponseBooksInner
    , SearchGifs200Response
    , SearchGifs200ResponseImagesInner
    , SearchJokes200Response
    , SearchJokes200ResponseJokesInner
    , SearchMemes200Response
    , SearchMemes200ResponseMemesInner
    , SearchNews200Response
    , SearchNews200ResponseNewsInner
    , SearchRecipes200Response
    , SearchRecipes200ResponseRecipesInner
    , SearchRecipes200ResponseRecipesInnerNutrition
    , SearchRecipes200ResponseRecipesInnerNutritionNutrientsInner
    , SearchRestaurants200Response
    , SearchRestaurants200ResponseRestaurantsInner
    , SearchRestaurants200ResponseRestaurantsInnerAddress
    , SearchRestaurants200ResponseRestaurantsInnerLocalHours
    , SearchRestaurants200ResponseRestaurantsInnerLocalHoursOperational
    , SearchRoyaltyFreeImages200Response
    , SearchRoyaltyFreeImages200ResponseImagesInner
    , SearchRoyaltyFreeImages200ResponseImagesInnerLicense
    , SearchWeb200Response
    , SearchWeb200ResponseResultsInner
    , SingularizeWord200Response
    , StoreKeyValueGET200Response
    , TextStemming200Response
    , encodeComputeNutrition200Response
    , encodeComputeNutrition200ResponseIngredientBreakdownInner
    , encodeComputeNutrition200ResponseIngredientBreakdownInnerNutrientsInner
    , encodeConvertUnits200Response
    , encodeCorrectSpelling200Response
    , encodeDetectLanguage200ResponseInner
    , encodeDetectMainImageColor200ResponseInner
    , encodeDetectSentiment200Response
    , encodeDetectSentiment200ResponseDocument
    , encodeDetectSentiment200ResponseSentencesInner
    , encodeExtractAuthors200Response
    , encodeExtractAuthors200ResponseAuthorsInner
    , encodeExtractContentFromAWebPage200Response
    , encodeExtractDates200Response
    , encodeExtractDates200ResponseDatesInner
    , encodeExtractEntities200Response
    , encodeExtractEntities200ResponseEntitiesInner
    , encodeExtractNews200Response
    , encodeExtractPublishDate200Response
    , encodeFindSimilarBooks200Response
    , encodeGenerateNonsenseWord200Response
    , encodeListWordSynonyms200Response
    , encodePartOfSpeechTagging200Response
    , encodePluralizeWord200Response
    , encodeRandomMeme200Response
    , encodeRandomPoem200Response
    , encodeRandomQuote200Response
    , encodeRandomTrivia200Response
    , encodeReadKeyValueFromStore200Response
    , encodeRetrieveRecipeInformation200Response
    , encodeRetrieveRecipeInformation200ResponseCredits
    , encodeRetrieveRecipeInformation200ResponseDietaryProperties
    , encodeRetrieveRecipeInformation200ResponseIngredientsInner
    , encodeRetrieveRecipeInformation200ResponseIngredientsInnerMeasures
    , encodeRetrieveRecipeInformation200ResponseIngredientsInnerMeasuresMetric
    , encodeRetrieveRecipeInformation200ResponseInstructionsInner
    , encodeRetrieveRecipeInformation200ResponseInstructionsInnerStepsInner
    , encodeRetrieveRecipeInformation200ResponseInstructionsInnerStepsInnerIngredientsInner
    , encodeRetrieveRecipeInformation200ResponseNutrition
    , encodeRetrieveRecipeInformation200ResponseNutritionCaloricBreakdown
    , encodeRetrieveRecipeInformation200ResponseNutritionFlavonoidsInner
    , encodeRetrieveRecipeInformation200ResponseNutritionIngredientBreakdownInner
    , encodeRetrieveRecipeInformation200ResponseNutritionIngredientBreakdownInnerNutrientsInner
    , encodeRetrieveRecipeInformation200ResponseNutritionWeightPerServing
    , encodeRetrieveRecipeInformation200ResponseScores
    , encodeRetrieveRecipeInformation200ResponseTaste
    , encodeRetrieveRecipeInformation200ResponseTimes
    , encodeScoreReadability200Response
    , encodeScoreText200Response
    , encodeScoreText200ResponseInterestingness
    , encodeScoreText200ResponseInterestingnessSubscores
    , encodeScoreText200ResponseReadability
    , encodeScoreText200ResponseReadabilityMainscores
    , encodeScoreText200ResponseReadabilitySubscores
    , encodeScoreText200ResponseSkimmability
    , encodeScoreText200ResponseSkimmabilityMainscores
    , encodeScoreText200ResponseSkimmabilitySubscores
    , encodeScoreText200ResponseStyle
    , encodeScoreText200ResponseStyleSubscores
    , encodeSearchBooks200Response
    , encodeSearchBooks200ResponseBooksInner
    , encodeSearchGifs200Response
    , encodeSearchGifs200ResponseImagesInner
    , encodeSearchJokes200Response
    , encodeSearchJokes200ResponseJokesInner
    , encodeSearchMemes200Response
    , encodeSearchMemes200ResponseMemesInner
    , encodeSearchNews200Response
    , encodeSearchNews200ResponseNewsInner
    , encodeSearchRecipes200Response
    , encodeSearchRecipes200ResponseRecipesInner
    , encodeSearchRecipes200ResponseRecipesInnerNutrition
    , encodeSearchRecipes200ResponseRecipesInnerNutritionNutrientsInner
    , encodeSearchRestaurants200Response
    , encodeSearchRestaurants200ResponseRestaurantsInner
    , encodeSearchRestaurants200ResponseRestaurantsInnerAddress
    , encodeSearchRestaurants200ResponseRestaurantsInnerLocalHours
    , encodeSearchRestaurants200ResponseRestaurantsInnerLocalHoursOperational
    , encodeSearchRoyaltyFreeImages200Response
    , encodeSearchRoyaltyFreeImages200ResponseImagesInner
    , encodeSearchRoyaltyFreeImages200ResponseImagesInnerLicense
    , encodeSearchWeb200Response
    , encodeSearchWeb200ResponseResultsInner
    , encodeSingularizeWord200Response
    , encodeStoreKeyValueGET200Response
    , encodeTextStemming200Response
    , computeNutrition200ResponseDecoder
    , computeNutrition200ResponseIngredientBreakdownInnerDecoder
    , computeNutrition200ResponseIngredientBreakdownInnerNutrientsInnerDecoder
    , convertUnits200ResponseDecoder
    , correctSpelling200ResponseDecoder
    , detectLanguage200ResponseInnerDecoder
    , detectMainImageColor200ResponseInnerDecoder
    , detectSentiment200ResponseDecoder
    , detectSentiment200ResponseDocumentDecoder
    , detectSentiment200ResponseSentencesInnerDecoder
    , extractAuthors200ResponseDecoder
    , extractAuthors200ResponseAuthorsInnerDecoder
    , extractContentFromAWebPage200ResponseDecoder
    , extractDates200ResponseDecoder
    , extractDates200ResponseDatesInnerDecoder
    , extractEntities200ResponseDecoder
    , extractEntities200ResponseEntitiesInnerDecoder
    , extractNews200ResponseDecoder
    , extractPublishDate200ResponseDecoder
    , findSimilarBooks200ResponseDecoder
    , generateNonsenseWord200ResponseDecoder
    , listWordSynonyms200ResponseDecoder
    , partOfSpeechTagging200ResponseDecoder
    , pluralizeWord200ResponseDecoder
    , randomMeme200ResponseDecoder
    , randomPoem200ResponseDecoder
    , randomQuote200ResponseDecoder
    , randomTrivia200ResponseDecoder
    , readKeyValueFromStore200ResponseDecoder
    , retrieveRecipeInformation200ResponseDecoder
    , retrieveRecipeInformation200ResponseCreditsDecoder
    , retrieveRecipeInformation200ResponseDietaryPropertiesDecoder
    , retrieveRecipeInformation200ResponseIngredientsInnerDecoder
    , retrieveRecipeInformation200ResponseIngredientsInnerMeasuresDecoder
    , retrieveRecipeInformation200ResponseIngredientsInnerMeasuresMetricDecoder
    , retrieveRecipeInformation200ResponseInstructionsInnerDecoder
    , retrieveRecipeInformation200ResponseInstructionsInnerStepsInnerDecoder
    , retrieveRecipeInformation200ResponseInstructionsInnerStepsInnerIngredientsInnerDecoder
    , retrieveRecipeInformation200ResponseNutritionDecoder
    , retrieveRecipeInformation200ResponseNutritionCaloricBreakdownDecoder
    , retrieveRecipeInformation200ResponseNutritionFlavonoidsInnerDecoder
    , retrieveRecipeInformation200ResponseNutritionIngredientBreakdownInnerDecoder
    , retrieveRecipeInformation200ResponseNutritionIngredientBreakdownInnerNutrientsInnerDecoder
    , retrieveRecipeInformation200ResponseNutritionWeightPerServingDecoder
    , retrieveRecipeInformation200ResponseScoresDecoder
    , retrieveRecipeInformation200ResponseTasteDecoder
    , retrieveRecipeInformation200ResponseTimesDecoder
    , scoreReadability200ResponseDecoder
    , scoreText200ResponseDecoder
    , scoreText200ResponseInterestingnessDecoder
    , scoreText200ResponseInterestingnessSubscoresDecoder
    , scoreText200ResponseReadabilityDecoder
    , scoreText200ResponseReadabilityMainscoresDecoder
    , scoreText200ResponseReadabilitySubscoresDecoder
    , scoreText200ResponseSkimmabilityDecoder
    , scoreText200ResponseSkimmabilityMainscoresDecoder
    , scoreText200ResponseSkimmabilitySubscoresDecoder
    , scoreText200ResponseStyleDecoder
    , scoreText200ResponseStyleSubscoresDecoder
    , searchBooks200ResponseDecoder
    , searchBooks200ResponseBooksInnerDecoder
    , searchGifs200ResponseDecoder
    , searchGifs200ResponseImagesInnerDecoder
    , searchJokes200ResponseDecoder
    , searchJokes200ResponseJokesInnerDecoder
    , searchMemes200ResponseDecoder
    , searchMemes200ResponseMemesInnerDecoder
    , searchNews200ResponseDecoder
    , searchNews200ResponseNewsInnerDecoder
    , searchRecipes200ResponseDecoder
    , searchRecipes200ResponseRecipesInnerDecoder
    , searchRecipes200ResponseRecipesInnerNutritionDecoder
    , searchRecipes200ResponseRecipesInnerNutritionNutrientsInnerDecoder
    , searchRestaurants200ResponseDecoder
    , searchRestaurants200ResponseRestaurantsInnerDecoder
    , searchRestaurants200ResponseRestaurantsInnerAddressDecoder
    , searchRestaurants200ResponseRestaurantsInnerLocalHoursDecoder
    , searchRestaurants200ResponseRestaurantsInnerLocalHoursOperationalDecoder
    , searchRoyaltyFreeImages200ResponseDecoder
    , searchRoyaltyFreeImages200ResponseImagesInnerDecoder
    , searchRoyaltyFreeImages200ResponseImagesInnerLicenseDecoder
    , searchWeb200ResponseDecoder
    , searchWeb200ResponseResultsInnerDecoder
    , singularizeWord200ResponseDecoder
    , storeKeyValueGET200ResponseDecoder
    , textStemming200ResponseDecoder
    )

import Api
import Dict
import Json.Decode
import Json.Encode


-- MODEL


type alias ComputeNutrition200Response =
    { nutrients : Maybe ( List RetrieveRecipeInformation200ResponseNutritionIngredientBreakdownInnerNutrientsInner )
    , properties : Maybe ( List RetrieveRecipeInformation200ResponseNutritionFlavonoidsInner )
    , flavonoids : Maybe ( List SearchRecipes200ResponseRecipesInnerNutritionNutrientsInner )
    , ingredientBreakdown : Maybe ( List ComputeNutrition200ResponseIngredientBreakdownInner )
    , caloricBreakdown : Maybe RetrieveRecipeInformation200ResponseNutritionCaloricBreakdown
    , weightPerServing : Maybe RetrieveRecipeInformation200ResponseNutritionWeightPerServing
    }


type alias ComputeNutrition200ResponseIngredientBreakdownInner =
    { name : Maybe String
    , amount : Maybe Int
    , unit : Maybe String
    , id : Maybe Int
    , nutrients : Maybe ( List ComputeNutrition200ResponseIngredientBreakdownInnerNutrientsInner )
    }


type alias ComputeNutrition200ResponseIngredientBreakdownInnerNutrientsInner =
    { name : Maybe String
    , percentOfDailyNeeds : Maybe Int
    , amount : Maybe Int
    , unit : Maybe String
    }


type alias ConvertUnits200Response =
    { targetAmount : Maybe Float
    , targetUnit : Maybe String
    }


type alias CorrectSpelling200Response =
    { correctedText : Maybe String
    }


type alias DetectLanguage200ResponseInner =
    { language : Maybe String
    , confidence : Maybe Float
    }


type alias DetectMainImageColor200ResponseInner =
    { specificColor : Maybe String
    , mainColor : Maybe String
    , hexCode : Maybe String
    }


type alias DetectSentiment200Response =
    { document : Maybe DetectSentiment200ResponseDocument
    , sentences : Maybe ( List DetectSentiment200ResponseSentencesInner )
    }


type alias DetectSentiment200ResponseDocument =
    { sentiment : Maybe String
    , confidence : Maybe Int
    , averageConfidence : Maybe Int
    }


type alias DetectSentiment200ResponseSentencesInner =
    { length : Maybe Int
    , sentiment : Maybe String
    , offset : Maybe Int
    , confidence : Maybe Int
    }


type alias ExtractAuthors200Response =
    { authors : Maybe ( List ExtractAuthors200ResponseAuthorsInner )
    }


type alias ExtractAuthors200ResponseAuthorsInner =
    { link : Maybe String
    , name : Maybe String
    }


type alias ExtractContentFromAWebPage200Response =
    { title : Maybe String
    , mainText : Maybe String
    , mainHtml : Maybe String
    , images : Maybe ( List Maybe String )
    }


type alias ExtractDates200Response =
    { dates : Maybe ( List ExtractDates200ResponseDatesInner )
    }


type alias ExtractDates200ResponseDatesInner =
    { startPosition : Maybe Int
    , date : Maybe String
    , normalizedDate : Maybe Float
    , tag : Maybe String
    , endPosition : Maybe Int
    }


type alias ExtractEntities200Response =
    { entities : Maybe ( List ExtractEntities200ResponseEntitiesInner )
    }


type alias ExtractEntities200ResponseEntitiesInner =
    { startPosition : Maybe Int
    , image : Maybe String
    , type_ : Maybe String
    , value : Maybe String
    , endPosition : Maybe Int
    }


type alias ExtractNews200Response =
    { title : Maybe String
    , text : Maybe String
    , url : Maybe String
    , image : Maybe String
    , publishDate : Maybe String
    , author : Maybe String
    , language : Maybe String
    , sourceCountry : Maybe String
    , sentiment : Maybe Float
    }


type alias ExtractPublishDate200Response =
    { publishDate : Maybe String
    }


type alias FindSimilarBooks200Response =
    { similarBooks : Maybe ( List SearchBooks200ResponseBooksInner )
    }


type alias GenerateNonsenseWord200Response =
    { word : Maybe String
    , rating : Maybe Float
    }


type alias ListWordSynonyms200Response =
    { synonyms : Maybe ( List Maybe String )
    }


type alias PartOfSpeechTagging200Response =
    { taggedText : Maybe String
    }


type alias PluralizeWord200Response =
    { original : Maybe String
    , plural : Maybe String
    }


type alias RandomMeme200Response =
    { description : Maybe String
    , url : Maybe String
    , type_ : Maybe String
    , width : Maybe Int
    , height : Maybe Int
    , ratio : Maybe Float
    }


type alias RandomPoem200Response =
    { title : Maybe String
    , author : Maybe String
    , poem : Maybe String
    }


type alias RandomQuote200Response =
    { author : Maybe String
    , quote : Maybe String
    }


type alias RandomTrivia200Response =
    { trivia : Maybe String
    }


type alias ReadKeyValueFromStore200Response =
    { value : Maybe String
    }


type alias RetrieveRecipeInformation200Response =
    { id : Maybe Int
    , title : Maybe String
    , servings : Maybe Int
    , images : Maybe ( List Maybe String )
    , dietaryProperties : Maybe RetrieveRecipeInformation200ResponseDietaryProperties
    , pricePerServing : Maybe Float
    , times : Maybe RetrieveRecipeInformation200ResponseTimes
    , nutrition : Maybe RetrieveRecipeInformation200ResponseNutrition
    , taste : Maybe RetrieveRecipeInformation200ResponseTaste
    , cuisines : Maybe ( List Maybe String )
    , mealTypes : Maybe ( List Maybe String )
    , occasions : Maybe ( List Maybe String )
    , ingredients : Maybe ( List RetrieveRecipeInformation200ResponseIngredientsInner )
    , instructions : Maybe ( List RetrieveRecipeInformation200ResponseInstructionsInner )
    , credits : Maybe RetrieveRecipeInformation200ResponseCredits
    , scores : Maybe RetrieveRecipeInformation200ResponseScores
    }


type alias RetrieveRecipeInformation200ResponseCredits =
    { license : Maybe String
    , text : Maybe String
    , sourceName : Maybe String
    , sourceUrl : Maybe String
    }


type alias RetrieveRecipeInformation200ResponseDietaryProperties =
    { lowFodmap : Maybe Bool
    , vegetarian : Maybe Bool
    , vegan : Maybe Bool
    , glutenFree : Maybe Bool
    , dairyFree : Maybe Bool
    , gaps : Maybe String
    , diets : Maybe ( List Maybe String )
    }


type alias RetrieveRecipeInformation200ResponseIngredientsInner =
    { image : Maybe String
    , nameClean : Maybe String
    , amount : Maybe Float
    , unit : Maybe String
    , measures : Maybe RetrieveRecipeInformation200ResponseIngredientsInnerMeasures
    , original : Maybe String
    , meta : Maybe ( List Maybe String )
    , originalName : Maybe String
    , name : Maybe String
    , id : Maybe Int
    , aisle : Maybe String
    , consistency : Maybe String
    }


type alias RetrieveRecipeInformation200ResponseIngredientsInnerMeasures =
    { metric : Maybe RetrieveRecipeInformation200ResponseIngredientsInnerMeasuresMetric
    , us : Maybe RetrieveRecipeInformation200ResponseIngredientsInnerMeasuresMetric
    }


type alias RetrieveRecipeInformation200ResponseIngredientsInnerMeasuresMetric =
    { unitShort : Maybe String
    , amount : Maybe Float
    , unitLong : Maybe String
    }


type alias RetrieveRecipeInformation200ResponseInstructionsInner =
    { name : Maybe String
    , steps : Maybe ( List RetrieveRecipeInformation200ResponseInstructionsInnerStepsInner )
    }


type alias RetrieveRecipeInformation200ResponseInstructionsInnerStepsInner =
    { number : Maybe Int
    , ingredients : Maybe ( List RetrieveRecipeInformation200ResponseInstructionsInnerStepsInnerIngredientsInner )
    , equipment : Maybe ( List RetrieveRecipeInformation200ResponseInstructionsInnerStepsInnerIngredientsInner )
    , step : Maybe String
    }


type alias RetrieveRecipeInformation200ResponseInstructionsInnerStepsInnerIngredientsInner =
    { name : Maybe String
    , image : Maybe String
    , id : Maybe Int
    }


type alias RetrieveRecipeInformation200ResponseNutrition =
    { weightPerServing : Maybe RetrieveRecipeInformation200ResponseNutritionWeightPerServing
    , caloricBreakdown : Maybe RetrieveRecipeInformation200ResponseNutritionCaloricBreakdown
    , flavonoids : Maybe ( List RetrieveRecipeInformation200ResponseNutritionFlavonoidsInner )
    , ingredientBreakdown : Maybe ( List RetrieveRecipeInformation200ResponseNutritionIngredientBreakdownInner )
    , properties : Maybe ( List SearchRecipes200ResponseRecipesInnerNutritionNutrientsInner )
    , nutrients : Maybe ( List RetrieveRecipeInformation200ResponseNutritionIngredientBreakdownInnerNutrientsInner )
    }


type alias RetrieveRecipeInformation200ResponseNutritionCaloricBreakdown =
    { percentFat : Maybe Float
    , percentCarbs : Maybe Float
    , percentProtein : Maybe Float
    }


type alias RetrieveRecipeInformation200ResponseNutritionFlavonoidsInner =
    { name : Maybe String
    , amount : Maybe Int
    , unit : Maybe String
    }


type alias RetrieveRecipeInformation200ResponseNutritionIngredientBreakdownInner =
    { name : Maybe String
    , amount : Maybe Float
    , unit : Maybe String
    , id : Maybe Int
    , nutrients : Maybe ( List RetrieveRecipeInformation200ResponseNutritionIngredientBreakdownInnerNutrientsInner )
    }


type alias RetrieveRecipeInformation200ResponseNutritionIngredientBreakdownInnerNutrientsInner =
    { name : Maybe String
    , percentOfDailyNeeds : Maybe Float
    , amount : Maybe Float
    , unit : Maybe String
    }


type alias RetrieveRecipeInformation200ResponseNutritionWeightPerServing =
    { amount : Maybe Int
    , unit : Maybe String
    }


type alias RetrieveRecipeInformation200ResponseScores =
    { metaScore : Maybe Float
    , weightWatcherSmartPoints : Maybe Int
    , healthScore : Maybe Int
    }


type alias RetrieveRecipeInformation200ResponseTaste =
    { fattiness : Maybe Float
    , spiciness : Maybe Int
    , saltiness : Maybe Int
    , bitterness : Maybe Float
    , savoriness : Maybe Float
    , sweetness : Maybe Float
    , sourness : Maybe Float
    }


type alias RetrieveRecipeInformation200ResponseTimes =
    { totalMinutes : Maybe Int
    }


type alias ScoreReadability200Response =
    { readability : Maybe ScoreText200ResponseReadability
    }


type alias ScoreText200Response =
    { numberOfWords : Maybe Int
    , numberOfSentences : Maybe Int
    , readability : Maybe ScoreText200ResponseReadability
    , skimmability : Maybe ScoreText200ResponseSkimmability
    , interestingness : Maybe ScoreText200ResponseInterestingness
    , style : Maybe ScoreText200ResponseStyle
    , totalScore : Maybe Float
    }


type alias ScoreText200ResponseInterestingness =
    { mainscores : Maybe ScoreText200ResponseSkimmabilityMainscores
    , subscores : Maybe ScoreText200ResponseInterestingnessSubscores
    }


type alias ScoreText200ResponseInterestingnessSubscores =
    { titleRatingScore : Maybe ( List Int )
    , quoteScore : Maybe ( List Int )
    , lengthScore : Maybe ( List Int )
    , linkScore : Maybe ( List Int )
    , googleHitsScore : Maybe ( List Int )
    }


type alias ScoreText200ResponseReadability =
    { mainscores : Maybe ScoreText200ResponseReadabilityMainscores
    , subscores : Maybe ScoreText200ResponseReadabilitySubscores
    }


type alias ScoreText200ResponseReadabilityMainscores =
    { totalPossible : Maybe Int
    , total : Maybe Int
    }


type alias ScoreText200ResponseReadabilitySubscores =
    { readingTimeSeconds : Maybe Int
    , forcast : Maybe Float
    , flesch : Maybe Float
    , smog : Maybe Float
    , ari : Maybe Float
    , lix : Maybe Float
    , colemanLiau : Maybe Float
    , kincaid : Maybe Float
    , fog : Maybe Float
    }


type alias ScoreText200ResponseSkimmability =
    { mainscores : Maybe ScoreText200ResponseSkimmabilityMainscores
    , subscores : Maybe ScoreText200ResponseSkimmabilitySubscores
    }


type alias ScoreText200ResponseSkimmabilityMainscores =
    { totalPossible : Maybe Int
    , total : Maybe Float
    }


type alias ScoreText200ResponseSkimmabilitySubscores =
    { bulletPointRatioScore : Maybe ( List Int )
    , imageScore : Maybe ( List Int )
    , highlightedWordRatioScore : Maybe ( List Int )
    , videoScore : Maybe ( List Int )
    , paragraphScore : Maybe ( List Int )
    , paragraphHeadlineRatioScore : Maybe ( List Int )
    }


type alias ScoreText200ResponseStyle =
    { mainscores : Maybe ScoreText200ResponseReadabilityMainscores
    , subscores : Maybe ScoreText200ResponseStyleSubscores
    }


type alias ScoreText200ResponseStyleSubscores =
    { abbreviationScore : Maybe ( List Int )
    , styleScore : Maybe ( List Int )
    , spellingScore : Maybe ( List Int )
    }


type alias SearchBooks200Response =
    { available : Maybe Int
    , number : Maybe Int
    , offset : Maybe Int
    , books : Maybe ( List SearchBooks200ResponseBooksInner )
    }


type alias SearchBooks200ResponseBooksInner =
    { title : Maybe String
    , image : Maybe String
    , id : Maybe Int
    }


type alias SearchGifs200Response =
    { images : Maybe ( List SearchGifs200ResponseImagesInner )
    }


type alias SearchGifs200ResponseImagesInner =
    { width : Maybe Int
    , url : Maybe String
    , height : Maybe Int
    }


type alias SearchJokes200Response =
    { jokes : Maybe ( List SearchJokes200ResponseJokesInner )
    , available : Maybe Int
    }


type alias SearchJokes200ResponseJokesInner =
    { joke : Maybe String
    }


type alias SearchMemes200Response =
    { memes : Maybe ( List SearchMemes200ResponseMemesInner )
    , available : Maybe Int
    }


type alias SearchMemes200ResponseMemesInner =
    { type_ : Maybe String
    , description : Maybe String
    , url : Maybe String
    }


type alias SearchNews200Response =
    { offset : Maybe Int
    , number : Maybe Int
    , available : Maybe Int
    , news : Maybe ( List SearchNews200ResponseNewsInner )
    }


type alias SearchNews200ResponseNewsInner =
    { summary : Maybe String
    , image : Maybe String
    , sentiment : Maybe Float
    , sourceCountry : Maybe String
    , language : Maybe String
    , id : Maybe Int
    , text : Maybe String
    , title : Maybe String
    , publishDate : Maybe String
    , url : Maybe String
    , authors : Maybe ( List Maybe String )
    }


type alias SearchRecipes200Response =
    { offset : Maybe Int
    , number : Maybe Int
    , recipes : Maybe ( List SearchRecipes200ResponseRecipesInner )
    , totalResults : Maybe Int
    }


type alias SearchRecipes200ResponseRecipesInner =
    { images : Maybe ( List Maybe String )
    , nutrition : Maybe SearchRecipes200ResponseRecipesInnerNutrition
    , id : Maybe Int
    , title : Maybe String
    }


type alias SearchRecipes200ResponseRecipesInnerNutrition =
    { nutrients : Maybe ( List SearchRecipes200ResponseRecipesInnerNutritionNutrientsInner )
    }


type alias SearchRecipes200ResponseRecipesInnerNutritionNutrientsInner =
    { name : Maybe String
    , amount : Maybe Float
    , unit : Maybe String
    }


type alias SearchRestaurants200Response =
    { restaurants : Maybe ( List SearchRestaurants200ResponseRestaurantsInner )
    }


type alias SearchRestaurants200ResponseRestaurantsInner =
    { offersThirdPartyDelivery : Maybe Bool
    , address : Maybe SearchRestaurants200ResponseRestaurantsInnerAddress
    , supportsUpcCodes : Maybe Bool
    , isOpen : Maybe Bool
    , description : Maybe String
    , weightedRatingValue : Maybe Int
    , type_ : Maybe String
    , offersFirstPartyDelivery : Maybe Bool
    , aggregatedRatingCount : Maybe Int
    , pickupEnabled : Maybe Bool
    , cuisines : Maybe ( List Maybe String )
    , miles : Maybe Float
    , dollarSigns : Maybe Int
    , deliveryEnabled : Maybe Bool
    , name : Maybe String
    , phoneNumber : Maybe Float
    , id : Maybe String
    , localHours : Maybe SearchRestaurants200ResponseRestaurantsInnerLocalHours
    }


type alias SearchRestaurants200ResponseRestaurantsInnerAddress =
    { zipcode : Maybe String
    , country : Maybe String
    , city : Maybe String
    , latitude : Maybe Float
    , lon : Maybe Float
    , streetAddr2 : Maybe String
    , state : Maybe String
    , streetAddr : Maybe String
    , lat : Maybe Float
    , longitude : Maybe Float
    }


type alias SearchRestaurants200ResponseRestaurantsInnerLocalHours =
    { operational : Maybe SearchRestaurants200ResponseRestaurantsInnerLocalHoursOperational
    , delivery : Maybe SearchRestaurants200ResponseRestaurantsInnerLocalHoursOperational
    , pickup : Maybe SearchRestaurants200ResponseRestaurantsInnerLocalHoursOperational
    , dineIn : Maybe SearchRestaurants200ResponseRestaurantsInnerLocalHoursOperational
    }


type alias SearchRestaurants200ResponseRestaurantsInnerLocalHoursOperational =
    { sunday : Maybe String
    , saturday : Maybe String
    , tuesday : Maybe String
    , thursday : Maybe String
    , friday : Maybe String
    , wednesday : Maybe String
    , monday : Maybe String
    }


type alias SearchRoyaltyFreeImages200Response =
    { images : Maybe ( List SearchRoyaltyFreeImages200ResponseImagesInner )
    }


type alias SearchRoyaltyFreeImages200ResponseImagesInner =
    { width : Maybe Int
    , license : Maybe SearchRoyaltyFreeImages200ResponseImagesInnerLicense
    , thumbnail : Maybe String
    , id : Maybe String
    , url : Maybe String
    , height : Maybe Int
    }


type alias SearchRoyaltyFreeImages200ResponseImagesInnerLicense =
    { name : Maybe String
    , link : Maybe String
    }


type alias SearchWeb200Response =
    { results : Maybe ( List SearchWeb200ResponseResultsInner )
    }


type alias SearchWeb200ResponseResultsInner =
    { title : Maybe String
    , summary : Maybe String
    , url : Maybe String
    }


type alias SingularizeWord200Response =
    { original : Maybe String
    , singular : Maybe String
    }


type alias StoreKeyValueGET200Response =
    { status : Maybe String
    }


type alias TextStemming200Response =
    { original : Maybe String
    , stemmed : Maybe String
    }


-- ENCODER


encodeComputeNutrition200Response : ComputeNutrition200Response -> Json.Encode.Value
encodeComputeNutrition200Response =
    encodeObject << encodeComputeNutrition200ResponsePairs


encodeComputeNutrition200ResponseWithTag : ( String, String ) -> ComputeNutrition200Response -> Json.Encode.Value
encodeComputeNutrition200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeComputeNutrition200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeComputeNutrition200ResponsePairs : ComputeNutrition200Response -> List EncodedField
encodeComputeNutrition200ResponsePairs model =
    let
        pairs =
            [ maybeEncode "nutrients" (Json.Encode.list encodeRetrieveRecipeInformation200ResponseNutritionIngredientBreakdownInnerNutrientsInner) model.nutrients
            , maybeEncode "properties" (Json.Encode.list encodeRetrieveRecipeInformation200ResponseNutritionFlavonoidsInner) model.properties
            , maybeEncode "flavonoids" (Json.Encode.list encodeSearchRecipes200ResponseRecipesInnerNutritionNutrientsInner) model.flavonoids
            , maybeEncode "ingredient_breakdown" (Json.Encode.list encodeComputeNutrition200ResponseIngredientBreakdownInner) model.ingredientBreakdown
            , maybeEncode "caloric_breakdown" encodeRetrieveRecipeInformation200ResponseNutritionCaloricBreakdown model.caloricBreakdown
            , maybeEncode "weight_per_serving" encodeRetrieveRecipeInformation200ResponseNutritionWeightPerServing model.weightPerServing
            ]
    in
    pairs


encodeComputeNutrition200ResponseIngredientBreakdownInner : ComputeNutrition200ResponseIngredientBreakdownInner -> Json.Encode.Value
encodeComputeNutrition200ResponseIngredientBreakdownInner =
    encodeObject << encodeComputeNutrition200ResponseIngredientBreakdownInnerPairs


encodeComputeNutrition200ResponseIngredientBreakdownInnerWithTag : ( String, String ) -> ComputeNutrition200ResponseIngredientBreakdownInner -> Json.Encode.Value
encodeComputeNutrition200ResponseIngredientBreakdownInnerWithTag (tagField, tag) model =
    encodeObject (encodeComputeNutrition200ResponseIngredientBreakdownInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeComputeNutrition200ResponseIngredientBreakdownInnerPairs : ComputeNutrition200ResponseIngredientBreakdownInner -> List EncodedField
encodeComputeNutrition200ResponseIngredientBreakdownInnerPairs model =
    let
        pairs =
            [ maybeEncodeNullable "name" Json.Encode.string model.name
            , maybeEncode "amount" Json.Encode.int model.amount
            , maybeEncodeNullable "unit" Json.Encode.string model.unit
            , maybeEncode "id" Json.Encode.int model.id
            , maybeEncode "nutrients" (Json.Encode.list encodeComputeNutrition200ResponseIngredientBreakdownInnerNutrientsInner) model.nutrients
            ]
    in
    pairs


encodeComputeNutrition200ResponseIngredientBreakdownInnerNutrientsInner : ComputeNutrition200ResponseIngredientBreakdownInnerNutrientsInner -> Json.Encode.Value
encodeComputeNutrition200ResponseIngredientBreakdownInnerNutrientsInner =
    encodeObject << encodeComputeNutrition200ResponseIngredientBreakdownInnerNutrientsInnerPairs


encodeComputeNutrition200ResponseIngredientBreakdownInnerNutrientsInnerWithTag : ( String, String ) -> ComputeNutrition200ResponseIngredientBreakdownInnerNutrientsInner -> Json.Encode.Value
encodeComputeNutrition200ResponseIngredientBreakdownInnerNutrientsInnerWithTag (tagField, tag) model =
    encodeObject (encodeComputeNutrition200ResponseIngredientBreakdownInnerNutrientsInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeComputeNutrition200ResponseIngredientBreakdownInnerNutrientsInnerPairs : ComputeNutrition200ResponseIngredientBreakdownInnerNutrientsInner -> List EncodedField
encodeComputeNutrition200ResponseIngredientBreakdownInnerNutrientsInnerPairs model =
    let
        pairs =
            [ maybeEncodeNullable "name" Json.Encode.string model.name
            , maybeEncode "percent_of_daily_needs" Json.Encode.int model.percentOfDailyNeeds
            , maybeEncode "amount" Json.Encode.int model.amount
            , maybeEncodeNullable "unit" Json.Encode.string model.unit
            ]
    in
    pairs


encodeConvertUnits200Response : ConvertUnits200Response -> Json.Encode.Value
encodeConvertUnits200Response =
    encodeObject << encodeConvertUnits200ResponsePairs


encodeConvertUnits200ResponseWithTag : ( String, String ) -> ConvertUnits200Response -> Json.Encode.Value
encodeConvertUnits200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeConvertUnits200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeConvertUnits200ResponsePairs : ConvertUnits200Response -> List EncodedField
encodeConvertUnits200ResponsePairs model =
    let
        pairs =
            [ maybeEncode "target_amount" Json.Encode.float model.targetAmount
            , maybeEncodeNullable "target_unit" Json.Encode.string model.targetUnit
            ]
    in
    pairs


encodeCorrectSpelling200Response : CorrectSpelling200Response -> Json.Encode.Value
encodeCorrectSpelling200Response =
    encodeObject << encodeCorrectSpelling200ResponsePairs


encodeCorrectSpelling200ResponseWithTag : ( String, String ) -> CorrectSpelling200Response -> Json.Encode.Value
encodeCorrectSpelling200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeCorrectSpelling200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCorrectSpelling200ResponsePairs : CorrectSpelling200Response -> List EncodedField
encodeCorrectSpelling200ResponsePairs model =
    let
        pairs =
            [ maybeEncodeNullable "corrected_text" Json.Encode.string model.correctedText
            ]
    in
    pairs


encodeDetectLanguage200ResponseInner : DetectLanguage200ResponseInner -> Json.Encode.Value
encodeDetectLanguage200ResponseInner =
    encodeObject << encodeDetectLanguage200ResponseInnerPairs


encodeDetectLanguage200ResponseInnerWithTag : ( String, String ) -> DetectLanguage200ResponseInner -> Json.Encode.Value
encodeDetectLanguage200ResponseInnerWithTag (tagField, tag) model =
    encodeObject (encodeDetectLanguage200ResponseInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeDetectLanguage200ResponseInnerPairs : DetectLanguage200ResponseInner -> List EncodedField
encodeDetectLanguage200ResponseInnerPairs model =
    let
        pairs =
            [ maybeEncodeNullable "language" Json.Encode.string model.language
            , maybeEncode "confidence" Json.Encode.float model.confidence
            ]
    in
    pairs


encodeDetectMainImageColor200ResponseInner : DetectMainImageColor200ResponseInner -> Json.Encode.Value
encodeDetectMainImageColor200ResponseInner =
    encodeObject << encodeDetectMainImageColor200ResponseInnerPairs


encodeDetectMainImageColor200ResponseInnerWithTag : ( String, String ) -> DetectMainImageColor200ResponseInner -> Json.Encode.Value
encodeDetectMainImageColor200ResponseInnerWithTag (tagField, tag) model =
    encodeObject (encodeDetectMainImageColor200ResponseInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeDetectMainImageColor200ResponseInnerPairs : DetectMainImageColor200ResponseInner -> List EncodedField
encodeDetectMainImageColor200ResponseInnerPairs model =
    let
        pairs =
            [ maybeEncodeNullable "specific_color" Json.Encode.string model.specificColor
            , maybeEncodeNullable "main_color" Json.Encode.string model.mainColor
            , maybeEncodeNullable "hex_code" Json.Encode.string model.hexCode
            ]
    in
    pairs


encodeDetectSentiment200Response : DetectSentiment200Response -> Json.Encode.Value
encodeDetectSentiment200Response =
    encodeObject << encodeDetectSentiment200ResponsePairs


encodeDetectSentiment200ResponseWithTag : ( String, String ) -> DetectSentiment200Response -> Json.Encode.Value
encodeDetectSentiment200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeDetectSentiment200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeDetectSentiment200ResponsePairs : DetectSentiment200Response -> List EncodedField
encodeDetectSentiment200ResponsePairs model =
    let
        pairs =
            [ maybeEncode "document" encodeDetectSentiment200ResponseDocument model.document
            , maybeEncode "sentences" (Json.Encode.list encodeDetectSentiment200ResponseSentencesInner) model.sentences
            ]
    in
    pairs


encodeDetectSentiment200ResponseDocument : DetectSentiment200ResponseDocument -> Json.Encode.Value
encodeDetectSentiment200ResponseDocument =
    encodeObject << encodeDetectSentiment200ResponseDocumentPairs


encodeDetectSentiment200ResponseDocumentWithTag : ( String, String ) -> DetectSentiment200ResponseDocument -> Json.Encode.Value
encodeDetectSentiment200ResponseDocumentWithTag (tagField, tag) model =
    encodeObject (encodeDetectSentiment200ResponseDocumentPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeDetectSentiment200ResponseDocumentPairs : DetectSentiment200ResponseDocument -> List EncodedField
encodeDetectSentiment200ResponseDocumentPairs model =
    let
        pairs =
            [ maybeEncodeNullable "sentiment" Json.Encode.string model.sentiment
            , maybeEncode "confidence" Json.Encode.int model.confidence
            , maybeEncode "average_confidence" Json.Encode.int model.averageConfidence
            ]
    in
    pairs


encodeDetectSentiment200ResponseSentencesInner : DetectSentiment200ResponseSentencesInner -> Json.Encode.Value
encodeDetectSentiment200ResponseSentencesInner =
    encodeObject << encodeDetectSentiment200ResponseSentencesInnerPairs


encodeDetectSentiment200ResponseSentencesInnerWithTag : ( String, String ) -> DetectSentiment200ResponseSentencesInner -> Json.Encode.Value
encodeDetectSentiment200ResponseSentencesInnerWithTag (tagField, tag) model =
    encodeObject (encodeDetectSentiment200ResponseSentencesInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeDetectSentiment200ResponseSentencesInnerPairs : DetectSentiment200ResponseSentencesInner -> List EncodedField
encodeDetectSentiment200ResponseSentencesInnerPairs model =
    let
        pairs =
            [ maybeEncode "length" Json.Encode.int model.length
            , maybeEncodeNullable "sentiment" Json.Encode.string model.sentiment
            , maybeEncode "offset" Json.Encode.int model.offset
            , maybeEncode "confidence" Json.Encode.int model.confidence
            ]
    in
    pairs


encodeExtractAuthors200Response : ExtractAuthors200Response -> Json.Encode.Value
encodeExtractAuthors200Response =
    encodeObject << encodeExtractAuthors200ResponsePairs


encodeExtractAuthors200ResponseWithTag : ( String, String ) -> ExtractAuthors200Response -> Json.Encode.Value
encodeExtractAuthors200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeExtractAuthors200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeExtractAuthors200ResponsePairs : ExtractAuthors200Response -> List EncodedField
encodeExtractAuthors200ResponsePairs model =
    let
        pairs =
            [ maybeEncode "authors" (Json.Encode.list encodeExtractAuthors200ResponseAuthorsInner) model.authors
            ]
    in
    pairs


encodeExtractAuthors200ResponseAuthorsInner : ExtractAuthors200ResponseAuthorsInner -> Json.Encode.Value
encodeExtractAuthors200ResponseAuthorsInner =
    encodeObject << encodeExtractAuthors200ResponseAuthorsInnerPairs


encodeExtractAuthors200ResponseAuthorsInnerWithTag : ( String, String ) -> ExtractAuthors200ResponseAuthorsInner -> Json.Encode.Value
encodeExtractAuthors200ResponseAuthorsInnerWithTag (tagField, tag) model =
    encodeObject (encodeExtractAuthors200ResponseAuthorsInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeExtractAuthors200ResponseAuthorsInnerPairs : ExtractAuthors200ResponseAuthorsInner -> List EncodedField
encodeExtractAuthors200ResponseAuthorsInnerPairs model =
    let
        pairs =
            [ maybeEncodeNullable "link" Json.Encode.string model.link
            , maybeEncodeNullable "name" Json.Encode.string model.name
            ]
    in
    pairs


encodeExtractContentFromAWebPage200Response : ExtractContentFromAWebPage200Response -> Json.Encode.Value
encodeExtractContentFromAWebPage200Response =
    encodeObject << encodeExtractContentFromAWebPage200ResponsePairs


encodeExtractContentFromAWebPage200ResponseWithTag : ( String, String ) -> ExtractContentFromAWebPage200Response -> Json.Encode.Value
encodeExtractContentFromAWebPage200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeExtractContentFromAWebPage200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeExtractContentFromAWebPage200ResponsePairs : ExtractContentFromAWebPage200Response -> List EncodedField
encodeExtractContentFromAWebPage200ResponsePairs model =
    let
        pairs =
            [ maybeEncodeNullable "title" Json.Encode.string model.title
            , maybeEncodeNullable "main_text" Json.Encode.string model.mainText
            , maybeEncodeNullable "main_html" Json.Encode.string model.mainHtml
            , maybeEncode "images" (Json.Encode.list Json.Encode.string) model.images
            ]
    in
    pairs


encodeExtractDates200Response : ExtractDates200Response -> Json.Encode.Value
encodeExtractDates200Response =
    encodeObject << encodeExtractDates200ResponsePairs


encodeExtractDates200ResponseWithTag : ( String, String ) -> ExtractDates200Response -> Json.Encode.Value
encodeExtractDates200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeExtractDates200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeExtractDates200ResponsePairs : ExtractDates200Response -> List EncodedField
encodeExtractDates200ResponsePairs model =
    let
        pairs =
            [ maybeEncode "dates" (Json.Encode.list encodeExtractDates200ResponseDatesInner) model.dates
            ]
    in
    pairs


encodeExtractDates200ResponseDatesInner : ExtractDates200ResponseDatesInner -> Json.Encode.Value
encodeExtractDates200ResponseDatesInner =
    encodeObject << encodeExtractDates200ResponseDatesInnerPairs


encodeExtractDates200ResponseDatesInnerWithTag : ( String, String ) -> ExtractDates200ResponseDatesInner -> Json.Encode.Value
encodeExtractDates200ResponseDatesInnerWithTag (tagField, tag) model =
    encodeObject (encodeExtractDates200ResponseDatesInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeExtractDates200ResponseDatesInnerPairs : ExtractDates200ResponseDatesInner -> List EncodedField
encodeExtractDates200ResponseDatesInnerPairs model =
    let
        pairs =
            [ maybeEncode "start_position" Json.Encode.int model.startPosition
            , maybeEncodeNullable "date" Json.Encode.string model.date
            , maybeEncode "normalized_date" Json.Encode.float model.normalizedDate
            , maybeEncodeNullable "tag" Json.Encode.string model.tag
            , maybeEncode "end_position" Json.Encode.int model.endPosition
            ]
    in
    pairs


encodeExtractEntities200Response : ExtractEntities200Response -> Json.Encode.Value
encodeExtractEntities200Response =
    encodeObject << encodeExtractEntities200ResponsePairs


encodeExtractEntities200ResponseWithTag : ( String, String ) -> ExtractEntities200Response -> Json.Encode.Value
encodeExtractEntities200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeExtractEntities200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeExtractEntities200ResponsePairs : ExtractEntities200Response -> List EncodedField
encodeExtractEntities200ResponsePairs model =
    let
        pairs =
            [ maybeEncode "entities" (Json.Encode.list encodeExtractEntities200ResponseEntitiesInner) model.entities
            ]
    in
    pairs


encodeExtractEntities200ResponseEntitiesInner : ExtractEntities200ResponseEntitiesInner -> Json.Encode.Value
encodeExtractEntities200ResponseEntitiesInner =
    encodeObject << encodeExtractEntities200ResponseEntitiesInnerPairs


encodeExtractEntities200ResponseEntitiesInnerWithTag : ( String, String ) -> ExtractEntities200ResponseEntitiesInner -> Json.Encode.Value
encodeExtractEntities200ResponseEntitiesInnerWithTag (tagField, tag) model =
    encodeObject (encodeExtractEntities200ResponseEntitiesInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeExtractEntities200ResponseEntitiesInnerPairs : ExtractEntities200ResponseEntitiesInner -> List EncodedField
encodeExtractEntities200ResponseEntitiesInnerPairs model =
    let
        pairs =
            [ maybeEncode "start_position" Json.Encode.int model.startPosition
            , maybeEncodeNullable "image" Json.Encode.string model.image
            , maybeEncodeNullable "type" Json.Encode.string model.type_
            , maybeEncodeNullable "value" Json.Encode.string model.value
            , maybeEncode "end_position" Json.Encode.int model.endPosition
            ]
    in
    pairs


encodeExtractNews200Response : ExtractNews200Response -> Json.Encode.Value
encodeExtractNews200Response =
    encodeObject << encodeExtractNews200ResponsePairs


encodeExtractNews200ResponseWithTag : ( String, String ) -> ExtractNews200Response -> Json.Encode.Value
encodeExtractNews200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeExtractNews200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeExtractNews200ResponsePairs : ExtractNews200Response -> List EncodedField
encodeExtractNews200ResponsePairs model =
    let
        pairs =
            [ maybeEncodeNullable "title" Json.Encode.string model.title
            , maybeEncodeNullable "text" Json.Encode.string model.text
            , maybeEncodeNullable "url" Json.Encode.string model.url
            , maybeEncodeNullable "image" Json.Encode.string model.image
            , maybeEncodeNullable "publish_date" Json.Encode.string model.publishDate
            , maybeEncodeNullable "author" Json.Encode.string model.author
            , maybeEncodeNullable "language" Json.Encode.string model.language
            , maybeEncodeNullable "source_country" Json.Encode.string model.sourceCountry
            , maybeEncode "sentiment" Json.Encode.float model.sentiment
            ]
    in
    pairs


encodeExtractPublishDate200Response : ExtractPublishDate200Response -> Json.Encode.Value
encodeExtractPublishDate200Response =
    encodeObject << encodeExtractPublishDate200ResponsePairs


encodeExtractPublishDate200ResponseWithTag : ( String, String ) -> ExtractPublishDate200Response -> Json.Encode.Value
encodeExtractPublishDate200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeExtractPublishDate200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeExtractPublishDate200ResponsePairs : ExtractPublishDate200Response -> List EncodedField
encodeExtractPublishDate200ResponsePairs model =
    let
        pairs =
            [ maybeEncodeNullable "publish_date" Json.Encode.string model.publishDate
            ]
    in
    pairs


encodeFindSimilarBooks200Response : FindSimilarBooks200Response -> Json.Encode.Value
encodeFindSimilarBooks200Response =
    encodeObject << encodeFindSimilarBooks200ResponsePairs


encodeFindSimilarBooks200ResponseWithTag : ( String, String ) -> FindSimilarBooks200Response -> Json.Encode.Value
encodeFindSimilarBooks200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeFindSimilarBooks200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeFindSimilarBooks200ResponsePairs : FindSimilarBooks200Response -> List EncodedField
encodeFindSimilarBooks200ResponsePairs model =
    let
        pairs =
            [ maybeEncode "similar_books" (Json.Encode.list encodeSearchBooks200ResponseBooksInner) model.similarBooks
            ]
    in
    pairs


encodeGenerateNonsenseWord200Response : GenerateNonsenseWord200Response -> Json.Encode.Value
encodeGenerateNonsenseWord200Response =
    encodeObject << encodeGenerateNonsenseWord200ResponsePairs


encodeGenerateNonsenseWord200ResponseWithTag : ( String, String ) -> GenerateNonsenseWord200Response -> Json.Encode.Value
encodeGenerateNonsenseWord200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeGenerateNonsenseWord200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeGenerateNonsenseWord200ResponsePairs : GenerateNonsenseWord200Response -> List EncodedField
encodeGenerateNonsenseWord200ResponsePairs model =
    let
        pairs =
            [ maybeEncodeNullable "word" Json.Encode.string model.word
            , maybeEncode "rating" Json.Encode.float model.rating
            ]
    in
    pairs


encodeListWordSynonyms200Response : ListWordSynonyms200Response -> Json.Encode.Value
encodeListWordSynonyms200Response =
    encodeObject << encodeListWordSynonyms200ResponsePairs


encodeListWordSynonyms200ResponseWithTag : ( String, String ) -> ListWordSynonyms200Response -> Json.Encode.Value
encodeListWordSynonyms200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeListWordSynonyms200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeListWordSynonyms200ResponsePairs : ListWordSynonyms200Response -> List EncodedField
encodeListWordSynonyms200ResponsePairs model =
    let
        pairs =
            [ maybeEncode "synonyms" (Json.Encode.list Json.Encode.string) model.synonyms
            ]
    in
    pairs


encodePartOfSpeechTagging200Response : PartOfSpeechTagging200Response -> Json.Encode.Value
encodePartOfSpeechTagging200Response =
    encodeObject << encodePartOfSpeechTagging200ResponsePairs


encodePartOfSpeechTagging200ResponseWithTag : ( String, String ) -> PartOfSpeechTagging200Response -> Json.Encode.Value
encodePartOfSpeechTagging200ResponseWithTag (tagField, tag) model =
    encodeObject (encodePartOfSpeechTagging200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodePartOfSpeechTagging200ResponsePairs : PartOfSpeechTagging200Response -> List EncodedField
encodePartOfSpeechTagging200ResponsePairs model =
    let
        pairs =
            [ maybeEncodeNullable "tagged_text" Json.Encode.string model.taggedText
            ]
    in
    pairs


encodePluralizeWord200Response : PluralizeWord200Response -> Json.Encode.Value
encodePluralizeWord200Response =
    encodeObject << encodePluralizeWord200ResponsePairs


encodePluralizeWord200ResponseWithTag : ( String, String ) -> PluralizeWord200Response -> Json.Encode.Value
encodePluralizeWord200ResponseWithTag (tagField, tag) model =
    encodeObject (encodePluralizeWord200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodePluralizeWord200ResponsePairs : PluralizeWord200Response -> List EncodedField
encodePluralizeWord200ResponsePairs model =
    let
        pairs =
            [ maybeEncodeNullable "original" Json.Encode.string model.original
            , maybeEncodeNullable "plural" Json.Encode.string model.plural
            ]
    in
    pairs


encodeRandomMeme200Response : RandomMeme200Response -> Json.Encode.Value
encodeRandomMeme200Response =
    encodeObject << encodeRandomMeme200ResponsePairs


encodeRandomMeme200ResponseWithTag : ( String, String ) -> RandomMeme200Response -> Json.Encode.Value
encodeRandomMeme200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeRandomMeme200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRandomMeme200ResponsePairs : RandomMeme200Response -> List EncodedField
encodeRandomMeme200ResponsePairs model =
    let
        pairs =
            [ maybeEncodeNullable "description" Json.Encode.string model.description
            , maybeEncodeNullable "url" Json.Encode.string model.url
            , maybeEncodeNullable "type" Json.Encode.string model.type_
            , maybeEncode "width" Json.Encode.int model.width
            , maybeEncode "height" Json.Encode.int model.height
            , maybeEncode "ratio" Json.Encode.float model.ratio
            ]
    in
    pairs


encodeRandomPoem200Response : RandomPoem200Response -> Json.Encode.Value
encodeRandomPoem200Response =
    encodeObject << encodeRandomPoem200ResponsePairs


encodeRandomPoem200ResponseWithTag : ( String, String ) -> RandomPoem200Response -> Json.Encode.Value
encodeRandomPoem200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeRandomPoem200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRandomPoem200ResponsePairs : RandomPoem200Response -> List EncodedField
encodeRandomPoem200ResponsePairs model =
    let
        pairs =
            [ maybeEncodeNullable "title" Json.Encode.string model.title
            , maybeEncodeNullable "author" Json.Encode.string model.author
            , maybeEncodeNullable "poem" Json.Encode.string model.poem
            ]
    in
    pairs


encodeRandomQuote200Response : RandomQuote200Response -> Json.Encode.Value
encodeRandomQuote200Response =
    encodeObject << encodeRandomQuote200ResponsePairs


encodeRandomQuote200ResponseWithTag : ( String, String ) -> RandomQuote200Response -> Json.Encode.Value
encodeRandomQuote200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeRandomQuote200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRandomQuote200ResponsePairs : RandomQuote200Response -> List EncodedField
encodeRandomQuote200ResponsePairs model =
    let
        pairs =
            [ maybeEncodeNullable "author" Json.Encode.string model.author
            , maybeEncodeNullable "quote" Json.Encode.string model.quote
            ]
    in
    pairs


encodeRandomTrivia200Response : RandomTrivia200Response -> Json.Encode.Value
encodeRandomTrivia200Response =
    encodeObject << encodeRandomTrivia200ResponsePairs


encodeRandomTrivia200ResponseWithTag : ( String, String ) -> RandomTrivia200Response -> Json.Encode.Value
encodeRandomTrivia200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeRandomTrivia200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRandomTrivia200ResponsePairs : RandomTrivia200Response -> List EncodedField
encodeRandomTrivia200ResponsePairs model =
    let
        pairs =
            [ maybeEncodeNullable "trivia" Json.Encode.string model.trivia
            ]
    in
    pairs


encodeReadKeyValueFromStore200Response : ReadKeyValueFromStore200Response -> Json.Encode.Value
encodeReadKeyValueFromStore200Response =
    encodeObject << encodeReadKeyValueFromStore200ResponsePairs


encodeReadKeyValueFromStore200ResponseWithTag : ( String, String ) -> ReadKeyValueFromStore200Response -> Json.Encode.Value
encodeReadKeyValueFromStore200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeReadKeyValueFromStore200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeReadKeyValueFromStore200ResponsePairs : ReadKeyValueFromStore200Response -> List EncodedField
encodeReadKeyValueFromStore200ResponsePairs model =
    let
        pairs =
            [ maybeEncodeNullable "value" Json.Encode.string model.value
            ]
    in
    pairs


encodeRetrieveRecipeInformation200Response : RetrieveRecipeInformation200Response -> Json.Encode.Value
encodeRetrieveRecipeInformation200Response =
    encodeObject << encodeRetrieveRecipeInformation200ResponsePairs


encodeRetrieveRecipeInformation200ResponseWithTag : ( String, String ) -> RetrieveRecipeInformation200Response -> Json.Encode.Value
encodeRetrieveRecipeInformation200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeRetrieveRecipeInformation200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRetrieveRecipeInformation200ResponsePairs : RetrieveRecipeInformation200Response -> List EncodedField
encodeRetrieveRecipeInformation200ResponsePairs model =
    let
        pairs =
            [ maybeEncode "id" Json.Encode.int model.id
            , maybeEncodeNullable "title" Json.Encode.string model.title
            , maybeEncode "servings" Json.Encode.int model.servings
            , maybeEncode "images" (Json.Encode.list Json.Encode.string) model.images
            , maybeEncode "dietary_properties" encodeRetrieveRecipeInformation200ResponseDietaryProperties model.dietaryProperties
            , maybeEncode "price_per_serving" Json.Encode.float model.pricePerServing
            , maybeEncode "times" encodeRetrieveRecipeInformation200ResponseTimes model.times
            , maybeEncode "nutrition" encodeRetrieveRecipeInformation200ResponseNutrition model.nutrition
            , maybeEncode "taste" encodeRetrieveRecipeInformation200ResponseTaste model.taste
            , maybeEncode "cuisines" (Json.Encode.list Json.Encode.string) model.cuisines
            , maybeEncode "meal_types" (Json.Encode.list Json.Encode.string) model.mealTypes
            , maybeEncode "occasions" (Json.Encode.list Json.Encode.string) model.occasions
            , maybeEncode "ingredients" (Json.Encode.list encodeRetrieveRecipeInformation200ResponseIngredientsInner) model.ingredients
            , maybeEncode "instructions" (Json.Encode.list encodeRetrieveRecipeInformation200ResponseInstructionsInner) model.instructions
            , maybeEncode "credits" encodeRetrieveRecipeInformation200ResponseCredits model.credits
            , maybeEncode "scores" encodeRetrieveRecipeInformation200ResponseScores model.scores
            ]
    in
    pairs


encodeRetrieveRecipeInformation200ResponseCredits : RetrieveRecipeInformation200ResponseCredits -> Json.Encode.Value
encodeRetrieveRecipeInformation200ResponseCredits =
    encodeObject << encodeRetrieveRecipeInformation200ResponseCreditsPairs


encodeRetrieveRecipeInformation200ResponseCreditsWithTag : ( String, String ) -> RetrieveRecipeInformation200ResponseCredits -> Json.Encode.Value
encodeRetrieveRecipeInformation200ResponseCreditsWithTag (tagField, tag) model =
    encodeObject (encodeRetrieveRecipeInformation200ResponseCreditsPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRetrieveRecipeInformation200ResponseCreditsPairs : RetrieveRecipeInformation200ResponseCredits -> List EncodedField
encodeRetrieveRecipeInformation200ResponseCreditsPairs model =
    let
        pairs =
            [ maybeEncodeNullable "license" Json.Encode.string model.license
            , maybeEncodeNullable "text" Json.Encode.string model.text
            , maybeEncodeNullable "source_name" Json.Encode.string model.sourceName
            , maybeEncodeNullable "source_url" Json.Encode.string model.sourceUrl
            ]
    in
    pairs


encodeRetrieveRecipeInformation200ResponseDietaryProperties : RetrieveRecipeInformation200ResponseDietaryProperties -> Json.Encode.Value
encodeRetrieveRecipeInformation200ResponseDietaryProperties =
    encodeObject << encodeRetrieveRecipeInformation200ResponseDietaryPropertiesPairs


encodeRetrieveRecipeInformation200ResponseDietaryPropertiesWithTag : ( String, String ) -> RetrieveRecipeInformation200ResponseDietaryProperties -> Json.Encode.Value
encodeRetrieveRecipeInformation200ResponseDietaryPropertiesWithTag (tagField, tag) model =
    encodeObject (encodeRetrieveRecipeInformation200ResponseDietaryPropertiesPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRetrieveRecipeInformation200ResponseDietaryPropertiesPairs : RetrieveRecipeInformation200ResponseDietaryProperties -> List EncodedField
encodeRetrieveRecipeInformation200ResponseDietaryPropertiesPairs model =
    let
        pairs =
            [ maybeEncode "low_fodmap" Json.Encode.bool model.lowFodmap
            , maybeEncode "vegetarian" Json.Encode.bool model.vegetarian
            , maybeEncode "vegan" Json.Encode.bool model.vegan
            , maybeEncode "gluten_free" Json.Encode.bool model.glutenFree
            , maybeEncode "dairy_free" Json.Encode.bool model.dairyFree
            , maybeEncodeNullable "gaps" Json.Encode.string model.gaps
            , maybeEncode "diets" (Json.Encode.list Json.Encode.string) model.diets
            ]
    in
    pairs


encodeRetrieveRecipeInformation200ResponseIngredientsInner : RetrieveRecipeInformation200ResponseIngredientsInner -> Json.Encode.Value
encodeRetrieveRecipeInformation200ResponseIngredientsInner =
    encodeObject << encodeRetrieveRecipeInformation200ResponseIngredientsInnerPairs


encodeRetrieveRecipeInformation200ResponseIngredientsInnerWithTag : ( String, String ) -> RetrieveRecipeInformation200ResponseIngredientsInner -> Json.Encode.Value
encodeRetrieveRecipeInformation200ResponseIngredientsInnerWithTag (tagField, tag) model =
    encodeObject (encodeRetrieveRecipeInformation200ResponseIngredientsInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRetrieveRecipeInformation200ResponseIngredientsInnerPairs : RetrieveRecipeInformation200ResponseIngredientsInner -> List EncodedField
encodeRetrieveRecipeInformation200ResponseIngredientsInnerPairs model =
    let
        pairs =
            [ maybeEncodeNullable "image" Json.Encode.string model.image
            , maybeEncodeNullable "name_clean" Json.Encode.string model.nameClean
            , maybeEncode "amount" Json.Encode.float model.amount
            , maybeEncodeNullable "unit" Json.Encode.string model.unit
            , maybeEncode "measures" encodeRetrieveRecipeInformation200ResponseIngredientsInnerMeasures model.measures
            , maybeEncodeNullable "original" Json.Encode.string model.original
            , maybeEncode "meta" (Json.Encode.list Json.Encode.string) model.meta
            , maybeEncodeNullable "original_name" Json.Encode.string model.originalName
            , maybeEncodeNullable "name" Json.Encode.string model.name
            , maybeEncode "id" Json.Encode.int model.id
            , maybeEncodeNullable "aisle" Json.Encode.string model.aisle
            , maybeEncodeNullable "consistency" Json.Encode.string model.consistency
            ]
    in
    pairs


encodeRetrieveRecipeInformation200ResponseIngredientsInnerMeasures : RetrieveRecipeInformation200ResponseIngredientsInnerMeasures -> Json.Encode.Value
encodeRetrieveRecipeInformation200ResponseIngredientsInnerMeasures =
    encodeObject << encodeRetrieveRecipeInformation200ResponseIngredientsInnerMeasuresPairs


encodeRetrieveRecipeInformation200ResponseIngredientsInnerMeasuresWithTag : ( String, String ) -> RetrieveRecipeInformation200ResponseIngredientsInnerMeasures -> Json.Encode.Value
encodeRetrieveRecipeInformation200ResponseIngredientsInnerMeasuresWithTag (tagField, tag) model =
    encodeObject (encodeRetrieveRecipeInformation200ResponseIngredientsInnerMeasuresPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRetrieveRecipeInformation200ResponseIngredientsInnerMeasuresPairs : RetrieveRecipeInformation200ResponseIngredientsInnerMeasures -> List EncodedField
encodeRetrieveRecipeInformation200ResponseIngredientsInnerMeasuresPairs model =
    let
        pairs =
            [ maybeEncode "metric" encodeRetrieveRecipeInformation200ResponseIngredientsInnerMeasuresMetric model.metric
            , maybeEncode "us" encodeRetrieveRecipeInformation200ResponseIngredientsInnerMeasuresMetric model.us
            ]
    in
    pairs


encodeRetrieveRecipeInformation200ResponseIngredientsInnerMeasuresMetric : RetrieveRecipeInformation200ResponseIngredientsInnerMeasuresMetric -> Json.Encode.Value
encodeRetrieveRecipeInformation200ResponseIngredientsInnerMeasuresMetric =
    encodeObject << encodeRetrieveRecipeInformation200ResponseIngredientsInnerMeasuresMetricPairs


encodeRetrieveRecipeInformation200ResponseIngredientsInnerMeasuresMetricWithTag : ( String, String ) -> RetrieveRecipeInformation200ResponseIngredientsInnerMeasuresMetric -> Json.Encode.Value
encodeRetrieveRecipeInformation200ResponseIngredientsInnerMeasuresMetricWithTag (tagField, tag) model =
    encodeObject (encodeRetrieveRecipeInformation200ResponseIngredientsInnerMeasuresMetricPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRetrieveRecipeInformation200ResponseIngredientsInnerMeasuresMetricPairs : RetrieveRecipeInformation200ResponseIngredientsInnerMeasuresMetric -> List EncodedField
encodeRetrieveRecipeInformation200ResponseIngredientsInnerMeasuresMetricPairs model =
    let
        pairs =
            [ maybeEncodeNullable "unit_short" Json.Encode.string model.unitShort
            , maybeEncode "amount" Json.Encode.float model.amount
            , maybeEncodeNullable "unit_long" Json.Encode.string model.unitLong
            ]
    in
    pairs


encodeRetrieveRecipeInformation200ResponseInstructionsInner : RetrieveRecipeInformation200ResponseInstructionsInner -> Json.Encode.Value
encodeRetrieveRecipeInformation200ResponseInstructionsInner =
    encodeObject << encodeRetrieveRecipeInformation200ResponseInstructionsInnerPairs


encodeRetrieveRecipeInformation200ResponseInstructionsInnerWithTag : ( String, String ) -> RetrieveRecipeInformation200ResponseInstructionsInner -> Json.Encode.Value
encodeRetrieveRecipeInformation200ResponseInstructionsInnerWithTag (tagField, tag) model =
    encodeObject (encodeRetrieveRecipeInformation200ResponseInstructionsInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRetrieveRecipeInformation200ResponseInstructionsInnerPairs : RetrieveRecipeInformation200ResponseInstructionsInner -> List EncodedField
encodeRetrieveRecipeInformation200ResponseInstructionsInnerPairs model =
    let
        pairs =
            [ maybeEncodeNullable "name" Json.Encode.string model.name
            , maybeEncode "steps" (Json.Encode.list encodeRetrieveRecipeInformation200ResponseInstructionsInnerStepsInner) model.steps
            ]
    in
    pairs


encodeRetrieveRecipeInformation200ResponseInstructionsInnerStepsInner : RetrieveRecipeInformation200ResponseInstructionsInnerStepsInner -> Json.Encode.Value
encodeRetrieveRecipeInformation200ResponseInstructionsInnerStepsInner =
    encodeObject << encodeRetrieveRecipeInformation200ResponseInstructionsInnerStepsInnerPairs


encodeRetrieveRecipeInformation200ResponseInstructionsInnerStepsInnerWithTag : ( String, String ) -> RetrieveRecipeInformation200ResponseInstructionsInnerStepsInner -> Json.Encode.Value
encodeRetrieveRecipeInformation200ResponseInstructionsInnerStepsInnerWithTag (tagField, tag) model =
    encodeObject (encodeRetrieveRecipeInformation200ResponseInstructionsInnerStepsInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRetrieveRecipeInformation200ResponseInstructionsInnerStepsInnerPairs : RetrieveRecipeInformation200ResponseInstructionsInnerStepsInner -> List EncodedField
encodeRetrieveRecipeInformation200ResponseInstructionsInnerStepsInnerPairs model =
    let
        pairs =
            [ maybeEncode "number" Json.Encode.int model.number
            , maybeEncode "ingredients" (Json.Encode.list encodeRetrieveRecipeInformation200ResponseInstructionsInnerStepsInnerIngredientsInner) model.ingredients
            , maybeEncode "equipment" (Json.Encode.list encodeRetrieveRecipeInformation200ResponseInstructionsInnerStepsInnerIngredientsInner) model.equipment
            , maybeEncodeNullable "step" Json.Encode.string model.step
            ]
    in
    pairs


encodeRetrieveRecipeInformation200ResponseInstructionsInnerStepsInnerIngredientsInner : RetrieveRecipeInformation200ResponseInstructionsInnerStepsInnerIngredientsInner -> Json.Encode.Value
encodeRetrieveRecipeInformation200ResponseInstructionsInnerStepsInnerIngredientsInner =
    encodeObject << encodeRetrieveRecipeInformation200ResponseInstructionsInnerStepsInnerIngredientsInnerPairs


encodeRetrieveRecipeInformation200ResponseInstructionsInnerStepsInnerIngredientsInnerWithTag : ( String, String ) -> RetrieveRecipeInformation200ResponseInstructionsInnerStepsInnerIngredientsInner -> Json.Encode.Value
encodeRetrieveRecipeInformation200ResponseInstructionsInnerStepsInnerIngredientsInnerWithTag (tagField, tag) model =
    encodeObject (encodeRetrieveRecipeInformation200ResponseInstructionsInnerStepsInnerIngredientsInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRetrieveRecipeInformation200ResponseInstructionsInnerStepsInnerIngredientsInnerPairs : RetrieveRecipeInformation200ResponseInstructionsInnerStepsInnerIngredientsInner -> List EncodedField
encodeRetrieveRecipeInformation200ResponseInstructionsInnerStepsInnerIngredientsInnerPairs model =
    let
        pairs =
            [ maybeEncodeNullable "name" Json.Encode.string model.name
            , maybeEncodeNullable "image" Json.Encode.string model.image
            , maybeEncode "id" Json.Encode.int model.id
            ]
    in
    pairs


encodeRetrieveRecipeInformation200ResponseNutrition : RetrieveRecipeInformation200ResponseNutrition -> Json.Encode.Value
encodeRetrieveRecipeInformation200ResponseNutrition =
    encodeObject << encodeRetrieveRecipeInformation200ResponseNutritionPairs


encodeRetrieveRecipeInformation200ResponseNutritionWithTag : ( String, String ) -> RetrieveRecipeInformation200ResponseNutrition -> Json.Encode.Value
encodeRetrieveRecipeInformation200ResponseNutritionWithTag (tagField, tag) model =
    encodeObject (encodeRetrieveRecipeInformation200ResponseNutritionPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRetrieveRecipeInformation200ResponseNutritionPairs : RetrieveRecipeInformation200ResponseNutrition -> List EncodedField
encodeRetrieveRecipeInformation200ResponseNutritionPairs model =
    let
        pairs =
            [ maybeEncode "weight_per_serving" encodeRetrieveRecipeInformation200ResponseNutritionWeightPerServing model.weightPerServing
            , maybeEncode "caloric_breakdown" encodeRetrieveRecipeInformation200ResponseNutritionCaloricBreakdown model.caloricBreakdown
            , maybeEncode "flavonoids" (Json.Encode.list encodeRetrieveRecipeInformation200ResponseNutritionFlavonoidsInner) model.flavonoids
            , maybeEncode "ingredient_breakdown" (Json.Encode.list encodeRetrieveRecipeInformation200ResponseNutritionIngredientBreakdownInner) model.ingredientBreakdown
            , maybeEncode "properties" (Json.Encode.list encodeSearchRecipes200ResponseRecipesInnerNutritionNutrientsInner) model.properties
            , maybeEncode "nutrients" (Json.Encode.list encodeRetrieveRecipeInformation200ResponseNutritionIngredientBreakdownInnerNutrientsInner) model.nutrients
            ]
    in
    pairs


encodeRetrieveRecipeInformation200ResponseNutritionCaloricBreakdown : RetrieveRecipeInformation200ResponseNutritionCaloricBreakdown -> Json.Encode.Value
encodeRetrieveRecipeInformation200ResponseNutritionCaloricBreakdown =
    encodeObject << encodeRetrieveRecipeInformation200ResponseNutritionCaloricBreakdownPairs


encodeRetrieveRecipeInformation200ResponseNutritionCaloricBreakdownWithTag : ( String, String ) -> RetrieveRecipeInformation200ResponseNutritionCaloricBreakdown -> Json.Encode.Value
encodeRetrieveRecipeInformation200ResponseNutritionCaloricBreakdownWithTag (tagField, tag) model =
    encodeObject (encodeRetrieveRecipeInformation200ResponseNutritionCaloricBreakdownPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRetrieveRecipeInformation200ResponseNutritionCaloricBreakdownPairs : RetrieveRecipeInformation200ResponseNutritionCaloricBreakdown -> List EncodedField
encodeRetrieveRecipeInformation200ResponseNutritionCaloricBreakdownPairs model =
    let
        pairs =
            [ maybeEncode "percent_fat" Json.Encode.float model.percentFat
            , maybeEncode "percent_carbs" Json.Encode.float model.percentCarbs
            , maybeEncode "percent_protein" Json.Encode.float model.percentProtein
            ]
    in
    pairs


encodeRetrieveRecipeInformation200ResponseNutritionFlavonoidsInner : RetrieveRecipeInformation200ResponseNutritionFlavonoidsInner -> Json.Encode.Value
encodeRetrieveRecipeInformation200ResponseNutritionFlavonoidsInner =
    encodeObject << encodeRetrieveRecipeInformation200ResponseNutritionFlavonoidsInnerPairs


encodeRetrieveRecipeInformation200ResponseNutritionFlavonoidsInnerWithTag : ( String, String ) -> RetrieveRecipeInformation200ResponseNutritionFlavonoidsInner -> Json.Encode.Value
encodeRetrieveRecipeInformation200ResponseNutritionFlavonoidsInnerWithTag (tagField, tag) model =
    encodeObject (encodeRetrieveRecipeInformation200ResponseNutritionFlavonoidsInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRetrieveRecipeInformation200ResponseNutritionFlavonoidsInnerPairs : RetrieveRecipeInformation200ResponseNutritionFlavonoidsInner -> List EncodedField
encodeRetrieveRecipeInformation200ResponseNutritionFlavonoidsInnerPairs model =
    let
        pairs =
            [ maybeEncodeNullable "name" Json.Encode.string model.name
            , maybeEncode "amount" Json.Encode.int model.amount
            , maybeEncodeNullable "unit" Json.Encode.string model.unit
            ]
    in
    pairs


encodeRetrieveRecipeInformation200ResponseNutritionIngredientBreakdownInner : RetrieveRecipeInformation200ResponseNutritionIngredientBreakdownInner -> Json.Encode.Value
encodeRetrieveRecipeInformation200ResponseNutritionIngredientBreakdownInner =
    encodeObject << encodeRetrieveRecipeInformation200ResponseNutritionIngredientBreakdownInnerPairs


encodeRetrieveRecipeInformation200ResponseNutritionIngredientBreakdownInnerWithTag : ( String, String ) -> RetrieveRecipeInformation200ResponseNutritionIngredientBreakdownInner -> Json.Encode.Value
encodeRetrieveRecipeInformation200ResponseNutritionIngredientBreakdownInnerWithTag (tagField, tag) model =
    encodeObject (encodeRetrieveRecipeInformation200ResponseNutritionIngredientBreakdownInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRetrieveRecipeInformation200ResponseNutritionIngredientBreakdownInnerPairs : RetrieveRecipeInformation200ResponseNutritionIngredientBreakdownInner -> List EncodedField
encodeRetrieveRecipeInformation200ResponseNutritionIngredientBreakdownInnerPairs model =
    let
        pairs =
            [ maybeEncodeNullable "name" Json.Encode.string model.name
            , maybeEncode "amount" Json.Encode.float model.amount
            , maybeEncodeNullable "unit" Json.Encode.string model.unit
            , maybeEncode "id" Json.Encode.int model.id
            , maybeEncode "nutrients" (Json.Encode.list encodeRetrieveRecipeInformation200ResponseNutritionIngredientBreakdownInnerNutrientsInner) model.nutrients
            ]
    in
    pairs


encodeRetrieveRecipeInformation200ResponseNutritionIngredientBreakdownInnerNutrientsInner : RetrieveRecipeInformation200ResponseNutritionIngredientBreakdownInnerNutrientsInner -> Json.Encode.Value
encodeRetrieveRecipeInformation200ResponseNutritionIngredientBreakdownInnerNutrientsInner =
    encodeObject << encodeRetrieveRecipeInformation200ResponseNutritionIngredientBreakdownInnerNutrientsInnerPairs


encodeRetrieveRecipeInformation200ResponseNutritionIngredientBreakdownInnerNutrientsInnerWithTag : ( String, String ) -> RetrieveRecipeInformation200ResponseNutritionIngredientBreakdownInnerNutrientsInner -> Json.Encode.Value
encodeRetrieveRecipeInformation200ResponseNutritionIngredientBreakdownInnerNutrientsInnerWithTag (tagField, tag) model =
    encodeObject (encodeRetrieveRecipeInformation200ResponseNutritionIngredientBreakdownInnerNutrientsInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRetrieveRecipeInformation200ResponseNutritionIngredientBreakdownInnerNutrientsInnerPairs : RetrieveRecipeInformation200ResponseNutritionIngredientBreakdownInnerNutrientsInner -> List EncodedField
encodeRetrieveRecipeInformation200ResponseNutritionIngredientBreakdownInnerNutrientsInnerPairs model =
    let
        pairs =
            [ maybeEncodeNullable "name" Json.Encode.string model.name
            , maybeEncode "percent_of_daily_needs" Json.Encode.float model.percentOfDailyNeeds
            , maybeEncode "amount" Json.Encode.float model.amount
            , maybeEncodeNullable "unit" Json.Encode.string model.unit
            ]
    in
    pairs


encodeRetrieveRecipeInformation200ResponseNutritionWeightPerServing : RetrieveRecipeInformation200ResponseNutritionWeightPerServing -> Json.Encode.Value
encodeRetrieveRecipeInformation200ResponseNutritionWeightPerServing =
    encodeObject << encodeRetrieveRecipeInformation200ResponseNutritionWeightPerServingPairs


encodeRetrieveRecipeInformation200ResponseNutritionWeightPerServingWithTag : ( String, String ) -> RetrieveRecipeInformation200ResponseNutritionWeightPerServing -> Json.Encode.Value
encodeRetrieveRecipeInformation200ResponseNutritionWeightPerServingWithTag (tagField, tag) model =
    encodeObject (encodeRetrieveRecipeInformation200ResponseNutritionWeightPerServingPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRetrieveRecipeInformation200ResponseNutritionWeightPerServingPairs : RetrieveRecipeInformation200ResponseNutritionWeightPerServing -> List EncodedField
encodeRetrieveRecipeInformation200ResponseNutritionWeightPerServingPairs model =
    let
        pairs =
            [ maybeEncode "amount" Json.Encode.int model.amount
            , maybeEncodeNullable "unit" Json.Encode.string model.unit
            ]
    in
    pairs


encodeRetrieveRecipeInformation200ResponseScores : RetrieveRecipeInformation200ResponseScores -> Json.Encode.Value
encodeRetrieveRecipeInformation200ResponseScores =
    encodeObject << encodeRetrieveRecipeInformation200ResponseScoresPairs


encodeRetrieveRecipeInformation200ResponseScoresWithTag : ( String, String ) -> RetrieveRecipeInformation200ResponseScores -> Json.Encode.Value
encodeRetrieveRecipeInformation200ResponseScoresWithTag (tagField, tag) model =
    encodeObject (encodeRetrieveRecipeInformation200ResponseScoresPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRetrieveRecipeInformation200ResponseScoresPairs : RetrieveRecipeInformation200ResponseScores -> List EncodedField
encodeRetrieveRecipeInformation200ResponseScoresPairs model =
    let
        pairs =
            [ maybeEncode "meta_score" Json.Encode.float model.metaScore
            , maybeEncode "weight_watcher_smart_points" Json.Encode.int model.weightWatcherSmartPoints
            , maybeEncode "health_score" Json.Encode.int model.healthScore
            ]
    in
    pairs


encodeRetrieveRecipeInformation200ResponseTaste : RetrieveRecipeInformation200ResponseTaste -> Json.Encode.Value
encodeRetrieveRecipeInformation200ResponseTaste =
    encodeObject << encodeRetrieveRecipeInformation200ResponseTastePairs


encodeRetrieveRecipeInformation200ResponseTasteWithTag : ( String, String ) -> RetrieveRecipeInformation200ResponseTaste -> Json.Encode.Value
encodeRetrieveRecipeInformation200ResponseTasteWithTag (tagField, tag) model =
    encodeObject (encodeRetrieveRecipeInformation200ResponseTastePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRetrieveRecipeInformation200ResponseTastePairs : RetrieveRecipeInformation200ResponseTaste -> List EncodedField
encodeRetrieveRecipeInformation200ResponseTastePairs model =
    let
        pairs =
            [ maybeEncode "fattiness" Json.Encode.float model.fattiness
            , maybeEncode "spiciness" Json.Encode.int model.spiciness
            , maybeEncode "saltiness" Json.Encode.int model.saltiness
            , maybeEncode "bitterness" Json.Encode.float model.bitterness
            , maybeEncode "savoriness" Json.Encode.float model.savoriness
            , maybeEncode "sweetness" Json.Encode.float model.sweetness
            , maybeEncode "sourness" Json.Encode.float model.sourness
            ]
    in
    pairs


encodeRetrieveRecipeInformation200ResponseTimes : RetrieveRecipeInformation200ResponseTimes -> Json.Encode.Value
encodeRetrieveRecipeInformation200ResponseTimes =
    encodeObject << encodeRetrieveRecipeInformation200ResponseTimesPairs


encodeRetrieveRecipeInformation200ResponseTimesWithTag : ( String, String ) -> RetrieveRecipeInformation200ResponseTimes -> Json.Encode.Value
encodeRetrieveRecipeInformation200ResponseTimesWithTag (tagField, tag) model =
    encodeObject (encodeRetrieveRecipeInformation200ResponseTimesPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeRetrieveRecipeInformation200ResponseTimesPairs : RetrieveRecipeInformation200ResponseTimes -> List EncodedField
encodeRetrieveRecipeInformation200ResponseTimesPairs model =
    let
        pairs =
            [ maybeEncode "total_minutes" Json.Encode.int model.totalMinutes
            ]
    in
    pairs


encodeScoreReadability200Response : ScoreReadability200Response -> Json.Encode.Value
encodeScoreReadability200Response =
    encodeObject << encodeScoreReadability200ResponsePairs


encodeScoreReadability200ResponseWithTag : ( String, String ) -> ScoreReadability200Response -> Json.Encode.Value
encodeScoreReadability200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeScoreReadability200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeScoreReadability200ResponsePairs : ScoreReadability200Response -> List EncodedField
encodeScoreReadability200ResponsePairs model =
    let
        pairs =
            [ maybeEncode "readability" encodeScoreText200ResponseReadability model.readability
            ]
    in
    pairs


encodeScoreText200Response : ScoreText200Response -> Json.Encode.Value
encodeScoreText200Response =
    encodeObject << encodeScoreText200ResponsePairs


encodeScoreText200ResponseWithTag : ( String, String ) -> ScoreText200Response -> Json.Encode.Value
encodeScoreText200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeScoreText200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeScoreText200ResponsePairs : ScoreText200Response -> List EncodedField
encodeScoreText200ResponsePairs model =
    let
        pairs =
            [ maybeEncode "number_of_words" Json.Encode.int model.numberOfWords
            , maybeEncode "number_of_sentences" Json.Encode.int model.numberOfSentences
            , maybeEncode "readability" encodeScoreText200ResponseReadability model.readability
            , maybeEncode "skimmability" encodeScoreText200ResponseSkimmability model.skimmability
            , maybeEncode "interestingness" encodeScoreText200ResponseInterestingness model.interestingness
            , maybeEncode "style" encodeScoreText200ResponseStyle model.style
            , maybeEncode "total_score" Json.Encode.float model.totalScore
            ]
    in
    pairs


encodeScoreText200ResponseInterestingness : ScoreText200ResponseInterestingness -> Json.Encode.Value
encodeScoreText200ResponseInterestingness =
    encodeObject << encodeScoreText200ResponseInterestingnessPairs


encodeScoreText200ResponseInterestingnessWithTag : ( String, String ) -> ScoreText200ResponseInterestingness -> Json.Encode.Value
encodeScoreText200ResponseInterestingnessWithTag (tagField, tag) model =
    encodeObject (encodeScoreText200ResponseInterestingnessPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeScoreText200ResponseInterestingnessPairs : ScoreText200ResponseInterestingness -> List EncodedField
encodeScoreText200ResponseInterestingnessPairs model =
    let
        pairs =
            [ maybeEncode "mainscores" encodeScoreText200ResponseSkimmabilityMainscores model.mainscores
            , maybeEncode "subscores" encodeScoreText200ResponseInterestingnessSubscores model.subscores
            ]
    in
    pairs


encodeScoreText200ResponseInterestingnessSubscores : ScoreText200ResponseInterestingnessSubscores -> Json.Encode.Value
encodeScoreText200ResponseInterestingnessSubscores =
    encodeObject << encodeScoreText200ResponseInterestingnessSubscoresPairs


encodeScoreText200ResponseInterestingnessSubscoresWithTag : ( String, String ) -> ScoreText200ResponseInterestingnessSubscores -> Json.Encode.Value
encodeScoreText200ResponseInterestingnessSubscoresWithTag (tagField, tag) model =
    encodeObject (encodeScoreText200ResponseInterestingnessSubscoresPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeScoreText200ResponseInterestingnessSubscoresPairs : ScoreText200ResponseInterestingnessSubscores -> List EncodedField
encodeScoreText200ResponseInterestingnessSubscoresPairs model =
    let
        pairs =
            [ maybeEncode "title_rating_score" (Json.Encode.list Json.Encode.int) model.titleRatingScore
            , maybeEncode "quote_score" (Json.Encode.list Json.Encode.int) model.quoteScore
            , maybeEncode "length_score" (Json.Encode.list Json.Encode.int) model.lengthScore
            , maybeEncode "link_score" (Json.Encode.list Json.Encode.int) model.linkScore
            , maybeEncode "google_hits_score" (Json.Encode.list Json.Encode.int) model.googleHitsScore
            ]
    in
    pairs


encodeScoreText200ResponseReadability : ScoreText200ResponseReadability -> Json.Encode.Value
encodeScoreText200ResponseReadability =
    encodeObject << encodeScoreText200ResponseReadabilityPairs


encodeScoreText200ResponseReadabilityWithTag : ( String, String ) -> ScoreText200ResponseReadability -> Json.Encode.Value
encodeScoreText200ResponseReadabilityWithTag (tagField, tag) model =
    encodeObject (encodeScoreText200ResponseReadabilityPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeScoreText200ResponseReadabilityPairs : ScoreText200ResponseReadability -> List EncodedField
encodeScoreText200ResponseReadabilityPairs model =
    let
        pairs =
            [ maybeEncode "mainscores" encodeScoreText200ResponseReadabilityMainscores model.mainscores
            , maybeEncode "subscores" encodeScoreText200ResponseReadabilitySubscores model.subscores
            ]
    in
    pairs


encodeScoreText200ResponseReadabilityMainscores : ScoreText200ResponseReadabilityMainscores -> Json.Encode.Value
encodeScoreText200ResponseReadabilityMainscores =
    encodeObject << encodeScoreText200ResponseReadabilityMainscoresPairs


encodeScoreText200ResponseReadabilityMainscoresWithTag : ( String, String ) -> ScoreText200ResponseReadabilityMainscores -> Json.Encode.Value
encodeScoreText200ResponseReadabilityMainscoresWithTag (tagField, tag) model =
    encodeObject (encodeScoreText200ResponseReadabilityMainscoresPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeScoreText200ResponseReadabilityMainscoresPairs : ScoreText200ResponseReadabilityMainscores -> List EncodedField
encodeScoreText200ResponseReadabilityMainscoresPairs model =
    let
        pairs =
            [ maybeEncode "total_possible" Json.Encode.int model.totalPossible
            , maybeEncode "total" Json.Encode.int model.total
            ]
    in
    pairs


encodeScoreText200ResponseReadabilitySubscores : ScoreText200ResponseReadabilitySubscores -> Json.Encode.Value
encodeScoreText200ResponseReadabilitySubscores =
    encodeObject << encodeScoreText200ResponseReadabilitySubscoresPairs


encodeScoreText200ResponseReadabilitySubscoresWithTag : ( String, String ) -> ScoreText200ResponseReadabilitySubscores -> Json.Encode.Value
encodeScoreText200ResponseReadabilitySubscoresWithTag (tagField, tag) model =
    encodeObject (encodeScoreText200ResponseReadabilitySubscoresPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeScoreText200ResponseReadabilitySubscoresPairs : ScoreText200ResponseReadabilitySubscores -> List EncodedField
encodeScoreText200ResponseReadabilitySubscoresPairs model =
    let
        pairs =
            [ maybeEncode "reading_time_seconds" Json.Encode.int model.readingTimeSeconds
            , maybeEncode "forcast" Json.Encode.float model.forcast
            , maybeEncode "flesch" Json.Encode.float model.flesch
            , maybeEncode "smog" Json.Encode.float model.smog
            , maybeEncode "ari" Json.Encode.float model.ari
            , maybeEncode "lix" Json.Encode.float model.lix
            , maybeEncode "coleman_liau" Json.Encode.float model.colemanLiau
            , maybeEncode "kincaid" Json.Encode.float model.kincaid
            , maybeEncode "fog" Json.Encode.float model.fog
            ]
    in
    pairs


encodeScoreText200ResponseSkimmability : ScoreText200ResponseSkimmability -> Json.Encode.Value
encodeScoreText200ResponseSkimmability =
    encodeObject << encodeScoreText200ResponseSkimmabilityPairs


encodeScoreText200ResponseSkimmabilityWithTag : ( String, String ) -> ScoreText200ResponseSkimmability -> Json.Encode.Value
encodeScoreText200ResponseSkimmabilityWithTag (tagField, tag) model =
    encodeObject (encodeScoreText200ResponseSkimmabilityPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeScoreText200ResponseSkimmabilityPairs : ScoreText200ResponseSkimmability -> List EncodedField
encodeScoreText200ResponseSkimmabilityPairs model =
    let
        pairs =
            [ maybeEncode "mainscores" encodeScoreText200ResponseSkimmabilityMainscores model.mainscores
            , maybeEncode "subscores" encodeScoreText200ResponseSkimmabilitySubscores model.subscores
            ]
    in
    pairs


encodeScoreText200ResponseSkimmabilityMainscores : ScoreText200ResponseSkimmabilityMainscores -> Json.Encode.Value
encodeScoreText200ResponseSkimmabilityMainscores =
    encodeObject << encodeScoreText200ResponseSkimmabilityMainscoresPairs


encodeScoreText200ResponseSkimmabilityMainscoresWithTag : ( String, String ) -> ScoreText200ResponseSkimmabilityMainscores -> Json.Encode.Value
encodeScoreText200ResponseSkimmabilityMainscoresWithTag (tagField, tag) model =
    encodeObject (encodeScoreText200ResponseSkimmabilityMainscoresPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeScoreText200ResponseSkimmabilityMainscoresPairs : ScoreText200ResponseSkimmabilityMainscores -> List EncodedField
encodeScoreText200ResponseSkimmabilityMainscoresPairs model =
    let
        pairs =
            [ maybeEncode "total_possible" Json.Encode.int model.totalPossible
            , maybeEncode "total" Json.Encode.float model.total
            ]
    in
    pairs


encodeScoreText200ResponseSkimmabilitySubscores : ScoreText200ResponseSkimmabilitySubscores -> Json.Encode.Value
encodeScoreText200ResponseSkimmabilitySubscores =
    encodeObject << encodeScoreText200ResponseSkimmabilitySubscoresPairs


encodeScoreText200ResponseSkimmabilitySubscoresWithTag : ( String, String ) -> ScoreText200ResponseSkimmabilitySubscores -> Json.Encode.Value
encodeScoreText200ResponseSkimmabilitySubscoresWithTag (tagField, tag) model =
    encodeObject (encodeScoreText200ResponseSkimmabilitySubscoresPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeScoreText200ResponseSkimmabilitySubscoresPairs : ScoreText200ResponseSkimmabilitySubscores -> List EncodedField
encodeScoreText200ResponseSkimmabilitySubscoresPairs model =
    let
        pairs =
            [ maybeEncode "bullet_point_ratio_score" (Json.Encode.list Json.Encode.int) model.bulletPointRatioScore
            , maybeEncode "image_score" (Json.Encode.list Json.Encode.int) model.imageScore
            , maybeEncode "highlighted_word_ratio_score" (Json.Encode.list Json.Encode.int) model.highlightedWordRatioScore
            , maybeEncode "video_score" (Json.Encode.list Json.Encode.int) model.videoScore
            , maybeEncode "paragraph_score" (Json.Encode.list Json.Encode.int) model.paragraphScore
            , maybeEncode "paragraph_headline_ratio_score" (Json.Encode.list Json.Encode.int) model.paragraphHeadlineRatioScore
            ]
    in
    pairs


encodeScoreText200ResponseStyle : ScoreText200ResponseStyle -> Json.Encode.Value
encodeScoreText200ResponseStyle =
    encodeObject << encodeScoreText200ResponseStylePairs


encodeScoreText200ResponseStyleWithTag : ( String, String ) -> ScoreText200ResponseStyle -> Json.Encode.Value
encodeScoreText200ResponseStyleWithTag (tagField, tag) model =
    encodeObject (encodeScoreText200ResponseStylePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeScoreText200ResponseStylePairs : ScoreText200ResponseStyle -> List EncodedField
encodeScoreText200ResponseStylePairs model =
    let
        pairs =
            [ maybeEncode "mainscores" encodeScoreText200ResponseReadabilityMainscores model.mainscores
            , maybeEncode "subscores" encodeScoreText200ResponseStyleSubscores model.subscores
            ]
    in
    pairs


encodeScoreText200ResponseStyleSubscores : ScoreText200ResponseStyleSubscores -> Json.Encode.Value
encodeScoreText200ResponseStyleSubscores =
    encodeObject << encodeScoreText200ResponseStyleSubscoresPairs


encodeScoreText200ResponseStyleSubscoresWithTag : ( String, String ) -> ScoreText200ResponseStyleSubscores -> Json.Encode.Value
encodeScoreText200ResponseStyleSubscoresWithTag (tagField, tag) model =
    encodeObject (encodeScoreText200ResponseStyleSubscoresPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeScoreText200ResponseStyleSubscoresPairs : ScoreText200ResponseStyleSubscores -> List EncodedField
encodeScoreText200ResponseStyleSubscoresPairs model =
    let
        pairs =
            [ maybeEncode "abbreviation_score" (Json.Encode.list Json.Encode.int) model.abbreviationScore
            , maybeEncode "style_score" (Json.Encode.list Json.Encode.int) model.styleScore
            , maybeEncode "spelling_score" (Json.Encode.list Json.Encode.int) model.spellingScore
            ]
    in
    pairs


encodeSearchBooks200Response : SearchBooks200Response -> Json.Encode.Value
encodeSearchBooks200Response =
    encodeObject << encodeSearchBooks200ResponsePairs


encodeSearchBooks200ResponseWithTag : ( String, String ) -> SearchBooks200Response -> Json.Encode.Value
encodeSearchBooks200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeSearchBooks200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchBooks200ResponsePairs : SearchBooks200Response -> List EncodedField
encodeSearchBooks200ResponsePairs model =
    let
        pairs =
            [ maybeEncode "available" Json.Encode.int model.available
            , maybeEncode "number" Json.Encode.int model.number
            , maybeEncode "offset" Json.Encode.int model.offset
            , maybeEncode "books" (Json.Encode.list encodeSearchBooks200ResponseBooksInner) model.books
            ]
    in
    pairs


encodeSearchBooks200ResponseBooksInner : SearchBooks200ResponseBooksInner -> Json.Encode.Value
encodeSearchBooks200ResponseBooksInner =
    encodeObject << encodeSearchBooks200ResponseBooksInnerPairs


encodeSearchBooks200ResponseBooksInnerWithTag : ( String, String ) -> SearchBooks200ResponseBooksInner -> Json.Encode.Value
encodeSearchBooks200ResponseBooksInnerWithTag (tagField, tag) model =
    encodeObject (encodeSearchBooks200ResponseBooksInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchBooks200ResponseBooksInnerPairs : SearchBooks200ResponseBooksInner -> List EncodedField
encodeSearchBooks200ResponseBooksInnerPairs model =
    let
        pairs =
            [ maybeEncodeNullable "title" Json.Encode.string model.title
            , maybeEncodeNullable "image" Json.Encode.string model.image
            , maybeEncode "id" Json.Encode.int model.id
            ]
    in
    pairs


encodeSearchGifs200Response : SearchGifs200Response -> Json.Encode.Value
encodeSearchGifs200Response =
    encodeObject << encodeSearchGifs200ResponsePairs


encodeSearchGifs200ResponseWithTag : ( String, String ) -> SearchGifs200Response -> Json.Encode.Value
encodeSearchGifs200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeSearchGifs200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchGifs200ResponsePairs : SearchGifs200Response -> List EncodedField
encodeSearchGifs200ResponsePairs model =
    let
        pairs =
            [ maybeEncode "images" (Json.Encode.list encodeSearchGifs200ResponseImagesInner) model.images
            ]
    in
    pairs


encodeSearchGifs200ResponseImagesInner : SearchGifs200ResponseImagesInner -> Json.Encode.Value
encodeSearchGifs200ResponseImagesInner =
    encodeObject << encodeSearchGifs200ResponseImagesInnerPairs


encodeSearchGifs200ResponseImagesInnerWithTag : ( String, String ) -> SearchGifs200ResponseImagesInner -> Json.Encode.Value
encodeSearchGifs200ResponseImagesInnerWithTag (tagField, tag) model =
    encodeObject (encodeSearchGifs200ResponseImagesInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchGifs200ResponseImagesInnerPairs : SearchGifs200ResponseImagesInner -> List EncodedField
encodeSearchGifs200ResponseImagesInnerPairs model =
    let
        pairs =
            [ maybeEncode "width" Json.Encode.int model.width
            , maybeEncodeNullable "url" Json.Encode.string model.url
            , maybeEncode "height" Json.Encode.int model.height
            ]
    in
    pairs


encodeSearchJokes200Response : SearchJokes200Response -> Json.Encode.Value
encodeSearchJokes200Response =
    encodeObject << encodeSearchJokes200ResponsePairs


encodeSearchJokes200ResponseWithTag : ( String, String ) -> SearchJokes200Response -> Json.Encode.Value
encodeSearchJokes200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeSearchJokes200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchJokes200ResponsePairs : SearchJokes200Response -> List EncodedField
encodeSearchJokes200ResponsePairs model =
    let
        pairs =
            [ maybeEncode "jokes" (Json.Encode.list encodeSearchJokes200ResponseJokesInner) model.jokes
            , maybeEncode "available" Json.Encode.int model.available
            ]
    in
    pairs


encodeSearchJokes200ResponseJokesInner : SearchJokes200ResponseJokesInner -> Json.Encode.Value
encodeSearchJokes200ResponseJokesInner =
    encodeObject << encodeSearchJokes200ResponseJokesInnerPairs


encodeSearchJokes200ResponseJokesInnerWithTag : ( String, String ) -> SearchJokes200ResponseJokesInner -> Json.Encode.Value
encodeSearchJokes200ResponseJokesInnerWithTag (tagField, tag) model =
    encodeObject (encodeSearchJokes200ResponseJokesInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchJokes200ResponseJokesInnerPairs : SearchJokes200ResponseJokesInner -> List EncodedField
encodeSearchJokes200ResponseJokesInnerPairs model =
    let
        pairs =
            [ maybeEncodeNullable "joke" Json.Encode.string model.joke
            ]
    in
    pairs


encodeSearchMemes200Response : SearchMemes200Response -> Json.Encode.Value
encodeSearchMemes200Response =
    encodeObject << encodeSearchMemes200ResponsePairs


encodeSearchMemes200ResponseWithTag : ( String, String ) -> SearchMemes200Response -> Json.Encode.Value
encodeSearchMemes200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeSearchMemes200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchMemes200ResponsePairs : SearchMemes200Response -> List EncodedField
encodeSearchMemes200ResponsePairs model =
    let
        pairs =
            [ maybeEncode "memes" (Json.Encode.list encodeSearchMemes200ResponseMemesInner) model.memes
            , maybeEncode "available" Json.Encode.int model.available
            ]
    in
    pairs


encodeSearchMemes200ResponseMemesInner : SearchMemes200ResponseMemesInner -> Json.Encode.Value
encodeSearchMemes200ResponseMemesInner =
    encodeObject << encodeSearchMemes200ResponseMemesInnerPairs


encodeSearchMemes200ResponseMemesInnerWithTag : ( String, String ) -> SearchMemes200ResponseMemesInner -> Json.Encode.Value
encodeSearchMemes200ResponseMemesInnerWithTag (tagField, tag) model =
    encodeObject (encodeSearchMemes200ResponseMemesInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchMemes200ResponseMemesInnerPairs : SearchMemes200ResponseMemesInner -> List EncodedField
encodeSearchMemes200ResponseMemesInnerPairs model =
    let
        pairs =
            [ maybeEncodeNullable "type" Json.Encode.string model.type_
            , maybeEncodeNullable "description" Json.Encode.string model.description
            , maybeEncodeNullable "url" Json.Encode.string model.url
            ]
    in
    pairs


encodeSearchNews200Response : SearchNews200Response -> Json.Encode.Value
encodeSearchNews200Response =
    encodeObject << encodeSearchNews200ResponsePairs


encodeSearchNews200ResponseWithTag : ( String, String ) -> SearchNews200Response -> Json.Encode.Value
encodeSearchNews200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeSearchNews200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchNews200ResponsePairs : SearchNews200Response -> List EncodedField
encodeSearchNews200ResponsePairs model =
    let
        pairs =
            [ maybeEncode "offset" Json.Encode.int model.offset
            , maybeEncode "number" Json.Encode.int model.number
            , maybeEncode "available" Json.Encode.int model.available
            , maybeEncode "news" (Json.Encode.list encodeSearchNews200ResponseNewsInner) model.news
            ]
    in
    pairs


encodeSearchNews200ResponseNewsInner : SearchNews200ResponseNewsInner -> Json.Encode.Value
encodeSearchNews200ResponseNewsInner =
    encodeObject << encodeSearchNews200ResponseNewsInnerPairs


encodeSearchNews200ResponseNewsInnerWithTag : ( String, String ) -> SearchNews200ResponseNewsInner -> Json.Encode.Value
encodeSearchNews200ResponseNewsInnerWithTag (tagField, tag) model =
    encodeObject (encodeSearchNews200ResponseNewsInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchNews200ResponseNewsInnerPairs : SearchNews200ResponseNewsInner -> List EncodedField
encodeSearchNews200ResponseNewsInnerPairs model =
    let
        pairs =
            [ maybeEncodeNullable "summary" Json.Encode.string model.summary
            , maybeEncodeNullable "image" Json.Encode.string model.image
            , maybeEncode "sentiment" Json.Encode.float model.sentiment
            , maybeEncodeNullable "source_country" Json.Encode.string model.sourceCountry
            , maybeEncodeNullable "language" Json.Encode.string model.language
            , maybeEncode "id" Json.Encode.int model.id
            , maybeEncodeNullable "text" Json.Encode.string model.text
            , maybeEncodeNullable "title" Json.Encode.string model.title
            , maybeEncodeNullable "publish_date" Json.Encode.string model.publishDate
            , maybeEncodeNullable "url" Json.Encode.string model.url
            , maybeEncode "authors" (Json.Encode.list Json.Encode.string) model.authors
            ]
    in
    pairs


encodeSearchRecipes200Response : SearchRecipes200Response -> Json.Encode.Value
encodeSearchRecipes200Response =
    encodeObject << encodeSearchRecipes200ResponsePairs


encodeSearchRecipes200ResponseWithTag : ( String, String ) -> SearchRecipes200Response -> Json.Encode.Value
encodeSearchRecipes200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeSearchRecipes200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchRecipes200ResponsePairs : SearchRecipes200Response -> List EncodedField
encodeSearchRecipes200ResponsePairs model =
    let
        pairs =
            [ maybeEncode "offset" Json.Encode.int model.offset
            , maybeEncode "number" Json.Encode.int model.number
            , maybeEncode "recipes" (Json.Encode.list encodeSearchRecipes200ResponseRecipesInner) model.recipes
            , maybeEncode "total_results" Json.Encode.int model.totalResults
            ]
    in
    pairs


encodeSearchRecipes200ResponseRecipesInner : SearchRecipes200ResponseRecipesInner -> Json.Encode.Value
encodeSearchRecipes200ResponseRecipesInner =
    encodeObject << encodeSearchRecipes200ResponseRecipesInnerPairs


encodeSearchRecipes200ResponseRecipesInnerWithTag : ( String, String ) -> SearchRecipes200ResponseRecipesInner -> Json.Encode.Value
encodeSearchRecipes200ResponseRecipesInnerWithTag (tagField, tag) model =
    encodeObject (encodeSearchRecipes200ResponseRecipesInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchRecipes200ResponseRecipesInnerPairs : SearchRecipes200ResponseRecipesInner -> List EncodedField
encodeSearchRecipes200ResponseRecipesInnerPairs model =
    let
        pairs =
            [ maybeEncode "images" (Json.Encode.list Json.Encode.string) model.images
            , maybeEncode "nutrition" encodeSearchRecipes200ResponseRecipesInnerNutrition model.nutrition
            , maybeEncode "id" Json.Encode.int model.id
            , maybeEncodeNullable "title" Json.Encode.string model.title
            ]
    in
    pairs


encodeSearchRecipes200ResponseRecipesInnerNutrition : SearchRecipes200ResponseRecipesInnerNutrition -> Json.Encode.Value
encodeSearchRecipes200ResponseRecipesInnerNutrition =
    encodeObject << encodeSearchRecipes200ResponseRecipesInnerNutritionPairs


encodeSearchRecipes200ResponseRecipesInnerNutritionWithTag : ( String, String ) -> SearchRecipes200ResponseRecipesInnerNutrition -> Json.Encode.Value
encodeSearchRecipes200ResponseRecipesInnerNutritionWithTag (tagField, tag) model =
    encodeObject (encodeSearchRecipes200ResponseRecipesInnerNutritionPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchRecipes200ResponseRecipesInnerNutritionPairs : SearchRecipes200ResponseRecipesInnerNutrition -> List EncodedField
encodeSearchRecipes200ResponseRecipesInnerNutritionPairs model =
    let
        pairs =
            [ maybeEncode "nutrients" (Json.Encode.list encodeSearchRecipes200ResponseRecipesInnerNutritionNutrientsInner) model.nutrients
            ]
    in
    pairs


encodeSearchRecipes200ResponseRecipesInnerNutritionNutrientsInner : SearchRecipes200ResponseRecipesInnerNutritionNutrientsInner -> Json.Encode.Value
encodeSearchRecipes200ResponseRecipesInnerNutritionNutrientsInner =
    encodeObject << encodeSearchRecipes200ResponseRecipesInnerNutritionNutrientsInnerPairs


encodeSearchRecipes200ResponseRecipesInnerNutritionNutrientsInnerWithTag : ( String, String ) -> SearchRecipes200ResponseRecipesInnerNutritionNutrientsInner -> Json.Encode.Value
encodeSearchRecipes200ResponseRecipesInnerNutritionNutrientsInnerWithTag (tagField, tag) model =
    encodeObject (encodeSearchRecipes200ResponseRecipesInnerNutritionNutrientsInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchRecipes200ResponseRecipesInnerNutritionNutrientsInnerPairs : SearchRecipes200ResponseRecipesInnerNutritionNutrientsInner -> List EncodedField
encodeSearchRecipes200ResponseRecipesInnerNutritionNutrientsInnerPairs model =
    let
        pairs =
            [ maybeEncodeNullable "name" Json.Encode.string model.name
            , maybeEncode "amount" Json.Encode.float model.amount
            , maybeEncodeNullable "unit" Json.Encode.string model.unit
            ]
    in
    pairs


encodeSearchRestaurants200Response : SearchRestaurants200Response -> Json.Encode.Value
encodeSearchRestaurants200Response =
    encodeObject << encodeSearchRestaurants200ResponsePairs


encodeSearchRestaurants200ResponseWithTag : ( String, String ) -> SearchRestaurants200Response -> Json.Encode.Value
encodeSearchRestaurants200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeSearchRestaurants200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchRestaurants200ResponsePairs : SearchRestaurants200Response -> List EncodedField
encodeSearchRestaurants200ResponsePairs model =
    let
        pairs =
            [ maybeEncode "restaurants" (Json.Encode.list encodeSearchRestaurants200ResponseRestaurantsInner) model.restaurants
            ]
    in
    pairs


encodeSearchRestaurants200ResponseRestaurantsInner : SearchRestaurants200ResponseRestaurantsInner -> Json.Encode.Value
encodeSearchRestaurants200ResponseRestaurantsInner =
    encodeObject << encodeSearchRestaurants200ResponseRestaurantsInnerPairs


encodeSearchRestaurants200ResponseRestaurantsInnerWithTag : ( String, String ) -> SearchRestaurants200ResponseRestaurantsInner -> Json.Encode.Value
encodeSearchRestaurants200ResponseRestaurantsInnerWithTag (tagField, tag) model =
    encodeObject (encodeSearchRestaurants200ResponseRestaurantsInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchRestaurants200ResponseRestaurantsInnerPairs : SearchRestaurants200ResponseRestaurantsInner -> List EncodedField
encodeSearchRestaurants200ResponseRestaurantsInnerPairs model =
    let
        pairs =
            [ maybeEncode "offers_third_party_delivery" Json.Encode.bool model.offersThirdPartyDelivery
            , maybeEncode "address" encodeSearchRestaurants200ResponseRestaurantsInnerAddress model.address
            , maybeEncode "supports_upc_codes" Json.Encode.bool model.supportsUpcCodes
            , maybeEncode "is_open" Json.Encode.bool model.isOpen
            , maybeEncodeNullable "description" Json.Encode.string model.description
            , maybeEncode "weighted_rating_value" Json.Encode.int model.weightedRatingValue
            , maybeEncodeNullable "type" Json.Encode.string model.type_
            , maybeEncode "offers_first_party_delivery" Json.Encode.bool model.offersFirstPartyDelivery
            , maybeEncode "aggregated_rating_count" Json.Encode.int model.aggregatedRatingCount
            , maybeEncode "pickup_enabled" Json.Encode.bool model.pickupEnabled
            , maybeEncode "cuisines" (Json.Encode.list Json.Encode.string) model.cuisines
            , maybeEncode "miles" Json.Encode.float model.miles
            , maybeEncode "dollar_signs" Json.Encode.int model.dollarSigns
            , maybeEncode "delivery_enabled" Json.Encode.bool model.deliveryEnabled
            , maybeEncodeNullable "name" Json.Encode.string model.name
            , maybeEncode "phone_number" Json.Encode.float model.phoneNumber
            , maybeEncodeNullable "_id" Json.Encode.string model.id
            , maybeEncode "local_hours" encodeSearchRestaurants200ResponseRestaurantsInnerLocalHours model.localHours
            ]
    in
    pairs


encodeSearchRestaurants200ResponseRestaurantsInnerAddress : SearchRestaurants200ResponseRestaurantsInnerAddress -> Json.Encode.Value
encodeSearchRestaurants200ResponseRestaurantsInnerAddress =
    encodeObject << encodeSearchRestaurants200ResponseRestaurantsInnerAddressPairs


encodeSearchRestaurants200ResponseRestaurantsInnerAddressWithTag : ( String, String ) -> SearchRestaurants200ResponseRestaurantsInnerAddress -> Json.Encode.Value
encodeSearchRestaurants200ResponseRestaurantsInnerAddressWithTag (tagField, tag) model =
    encodeObject (encodeSearchRestaurants200ResponseRestaurantsInnerAddressPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchRestaurants200ResponseRestaurantsInnerAddressPairs : SearchRestaurants200ResponseRestaurantsInnerAddress -> List EncodedField
encodeSearchRestaurants200ResponseRestaurantsInnerAddressPairs model =
    let
        pairs =
            [ maybeEncodeNullable "zipcode" Json.Encode.string model.zipcode
            , maybeEncodeNullable "country" Json.Encode.string model.country
            , maybeEncodeNullable "city" Json.Encode.string model.city
            , maybeEncode "latitude" Json.Encode.float model.latitude
            , maybeEncode "lon" Json.Encode.float model.lon
            , maybeEncodeNullable "street_addr_2" Json.Encode.string model.streetAddr2
            , maybeEncodeNullable "state" Json.Encode.string model.state
            , maybeEncodeNullable "street_addr" Json.Encode.string model.streetAddr
            , maybeEncode "lat" Json.Encode.float model.lat
            , maybeEncode "longitude" Json.Encode.float model.longitude
            ]
    in
    pairs


encodeSearchRestaurants200ResponseRestaurantsInnerLocalHours : SearchRestaurants200ResponseRestaurantsInnerLocalHours -> Json.Encode.Value
encodeSearchRestaurants200ResponseRestaurantsInnerLocalHours =
    encodeObject << encodeSearchRestaurants200ResponseRestaurantsInnerLocalHoursPairs


encodeSearchRestaurants200ResponseRestaurantsInnerLocalHoursWithTag : ( String, String ) -> SearchRestaurants200ResponseRestaurantsInnerLocalHours -> Json.Encode.Value
encodeSearchRestaurants200ResponseRestaurantsInnerLocalHoursWithTag (tagField, tag) model =
    encodeObject (encodeSearchRestaurants200ResponseRestaurantsInnerLocalHoursPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchRestaurants200ResponseRestaurantsInnerLocalHoursPairs : SearchRestaurants200ResponseRestaurantsInnerLocalHours -> List EncodedField
encodeSearchRestaurants200ResponseRestaurantsInnerLocalHoursPairs model =
    let
        pairs =
            [ maybeEncode "operational" encodeSearchRestaurants200ResponseRestaurantsInnerLocalHoursOperational model.operational
            , maybeEncode "delivery" encodeSearchRestaurants200ResponseRestaurantsInnerLocalHoursOperational model.delivery
            , maybeEncode "pickup" encodeSearchRestaurants200ResponseRestaurantsInnerLocalHoursOperational model.pickup
            , maybeEncode "dine_in" encodeSearchRestaurants200ResponseRestaurantsInnerLocalHoursOperational model.dineIn
            ]
    in
    pairs


encodeSearchRestaurants200ResponseRestaurantsInnerLocalHoursOperational : SearchRestaurants200ResponseRestaurantsInnerLocalHoursOperational -> Json.Encode.Value
encodeSearchRestaurants200ResponseRestaurantsInnerLocalHoursOperational =
    encodeObject << encodeSearchRestaurants200ResponseRestaurantsInnerLocalHoursOperationalPairs


encodeSearchRestaurants200ResponseRestaurantsInnerLocalHoursOperationalWithTag : ( String, String ) -> SearchRestaurants200ResponseRestaurantsInnerLocalHoursOperational -> Json.Encode.Value
encodeSearchRestaurants200ResponseRestaurantsInnerLocalHoursOperationalWithTag (tagField, tag) model =
    encodeObject (encodeSearchRestaurants200ResponseRestaurantsInnerLocalHoursOperationalPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchRestaurants200ResponseRestaurantsInnerLocalHoursOperationalPairs : SearchRestaurants200ResponseRestaurantsInnerLocalHoursOperational -> List EncodedField
encodeSearchRestaurants200ResponseRestaurantsInnerLocalHoursOperationalPairs model =
    let
        pairs =
            [ maybeEncodeNullable "sunday" Json.Encode.string model.sunday
            , maybeEncodeNullable "saturday" Json.Encode.string model.saturday
            , maybeEncodeNullable "tuesday" Json.Encode.string model.tuesday
            , maybeEncodeNullable "thursday" Json.Encode.string model.thursday
            , maybeEncodeNullable "friday" Json.Encode.string model.friday
            , maybeEncodeNullable "wednesday" Json.Encode.string model.wednesday
            , maybeEncodeNullable "monday" Json.Encode.string model.monday
            ]
    in
    pairs


encodeSearchRoyaltyFreeImages200Response : SearchRoyaltyFreeImages200Response -> Json.Encode.Value
encodeSearchRoyaltyFreeImages200Response =
    encodeObject << encodeSearchRoyaltyFreeImages200ResponsePairs


encodeSearchRoyaltyFreeImages200ResponseWithTag : ( String, String ) -> SearchRoyaltyFreeImages200Response -> Json.Encode.Value
encodeSearchRoyaltyFreeImages200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeSearchRoyaltyFreeImages200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchRoyaltyFreeImages200ResponsePairs : SearchRoyaltyFreeImages200Response -> List EncodedField
encodeSearchRoyaltyFreeImages200ResponsePairs model =
    let
        pairs =
            [ maybeEncode "images" (Json.Encode.list encodeSearchRoyaltyFreeImages200ResponseImagesInner) model.images
            ]
    in
    pairs


encodeSearchRoyaltyFreeImages200ResponseImagesInner : SearchRoyaltyFreeImages200ResponseImagesInner -> Json.Encode.Value
encodeSearchRoyaltyFreeImages200ResponseImagesInner =
    encodeObject << encodeSearchRoyaltyFreeImages200ResponseImagesInnerPairs


encodeSearchRoyaltyFreeImages200ResponseImagesInnerWithTag : ( String, String ) -> SearchRoyaltyFreeImages200ResponseImagesInner -> Json.Encode.Value
encodeSearchRoyaltyFreeImages200ResponseImagesInnerWithTag (tagField, tag) model =
    encodeObject (encodeSearchRoyaltyFreeImages200ResponseImagesInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchRoyaltyFreeImages200ResponseImagesInnerPairs : SearchRoyaltyFreeImages200ResponseImagesInner -> List EncodedField
encodeSearchRoyaltyFreeImages200ResponseImagesInnerPairs model =
    let
        pairs =
            [ maybeEncode "width" Json.Encode.int model.width
            , maybeEncode "license" encodeSearchRoyaltyFreeImages200ResponseImagesInnerLicense model.license
            , maybeEncodeNullable "thumbnail" Json.Encode.string model.thumbnail
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "url" Json.Encode.string model.url
            , maybeEncode "height" Json.Encode.int model.height
            ]
    in
    pairs


encodeSearchRoyaltyFreeImages200ResponseImagesInnerLicense : SearchRoyaltyFreeImages200ResponseImagesInnerLicense -> Json.Encode.Value
encodeSearchRoyaltyFreeImages200ResponseImagesInnerLicense =
    encodeObject << encodeSearchRoyaltyFreeImages200ResponseImagesInnerLicensePairs


encodeSearchRoyaltyFreeImages200ResponseImagesInnerLicenseWithTag : ( String, String ) -> SearchRoyaltyFreeImages200ResponseImagesInnerLicense -> Json.Encode.Value
encodeSearchRoyaltyFreeImages200ResponseImagesInnerLicenseWithTag (tagField, tag) model =
    encodeObject (encodeSearchRoyaltyFreeImages200ResponseImagesInnerLicensePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchRoyaltyFreeImages200ResponseImagesInnerLicensePairs : SearchRoyaltyFreeImages200ResponseImagesInnerLicense -> List EncodedField
encodeSearchRoyaltyFreeImages200ResponseImagesInnerLicensePairs model =
    let
        pairs =
            [ maybeEncodeNullable "name" Json.Encode.string model.name
            , maybeEncodeNullable "link" Json.Encode.string model.link
            ]
    in
    pairs


encodeSearchWeb200Response : SearchWeb200Response -> Json.Encode.Value
encodeSearchWeb200Response =
    encodeObject << encodeSearchWeb200ResponsePairs


encodeSearchWeb200ResponseWithTag : ( String, String ) -> SearchWeb200Response -> Json.Encode.Value
encodeSearchWeb200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeSearchWeb200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchWeb200ResponsePairs : SearchWeb200Response -> List EncodedField
encodeSearchWeb200ResponsePairs model =
    let
        pairs =
            [ maybeEncode "results" (Json.Encode.list encodeSearchWeb200ResponseResultsInner) model.results
            ]
    in
    pairs


encodeSearchWeb200ResponseResultsInner : SearchWeb200ResponseResultsInner -> Json.Encode.Value
encodeSearchWeb200ResponseResultsInner =
    encodeObject << encodeSearchWeb200ResponseResultsInnerPairs


encodeSearchWeb200ResponseResultsInnerWithTag : ( String, String ) -> SearchWeb200ResponseResultsInner -> Json.Encode.Value
encodeSearchWeb200ResponseResultsInnerWithTag (tagField, tag) model =
    encodeObject (encodeSearchWeb200ResponseResultsInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchWeb200ResponseResultsInnerPairs : SearchWeb200ResponseResultsInner -> List EncodedField
encodeSearchWeb200ResponseResultsInnerPairs model =
    let
        pairs =
            [ maybeEncodeNullable "title" Json.Encode.string model.title
            , maybeEncodeNullable "summary" Json.Encode.string model.summary
            , maybeEncodeNullable "url" Json.Encode.string model.url
            ]
    in
    pairs


encodeSingularizeWord200Response : SingularizeWord200Response -> Json.Encode.Value
encodeSingularizeWord200Response =
    encodeObject << encodeSingularizeWord200ResponsePairs


encodeSingularizeWord200ResponseWithTag : ( String, String ) -> SingularizeWord200Response -> Json.Encode.Value
encodeSingularizeWord200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeSingularizeWord200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSingularizeWord200ResponsePairs : SingularizeWord200Response -> List EncodedField
encodeSingularizeWord200ResponsePairs model =
    let
        pairs =
            [ maybeEncodeNullable "original" Json.Encode.string model.original
            , maybeEncodeNullable "singular" Json.Encode.string model.singular
            ]
    in
    pairs


encodeStoreKeyValueGET200Response : StoreKeyValueGET200Response -> Json.Encode.Value
encodeStoreKeyValueGET200Response =
    encodeObject << encodeStoreKeyValueGET200ResponsePairs


encodeStoreKeyValueGET200ResponseWithTag : ( String, String ) -> StoreKeyValueGET200Response -> Json.Encode.Value
encodeStoreKeyValueGET200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeStoreKeyValueGET200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeStoreKeyValueGET200ResponsePairs : StoreKeyValueGET200Response -> List EncodedField
encodeStoreKeyValueGET200ResponsePairs model =
    let
        pairs =
            [ maybeEncodeNullable "status" Json.Encode.string model.status
            ]
    in
    pairs


encodeTextStemming200Response : TextStemming200Response -> Json.Encode.Value
encodeTextStemming200Response =
    encodeObject << encodeTextStemming200ResponsePairs


encodeTextStemming200ResponseWithTag : ( String, String ) -> TextStemming200Response -> Json.Encode.Value
encodeTextStemming200ResponseWithTag (tagField, tag) model =
    encodeObject (encodeTextStemming200ResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeTextStemming200ResponsePairs : TextStemming200Response -> List EncodedField
encodeTextStemming200ResponsePairs model =
    let
        pairs =
            [ maybeEncodeNullable "original" Json.Encode.string model.original
            , maybeEncodeNullable "stemmed" Json.Encode.string model.stemmed
            ]
    in
    pairs


-- DECODER


computeNutrition200ResponseDecoder : Json.Decode.Decoder ComputeNutrition200Response
computeNutrition200ResponseDecoder =
    Json.Decode.succeed ComputeNutrition200Response
        |> maybeDecode "nutrients" (Json.Decode.list retrieveRecipeInformation200ResponseNutritionIngredientBreakdownInnerNutrientsInnerDecoder) Nothing
        |> maybeDecode "properties" (Json.Decode.list retrieveRecipeInformation200ResponseNutritionFlavonoidsInnerDecoder) Nothing
        |> maybeDecode "flavonoids" (Json.Decode.list searchRecipes200ResponseRecipesInnerNutritionNutrientsInnerDecoder) Nothing
        |> maybeDecode "ingredient_breakdown" (Json.Decode.list computeNutrition200ResponseIngredientBreakdownInnerDecoder) Nothing
        |> maybeDecode "caloric_breakdown" retrieveRecipeInformation200ResponseNutritionCaloricBreakdownDecoder Nothing
        |> maybeDecode "weight_per_serving" retrieveRecipeInformation200ResponseNutritionWeightPerServingDecoder Nothing


computeNutrition200ResponseIngredientBreakdownInnerDecoder : Json.Decode.Decoder ComputeNutrition200ResponseIngredientBreakdownInner
computeNutrition200ResponseIngredientBreakdownInnerDecoder =
    Json.Decode.succeed ComputeNutrition200ResponseIngredientBreakdownInner
        |> maybeDecodeNullable "name" Json.Decode.string Nothing
        |> maybeDecode "amount" Json.Decode.int Nothing
        |> maybeDecodeNullable "unit" Json.Decode.string Nothing
        |> maybeDecode "id" Json.Decode.int Nothing
        |> maybeDecode "nutrients" (Json.Decode.list computeNutrition200ResponseIngredientBreakdownInnerNutrientsInnerDecoder) Nothing


computeNutrition200ResponseIngredientBreakdownInnerNutrientsInnerDecoder : Json.Decode.Decoder ComputeNutrition200ResponseIngredientBreakdownInnerNutrientsInner
computeNutrition200ResponseIngredientBreakdownInnerNutrientsInnerDecoder =
    Json.Decode.succeed ComputeNutrition200ResponseIngredientBreakdownInnerNutrientsInner
        |> maybeDecodeNullable "name" Json.Decode.string Nothing
        |> maybeDecode "percent_of_daily_needs" Json.Decode.int Nothing
        |> maybeDecode "amount" Json.Decode.int Nothing
        |> maybeDecodeNullable "unit" Json.Decode.string Nothing


convertUnits200ResponseDecoder : Json.Decode.Decoder ConvertUnits200Response
convertUnits200ResponseDecoder =
    Json.Decode.succeed ConvertUnits200Response
        |> maybeDecode "target_amount" Json.Decode.float Nothing
        |> maybeDecodeNullable "target_unit" Json.Decode.string Nothing


correctSpelling200ResponseDecoder : Json.Decode.Decoder CorrectSpelling200Response
correctSpelling200ResponseDecoder =
    Json.Decode.succeed CorrectSpelling200Response
        |> maybeDecodeNullable "corrected_text" Json.Decode.string Nothing


detectLanguage200ResponseInnerDecoder : Json.Decode.Decoder DetectLanguage200ResponseInner
detectLanguage200ResponseInnerDecoder =
    Json.Decode.succeed DetectLanguage200ResponseInner
        |> maybeDecodeNullable "language" Json.Decode.string Nothing
        |> maybeDecode "confidence" Json.Decode.float Nothing


detectMainImageColor200ResponseInnerDecoder : Json.Decode.Decoder DetectMainImageColor200ResponseInner
detectMainImageColor200ResponseInnerDecoder =
    Json.Decode.succeed DetectMainImageColor200ResponseInner
        |> maybeDecodeNullable "specific_color" Json.Decode.string Nothing
        |> maybeDecodeNullable "main_color" Json.Decode.string Nothing
        |> maybeDecodeNullable "hex_code" Json.Decode.string Nothing


detectSentiment200ResponseDecoder : Json.Decode.Decoder DetectSentiment200Response
detectSentiment200ResponseDecoder =
    Json.Decode.succeed DetectSentiment200Response
        |> maybeDecode "document" detectSentiment200ResponseDocumentDecoder Nothing
        |> maybeDecode "sentences" (Json.Decode.list detectSentiment200ResponseSentencesInnerDecoder) Nothing


detectSentiment200ResponseDocumentDecoder : Json.Decode.Decoder DetectSentiment200ResponseDocument
detectSentiment200ResponseDocumentDecoder =
    Json.Decode.succeed DetectSentiment200ResponseDocument
        |> maybeDecodeNullable "sentiment" Json.Decode.string Nothing
        |> maybeDecode "confidence" Json.Decode.int Nothing
        |> maybeDecode "average_confidence" Json.Decode.int Nothing


detectSentiment200ResponseSentencesInnerDecoder : Json.Decode.Decoder DetectSentiment200ResponseSentencesInner
detectSentiment200ResponseSentencesInnerDecoder =
    Json.Decode.succeed DetectSentiment200ResponseSentencesInner
        |> maybeDecode "length" Json.Decode.int Nothing
        |> maybeDecodeNullable "sentiment" Json.Decode.string Nothing
        |> maybeDecode "offset" Json.Decode.int Nothing
        |> maybeDecode "confidence" Json.Decode.int Nothing


extractAuthors200ResponseDecoder : Json.Decode.Decoder ExtractAuthors200Response
extractAuthors200ResponseDecoder =
    Json.Decode.succeed ExtractAuthors200Response
        |> maybeDecode "authors" (Json.Decode.list extractAuthors200ResponseAuthorsInnerDecoder) Nothing


extractAuthors200ResponseAuthorsInnerDecoder : Json.Decode.Decoder ExtractAuthors200ResponseAuthorsInner
extractAuthors200ResponseAuthorsInnerDecoder =
    Json.Decode.succeed ExtractAuthors200ResponseAuthorsInner
        |> maybeDecodeNullable "link" Json.Decode.string Nothing
        |> maybeDecodeNullable "name" Json.Decode.string Nothing


extractContentFromAWebPage200ResponseDecoder : Json.Decode.Decoder ExtractContentFromAWebPage200Response
extractContentFromAWebPage200ResponseDecoder =
    Json.Decode.succeed ExtractContentFromAWebPage200Response
        |> maybeDecodeNullable "title" Json.Decode.string Nothing
        |> maybeDecodeNullable "main_text" Json.Decode.string Nothing
        |> maybeDecodeNullable "main_html" Json.Decode.string Nothing
        |> maybeDecode "images" (Json.Decode.list Json.Decode.string) Nothing


extractDates200ResponseDecoder : Json.Decode.Decoder ExtractDates200Response
extractDates200ResponseDecoder =
    Json.Decode.succeed ExtractDates200Response
        |> maybeDecode "dates" (Json.Decode.list extractDates200ResponseDatesInnerDecoder) Nothing


extractDates200ResponseDatesInnerDecoder : Json.Decode.Decoder ExtractDates200ResponseDatesInner
extractDates200ResponseDatesInnerDecoder =
    Json.Decode.succeed ExtractDates200ResponseDatesInner
        |> maybeDecode "start_position" Json.Decode.int Nothing
        |> maybeDecodeNullable "date" Json.Decode.string Nothing
        |> maybeDecode "normalized_date" Json.Decode.float Nothing
        |> maybeDecodeNullable "tag" Json.Decode.string Nothing
        |> maybeDecode "end_position" Json.Decode.int Nothing


extractEntities200ResponseDecoder : Json.Decode.Decoder ExtractEntities200Response
extractEntities200ResponseDecoder =
    Json.Decode.succeed ExtractEntities200Response
        |> maybeDecode "entities" (Json.Decode.list extractEntities200ResponseEntitiesInnerDecoder) Nothing


extractEntities200ResponseEntitiesInnerDecoder : Json.Decode.Decoder ExtractEntities200ResponseEntitiesInner
extractEntities200ResponseEntitiesInnerDecoder =
    Json.Decode.succeed ExtractEntities200ResponseEntitiesInner
        |> maybeDecode "start_position" Json.Decode.int Nothing
        |> maybeDecodeNullable "image" Json.Decode.string Nothing
        |> maybeDecodeNullable "type" Json.Decode.string Nothing
        |> maybeDecodeNullable "value" Json.Decode.string Nothing
        |> maybeDecode "end_position" Json.Decode.int Nothing


extractNews200ResponseDecoder : Json.Decode.Decoder ExtractNews200Response
extractNews200ResponseDecoder =
    Json.Decode.succeed ExtractNews200Response
        |> maybeDecodeNullable "title" Json.Decode.string Nothing
        |> maybeDecodeNullable "text" Json.Decode.string Nothing
        |> maybeDecodeNullable "url" Json.Decode.string Nothing
        |> maybeDecodeNullable "image" Json.Decode.string Nothing
        |> maybeDecodeNullable "publish_date" Json.Decode.string Nothing
        |> maybeDecodeNullable "author" Json.Decode.string Nothing
        |> maybeDecodeNullable "language" Json.Decode.string Nothing
        |> maybeDecodeNullable "source_country" Json.Decode.string Nothing
        |> maybeDecode "sentiment" Json.Decode.float Nothing


extractPublishDate200ResponseDecoder : Json.Decode.Decoder ExtractPublishDate200Response
extractPublishDate200ResponseDecoder =
    Json.Decode.succeed ExtractPublishDate200Response
        |> maybeDecodeNullable "publish_date" Json.Decode.string Nothing


findSimilarBooks200ResponseDecoder : Json.Decode.Decoder FindSimilarBooks200Response
findSimilarBooks200ResponseDecoder =
    Json.Decode.succeed FindSimilarBooks200Response
        |> maybeDecode "similar_books" (Json.Decode.list searchBooks200ResponseBooksInnerDecoder) Nothing


generateNonsenseWord200ResponseDecoder : Json.Decode.Decoder GenerateNonsenseWord200Response
generateNonsenseWord200ResponseDecoder =
    Json.Decode.succeed GenerateNonsenseWord200Response
        |> maybeDecodeNullable "word" Json.Decode.string Nothing
        |> maybeDecode "rating" Json.Decode.float Nothing


listWordSynonyms200ResponseDecoder : Json.Decode.Decoder ListWordSynonyms200Response
listWordSynonyms200ResponseDecoder =
    Json.Decode.succeed ListWordSynonyms200Response
        |> maybeDecode "synonyms" (Json.Decode.list Json.Decode.string) Nothing


partOfSpeechTagging200ResponseDecoder : Json.Decode.Decoder PartOfSpeechTagging200Response
partOfSpeechTagging200ResponseDecoder =
    Json.Decode.succeed PartOfSpeechTagging200Response
        |> maybeDecodeNullable "tagged_text" Json.Decode.string Nothing


pluralizeWord200ResponseDecoder : Json.Decode.Decoder PluralizeWord200Response
pluralizeWord200ResponseDecoder =
    Json.Decode.succeed PluralizeWord200Response
        |> maybeDecodeNullable "original" Json.Decode.string Nothing
        |> maybeDecodeNullable "plural" Json.Decode.string Nothing


randomMeme200ResponseDecoder : Json.Decode.Decoder RandomMeme200Response
randomMeme200ResponseDecoder =
    Json.Decode.succeed RandomMeme200Response
        |> maybeDecodeNullable "description" Json.Decode.string Nothing
        |> maybeDecodeNullable "url" Json.Decode.string Nothing
        |> maybeDecodeNullable "type" Json.Decode.string Nothing
        |> maybeDecode "width" Json.Decode.int Nothing
        |> maybeDecode "height" Json.Decode.int Nothing
        |> maybeDecode "ratio" Json.Decode.float Nothing


randomPoem200ResponseDecoder : Json.Decode.Decoder RandomPoem200Response
randomPoem200ResponseDecoder =
    Json.Decode.succeed RandomPoem200Response
        |> maybeDecodeNullable "title" Json.Decode.string Nothing
        |> maybeDecodeNullable "author" Json.Decode.string Nothing
        |> maybeDecodeNullable "poem" Json.Decode.string Nothing


randomQuote200ResponseDecoder : Json.Decode.Decoder RandomQuote200Response
randomQuote200ResponseDecoder =
    Json.Decode.succeed RandomQuote200Response
        |> maybeDecodeNullable "author" Json.Decode.string Nothing
        |> maybeDecodeNullable "quote" Json.Decode.string Nothing


randomTrivia200ResponseDecoder : Json.Decode.Decoder RandomTrivia200Response
randomTrivia200ResponseDecoder =
    Json.Decode.succeed RandomTrivia200Response
        |> maybeDecodeNullable "trivia" Json.Decode.string Nothing


readKeyValueFromStore200ResponseDecoder : Json.Decode.Decoder ReadKeyValueFromStore200Response
readKeyValueFromStore200ResponseDecoder =
    Json.Decode.succeed ReadKeyValueFromStore200Response
        |> maybeDecodeNullable "value" Json.Decode.string Nothing


retrieveRecipeInformation200ResponseDecoder : Json.Decode.Decoder RetrieveRecipeInformation200Response
retrieveRecipeInformation200ResponseDecoder =
    Json.Decode.succeed RetrieveRecipeInformation200Response
        |> maybeDecode "id" Json.Decode.int Nothing
        |> maybeDecodeNullable "title" Json.Decode.string Nothing
        |> maybeDecode "servings" Json.Decode.int Nothing
        |> maybeDecode "images" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecode "dietary_properties" retrieveRecipeInformation200ResponseDietaryPropertiesDecoder Nothing
        |> maybeDecode "price_per_serving" Json.Decode.float Nothing
        |> maybeDecode "times" retrieveRecipeInformation200ResponseTimesDecoder Nothing
        |> maybeDecode "nutrition" retrieveRecipeInformation200ResponseNutritionDecoder Nothing
        |> maybeDecode "taste" retrieveRecipeInformation200ResponseTasteDecoder Nothing
        |> maybeDecode "cuisines" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecode "meal_types" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecode "occasions" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecode "ingredients" (Json.Decode.list retrieveRecipeInformation200ResponseIngredientsInnerDecoder) Nothing
        |> maybeDecode "instructions" (Json.Decode.list retrieveRecipeInformation200ResponseInstructionsInnerDecoder) Nothing
        |> maybeDecode "credits" retrieveRecipeInformation200ResponseCreditsDecoder Nothing
        |> maybeDecode "scores" retrieveRecipeInformation200ResponseScoresDecoder Nothing


retrieveRecipeInformation200ResponseCreditsDecoder : Json.Decode.Decoder RetrieveRecipeInformation200ResponseCredits
retrieveRecipeInformation200ResponseCreditsDecoder =
    Json.Decode.succeed RetrieveRecipeInformation200ResponseCredits
        |> maybeDecodeNullable "license" Json.Decode.string Nothing
        |> maybeDecodeNullable "text" Json.Decode.string Nothing
        |> maybeDecodeNullable "source_name" Json.Decode.string Nothing
        |> maybeDecodeNullable "source_url" Json.Decode.string Nothing


retrieveRecipeInformation200ResponseDietaryPropertiesDecoder : Json.Decode.Decoder RetrieveRecipeInformation200ResponseDietaryProperties
retrieveRecipeInformation200ResponseDietaryPropertiesDecoder =
    Json.Decode.succeed RetrieveRecipeInformation200ResponseDietaryProperties
        |> maybeDecode "low_fodmap" Json.Decode.bool Nothing
        |> maybeDecode "vegetarian" Json.Decode.bool Nothing
        |> maybeDecode "vegan" Json.Decode.bool Nothing
        |> maybeDecode "gluten_free" Json.Decode.bool Nothing
        |> maybeDecode "dairy_free" Json.Decode.bool Nothing
        |> maybeDecodeNullable "gaps" Json.Decode.string Nothing
        |> maybeDecode "diets" (Json.Decode.list Json.Decode.string) Nothing


retrieveRecipeInformation200ResponseIngredientsInnerDecoder : Json.Decode.Decoder RetrieveRecipeInformation200ResponseIngredientsInner
retrieveRecipeInformation200ResponseIngredientsInnerDecoder =
    Json.Decode.succeed RetrieveRecipeInformation200ResponseIngredientsInner
        |> maybeDecodeNullable "image" Json.Decode.string Nothing
        |> maybeDecodeNullable "name_clean" Json.Decode.string Nothing
        |> maybeDecode "amount" Json.Decode.float Nothing
        |> maybeDecodeNullable "unit" Json.Decode.string Nothing
        |> maybeDecode "measures" retrieveRecipeInformation200ResponseIngredientsInnerMeasuresDecoder Nothing
        |> maybeDecodeNullable "original" Json.Decode.string Nothing
        |> maybeDecode "meta" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecodeNullable "original_name" Json.Decode.string Nothing
        |> maybeDecodeNullable "name" Json.Decode.string Nothing
        |> maybeDecode "id" Json.Decode.int Nothing
        |> maybeDecodeNullable "aisle" Json.Decode.string Nothing
        |> maybeDecodeNullable "consistency" Json.Decode.string Nothing


retrieveRecipeInformation200ResponseIngredientsInnerMeasuresDecoder : Json.Decode.Decoder RetrieveRecipeInformation200ResponseIngredientsInnerMeasures
retrieveRecipeInformation200ResponseIngredientsInnerMeasuresDecoder =
    Json.Decode.succeed RetrieveRecipeInformation200ResponseIngredientsInnerMeasures
        |> maybeDecode "metric" retrieveRecipeInformation200ResponseIngredientsInnerMeasuresMetricDecoder Nothing
        |> maybeDecode "us" retrieveRecipeInformation200ResponseIngredientsInnerMeasuresMetricDecoder Nothing


retrieveRecipeInformation200ResponseIngredientsInnerMeasuresMetricDecoder : Json.Decode.Decoder RetrieveRecipeInformation200ResponseIngredientsInnerMeasuresMetric
retrieveRecipeInformation200ResponseIngredientsInnerMeasuresMetricDecoder =
    Json.Decode.succeed RetrieveRecipeInformation200ResponseIngredientsInnerMeasuresMetric
        |> maybeDecodeNullable "unit_short" Json.Decode.string Nothing
        |> maybeDecode "amount" Json.Decode.float Nothing
        |> maybeDecodeNullable "unit_long" Json.Decode.string Nothing


retrieveRecipeInformation200ResponseInstructionsInnerDecoder : Json.Decode.Decoder RetrieveRecipeInformation200ResponseInstructionsInner
retrieveRecipeInformation200ResponseInstructionsInnerDecoder =
    Json.Decode.succeed RetrieveRecipeInformation200ResponseInstructionsInner
        |> maybeDecodeNullable "name" Json.Decode.string Nothing
        |> maybeDecode "steps" (Json.Decode.list retrieveRecipeInformation200ResponseInstructionsInnerStepsInnerDecoder) Nothing


retrieveRecipeInformation200ResponseInstructionsInnerStepsInnerDecoder : Json.Decode.Decoder RetrieveRecipeInformation200ResponseInstructionsInnerStepsInner
retrieveRecipeInformation200ResponseInstructionsInnerStepsInnerDecoder =
    Json.Decode.succeed RetrieveRecipeInformation200ResponseInstructionsInnerStepsInner
        |> maybeDecode "number" Json.Decode.int Nothing
        |> maybeDecode "ingredients" (Json.Decode.list retrieveRecipeInformation200ResponseInstructionsInnerStepsInnerIngredientsInnerDecoder) Nothing
        |> maybeDecode "equipment" (Json.Decode.list retrieveRecipeInformation200ResponseInstructionsInnerStepsInnerIngredientsInnerDecoder) Nothing
        |> maybeDecodeNullable "step" Json.Decode.string Nothing


retrieveRecipeInformation200ResponseInstructionsInnerStepsInnerIngredientsInnerDecoder : Json.Decode.Decoder RetrieveRecipeInformation200ResponseInstructionsInnerStepsInnerIngredientsInner
retrieveRecipeInformation200ResponseInstructionsInnerStepsInnerIngredientsInnerDecoder =
    Json.Decode.succeed RetrieveRecipeInformation200ResponseInstructionsInnerStepsInnerIngredientsInner
        |> maybeDecodeNullable "name" Json.Decode.string Nothing
        |> maybeDecodeNullable "image" Json.Decode.string Nothing
        |> maybeDecode "id" Json.Decode.int Nothing


retrieveRecipeInformation200ResponseNutritionDecoder : Json.Decode.Decoder RetrieveRecipeInformation200ResponseNutrition
retrieveRecipeInformation200ResponseNutritionDecoder =
    Json.Decode.succeed RetrieveRecipeInformation200ResponseNutrition
        |> maybeDecode "weight_per_serving" retrieveRecipeInformation200ResponseNutritionWeightPerServingDecoder Nothing
        |> maybeDecode "caloric_breakdown" retrieveRecipeInformation200ResponseNutritionCaloricBreakdownDecoder Nothing
        |> maybeDecode "flavonoids" (Json.Decode.list retrieveRecipeInformation200ResponseNutritionFlavonoidsInnerDecoder) Nothing
        |> maybeDecode "ingredient_breakdown" (Json.Decode.list retrieveRecipeInformation200ResponseNutritionIngredientBreakdownInnerDecoder) Nothing
        |> maybeDecode "properties" (Json.Decode.list searchRecipes200ResponseRecipesInnerNutritionNutrientsInnerDecoder) Nothing
        |> maybeDecode "nutrients" (Json.Decode.list retrieveRecipeInformation200ResponseNutritionIngredientBreakdownInnerNutrientsInnerDecoder) Nothing


retrieveRecipeInformation200ResponseNutritionCaloricBreakdownDecoder : Json.Decode.Decoder RetrieveRecipeInformation200ResponseNutritionCaloricBreakdown
retrieveRecipeInformation200ResponseNutritionCaloricBreakdownDecoder =
    Json.Decode.succeed RetrieveRecipeInformation200ResponseNutritionCaloricBreakdown
        |> maybeDecode "percent_fat" Json.Decode.float Nothing
        |> maybeDecode "percent_carbs" Json.Decode.float Nothing
        |> maybeDecode "percent_protein" Json.Decode.float Nothing


retrieveRecipeInformation200ResponseNutritionFlavonoidsInnerDecoder : Json.Decode.Decoder RetrieveRecipeInformation200ResponseNutritionFlavonoidsInner
retrieveRecipeInformation200ResponseNutritionFlavonoidsInnerDecoder =
    Json.Decode.succeed RetrieveRecipeInformation200ResponseNutritionFlavonoidsInner
        |> maybeDecodeNullable "name" Json.Decode.string Nothing
        |> maybeDecode "amount" Json.Decode.int Nothing
        |> maybeDecodeNullable "unit" Json.Decode.string Nothing


retrieveRecipeInformation200ResponseNutritionIngredientBreakdownInnerDecoder : Json.Decode.Decoder RetrieveRecipeInformation200ResponseNutritionIngredientBreakdownInner
retrieveRecipeInformation200ResponseNutritionIngredientBreakdownInnerDecoder =
    Json.Decode.succeed RetrieveRecipeInformation200ResponseNutritionIngredientBreakdownInner
        |> maybeDecodeNullable "name" Json.Decode.string Nothing
        |> maybeDecode "amount" Json.Decode.float Nothing
        |> maybeDecodeNullable "unit" Json.Decode.string Nothing
        |> maybeDecode "id" Json.Decode.int Nothing
        |> maybeDecode "nutrients" (Json.Decode.list retrieveRecipeInformation200ResponseNutritionIngredientBreakdownInnerNutrientsInnerDecoder) Nothing


retrieveRecipeInformation200ResponseNutritionIngredientBreakdownInnerNutrientsInnerDecoder : Json.Decode.Decoder RetrieveRecipeInformation200ResponseNutritionIngredientBreakdownInnerNutrientsInner
retrieveRecipeInformation200ResponseNutritionIngredientBreakdownInnerNutrientsInnerDecoder =
    Json.Decode.succeed RetrieveRecipeInformation200ResponseNutritionIngredientBreakdownInnerNutrientsInner
        |> maybeDecodeNullable "name" Json.Decode.string Nothing
        |> maybeDecode "percent_of_daily_needs" Json.Decode.float Nothing
        |> maybeDecode "amount" Json.Decode.float Nothing
        |> maybeDecodeNullable "unit" Json.Decode.string Nothing


retrieveRecipeInformation200ResponseNutritionWeightPerServingDecoder : Json.Decode.Decoder RetrieveRecipeInformation200ResponseNutritionWeightPerServing
retrieveRecipeInformation200ResponseNutritionWeightPerServingDecoder =
    Json.Decode.succeed RetrieveRecipeInformation200ResponseNutritionWeightPerServing
        |> maybeDecode "amount" Json.Decode.int Nothing
        |> maybeDecodeNullable "unit" Json.Decode.string Nothing


retrieveRecipeInformation200ResponseScoresDecoder : Json.Decode.Decoder RetrieveRecipeInformation200ResponseScores
retrieveRecipeInformation200ResponseScoresDecoder =
    Json.Decode.succeed RetrieveRecipeInformation200ResponseScores
        |> maybeDecode "meta_score" Json.Decode.float Nothing
        |> maybeDecode "weight_watcher_smart_points" Json.Decode.int Nothing
        |> maybeDecode "health_score" Json.Decode.int Nothing


retrieveRecipeInformation200ResponseTasteDecoder : Json.Decode.Decoder RetrieveRecipeInformation200ResponseTaste
retrieveRecipeInformation200ResponseTasteDecoder =
    Json.Decode.succeed RetrieveRecipeInformation200ResponseTaste
        |> maybeDecode "fattiness" Json.Decode.float Nothing
        |> maybeDecode "spiciness" Json.Decode.int Nothing
        |> maybeDecode "saltiness" Json.Decode.int Nothing
        |> maybeDecode "bitterness" Json.Decode.float Nothing
        |> maybeDecode "savoriness" Json.Decode.float Nothing
        |> maybeDecode "sweetness" Json.Decode.float Nothing
        |> maybeDecode "sourness" Json.Decode.float Nothing


retrieveRecipeInformation200ResponseTimesDecoder : Json.Decode.Decoder RetrieveRecipeInformation200ResponseTimes
retrieveRecipeInformation200ResponseTimesDecoder =
    Json.Decode.succeed RetrieveRecipeInformation200ResponseTimes
        |> maybeDecode "total_minutes" Json.Decode.int Nothing


scoreReadability200ResponseDecoder : Json.Decode.Decoder ScoreReadability200Response
scoreReadability200ResponseDecoder =
    Json.Decode.succeed ScoreReadability200Response
        |> maybeDecode "readability" scoreText200ResponseReadabilityDecoder Nothing


scoreText200ResponseDecoder : Json.Decode.Decoder ScoreText200Response
scoreText200ResponseDecoder =
    Json.Decode.succeed ScoreText200Response
        |> maybeDecode "number_of_words" Json.Decode.int Nothing
        |> maybeDecode "number_of_sentences" Json.Decode.int Nothing
        |> maybeDecode "readability" scoreText200ResponseReadabilityDecoder Nothing
        |> maybeDecode "skimmability" scoreText200ResponseSkimmabilityDecoder Nothing
        |> maybeDecode "interestingness" scoreText200ResponseInterestingnessDecoder Nothing
        |> maybeDecode "style" scoreText200ResponseStyleDecoder Nothing
        |> maybeDecode "total_score" Json.Decode.float Nothing


scoreText200ResponseInterestingnessDecoder : Json.Decode.Decoder ScoreText200ResponseInterestingness
scoreText200ResponseInterestingnessDecoder =
    Json.Decode.succeed ScoreText200ResponseInterestingness
        |> maybeDecode "mainscores" scoreText200ResponseSkimmabilityMainscoresDecoder Nothing
        |> maybeDecode "subscores" scoreText200ResponseInterestingnessSubscoresDecoder Nothing


scoreText200ResponseInterestingnessSubscoresDecoder : Json.Decode.Decoder ScoreText200ResponseInterestingnessSubscores
scoreText200ResponseInterestingnessSubscoresDecoder =
    Json.Decode.succeed ScoreText200ResponseInterestingnessSubscores
        |> maybeDecode "title_rating_score" (Json.Decode.list Json.Decode.int) Nothing
        |> maybeDecode "quote_score" (Json.Decode.list Json.Decode.int) Nothing
        |> maybeDecode "length_score" (Json.Decode.list Json.Decode.int) Nothing
        |> maybeDecode "link_score" (Json.Decode.list Json.Decode.int) Nothing
        |> maybeDecode "google_hits_score" (Json.Decode.list Json.Decode.int) Nothing


scoreText200ResponseReadabilityDecoder : Json.Decode.Decoder ScoreText200ResponseReadability
scoreText200ResponseReadabilityDecoder =
    Json.Decode.succeed ScoreText200ResponseReadability
        |> maybeDecode "mainscores" scoreText200ResponseReadabilityMainscoresDecoder Nothing
        |> maybeDecode "subscores" scoreText200ResponseReadabilitySubscoresDecoder Nothing


scoreText200ResponseReadabilityMainscoresDecoder : Json.Decode.Decoder ScoreText200ResponseReadabilityMainscores
scoreText200ResponseReadabilityMainscoresDecoder =
    Json.Decode.succeed ScoreText200ResponseReadabilityMainscores
        |> maybeDecode "total_possible" Json.Decode.int Nothing
        |> maybeDecode "total" Json.Decode.int Nothing


scoreText200ResponseReadabilitySubscoresDecoder : Json.Decode.Decoder ScoreText200ResponseReadabilitySubscores
scoreText200ResponseReadabilitySubscoresDecoder =
    Json.Decode.succeed ScoreText200ResponseReadabilitySubscores
        |> maybeDecode "reading_time_seconds" Json.Decode.int Nothing
        |> maybeDecode "forcast" Json.Decode.float Nothing
        |> maybeDecode "flesch" Json.Decode.float Nothing
        |> maybeDecode "smog" Json.Decode.float Nothing
        |> maybeDecode "ari" Json.Decode.float Nothing
        |> maybeDecode "lix" Json.Decode.float Nothing
        |> maybeDecode "coleman_liau" Json.Decode.float Nothing
        |> maybeDecode "kincaid" Json.Decode.float Nothing
        |> maybeDecode "fog" Json.Decode.float Nothing


scoreText200ResponseSkimmabilityDecoder : Json.Decode.Decoder ScoreText200ResponseSkimmability
scoreText200ResponseSkimmabilityDecoder =
    Json.Decode.succeed ScoreText200ResponseSkimmability
        |> maybeDecode "mainscores" scoreText200ResponseSkimmabilityMainscoresDecoder Nothing
        |> maybeDecode "subscores" scoreText200ResponseSkimmabilitySubscoresDecoder Nothing


scoreText200ResponseSkimmabilityMainscoresDecoder : Json.Decode.Decoder ScoreText200ResponseSkimmabilityMainscores
scoreText200ResponseSkimmabilityMainscoresDecoder =
    Json.Decode.succeed ScoreText200ResponseSkimmabilityMainscores
        |> maybeDecode "total_possible" Json.Decode.int Nothing
        |> maybeDecode "total" Json.Decode.float Nothing


scoreText200ResponseSkimmabilitySubscoresDecoder : Json.Decode.Decoder ScoreText200ResponseSkimmabilitySubscores
scoreText200ResponseSkimmabilitySubscoresDecoder =
    Json.Decode.succeed ScoreText200ResponseSkimmabilitySubscores
        |> maybeDecode "bullet_point_ratio_score" (Json.Decode.list Json.Decode.int) Nothing
        |> maybeDecode "image_score" (Json.Decode.list Json.Decode.int) Nothing
        |> maybeDecode "highlighted_word_ratio_score" (Json.Decode.list Json.Decode.int) Nothing
        |> maybeDecode "video_score" (Json.Decode.list Json.Decode.int) Nothing
        |> maybeDecode "paragraph_score" (Json.Decode.list Json.Decode.int) Nothing
        |> maybeDecode "paragraph_headline_ratio_score" (Json.Decode.list Json.Decode.int) Nothing


scoreText200ResponseStyleDecoder : Json.Decode.Decoder ScoreText200ResponseStyle
scoreText200ResponseStyleDecoder =
    Json.Decode.succeed ScoreText200ResponseStyle
        |> maybeDecode "mainscores" scoreText200ResponseReadabilityMainscoresDecoder Nothing
        |> maybeDecode "subscores" scoreText200ResponseStyleSubscoresDecoder Nothing


scoreText200ResponseStyleSubscoresDecoder : Json.Decode.Decoder ScoreText200ResponseStyleSubscores
scoreText200ResponseStyleSubscoresDecoder =
    Json.Decode.succeed ScoreText200ResponseStyleSubscores
        |> maybeDecode "abbreviation_score" (Json.Decode.list Json.Decode.int) Nothing
        |> maybeDecode "style_score" (Json.Decode.list Json.Decode.int) Nothing
        |> maybeDecode "spelling_score" (Json.Decode.list Json.Decode.int) Nothing


searchBooks200ResponseDecoder : Json.Decode.Decoder SearchBooks200Response
searchBooks200ResponseDecoder =
    Json.Decode.succeed SearchBooks200Response
        |> maybeDecode "available" Json.Decode.int Nothing
        |> maybeDecode "number" Json.Decode.int Nothing
        |> maybeDecode "offset" Json.Decode.int Nothing
        |> maybeDecode "books" (Json.Decode.list searchBooks200ResponseBooksInnerDecoder) Nothing


searchBooks200ResponseBooksInnerDecoder : Json.Decode.Decoder SearchBooks200ResponseBooksInner
searchBooks200ResponseBooksInnerDecoder =
    Json.Decode.succeed SearchBooks200ResponseBooksInner
        |> maybeDecodeNullable "title" Json.Decode.string Nothing
        |> maybeDecodeNullable "image" Json.Decode.string Nothing
        |> maybeDecode "id" Json.Decode.int Nothing


searchGifs200ResponseDecoder : Json.Decode.Decoder SearchGifs200Response
searchGifs200ResponseDecoder =
    Json.Decode.succeed SearchGifs200Response
        |> maybeDecode "images" (Json.Decode.list searchGifs200ResponseImagesInnerDecoder) Nothing


searchGifs200ResponseImagesInnerDecoder : Json.Decode.Decoder SearchGifs200ResponseImagesInner
searchGifs200ResponseImagesInnerDecoder =
    Json.Decode.succeed SearchGifs200ResponseImagesInner
        |> maybeDecode "width" Json.Decode.int Nothing
        |> maybeDecodeNullable "url" Json.Decode.string Nothing
        |> maybeDecode "height" Json.Decode.int Nothing


searchJokes200ResponseDecoder : Json.Decode.Decoder SearchJokes200Response
searchJokes200ResponseDecoder =
    Json.Decode.succeed SearchJokes200Response
        |> maybeDecode "jokes" (Json.Decode.list searchJokes200ResponseJokesInnerDecoder) Nothing
        |> maybeDecode "available" Json.Decode.int Nothing


searchJokes200ResponseJokesInnerDecoder : Json.Decode.Decoder SearchJokes200ResponseJokesInner
searchJokes200ResponseJokesInnerDecoder =
    Json.Decode.succeed SearchJokes200ResponseJokesInner
        |> maybeDecodeNullable "joke" Json.Decode.string Nothing


searchMemes200ResponseDecoder : Json.Decode.Decoder SearchMemes200Response
searchMemes200ResponseDecoder =
    Json.Decode.succeed SearchMemes200Response
        |> maybeDecode "memes" (Json.Decode.list searchMemes200ResponseMemesInnerDecoder) Nothing
        |> maybeDecode "available" Json.Decode.int Nothing


searchMemes200ResponseMemesInnerDecoder : Json.Decode.Decoder SearchMemes200ResponseMemesInner
searchMemes200ResponseMemesInnerDecoder =
    Json.Decode.succeed SearchMemes200ResponseMemesInner
        |> maybeDecodeNullable "type" Json.Decode.string Nothing
        |> maybeDecodeNullable "description" Json.Decode.string Nothing
        |> maybeDecodeNullable "url" Json.Decode.string Nothing


searchNews200ResponseDecoder : Json.Decode.Decoder SearchNews200Response
searchNews200ResponseDecoder =
    Json.Decode.succeed SearchNews200Response
        |> maybeDecode "offset" Json.Decode.int Nothing
        |> maybeDecode "number" Json.Decode.int Nothing
        |> maybeDecode "available" Json.Decode.int Nothing
        |> maybeDecode "news" (Json.Decode.list searchNews200ResponseNewsInnerDecoder) Nothing


searchNews200ResponseNewsInnerDecoder : Json.Decode.Decoder SearchNews200ResponseNewsInner
searchNews200ResponseNewsInnerDecoder =
    Json.Decode.succeed SearchNews200ResponseNewsInner
        |> maybeDecodeNullable "summary" Json.Decode.string Nothing
        |> maybeDecodeNullable "image" Json.Decode.string Nothing
        |> maybeDecode "sentiment" Json.Decode.float Nothing
        |> maybeDecodeNullable "source_country" Json.Decode.string Nothing
        |> maybeDecodeNullable "language" Json.Decode.string Nothing
        |> maybeDecode "id" Json.Decode.int Nothing
        |> maybeDecodeNullable "text" Json.Decode.string Nothing
        |> maybeDecodeNullable "title" Json.Decode.string Nothing
        |> maybeDecodeNullable "publish_date" Json.Decode.string Nothing
        |> maybeDecodeNullable "url" Json.Decode.string Nothing
        |> maybeDecode "authors" (Json.Decode.list Json.Decode.string) Nothing


searchRecipes200ResponseDecoder : Json.Decode.Decoder SearchRecipes200Response
searchRecipes200ResponseDecoder =
    Json.Decode.succeed SearchRecipes200Response
        |> maybeDecode "offset" Json.Decode.int Nothing
        |> maybeDecode "number" Json.Decode.int Nothing
        |> maybeDecode "recipes" (Json.Decode.list searchRecipes200ResponseRecipesInnerDecoder) Nothing
        |> maybeDecode "total_results" Json.Decode.int Nothing


searchRecipes200ResponseRecipesInnerDecoder : Json.Decode.Decoder SearchRecipes200ResponseRecipesInner
searchRecipes200ResponseRecipesInnerDecoder =
    Json.Decode.succeed SearchRecipes200ResponseRecipesInner
        |> maybeDecode "images" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecode "nutrition" searchRecipes200ResponseRecipesInnerNutritionDecoder Nothing
        |> maybeDecode "id" Json.Decode.int Nothing
        |> maybeDecodeNullable "title" Json.Decode.string Nothing


searchRecipes200ResponseRecipesInnerNutritionDecoder : Json.Decode.Decoder SearchRecipes200ResponseRecipesInnerNutrition
searchRecipes200ResponseRecipesInnerNutritionDecoder =
    Json.Decode.succeed SearchRecipes200ResponseRecipesInnerNutrition
        |> maybeDecode "nutrients" (Json.Decode.list searchRecipes200ResponseRecipesInnerNutritionNutrientsInnerDecoder) Nothing


searchRecipes200ResponseRecipesInnerNutritionNutrientsInnerDecoder : Json.Decode.Decoder SearchRecipes200ResponseRecipesInnerNutritionNutrientsInner
searchRecipes200ResponseRecipesInnerNutritionNutrientsInnerDecoder =
    Json.Decode.succeed SearchRecipes200ResponseRecipesInnerNutritionNutrientsInner
        |> maybeDecodeNullable "name" Json.Decode.string Nothing
        |> maybeDecode "amount" Json.Decode.float Nothing
        |> maybeDecodeNullable "unit" Json.Decode.string Nothing


searchRestaurants200ResponseDecoder : Json.Decode.Decoder SearchRestaurants200Response
searchRestaurants200ResponseDecoder =
    Json.Decode.succeed SearchRestaurants200Response
        |> maybeDecode "restaurants" (Json.Decode.list searchRestaurants200ResponseRestaurantsInnerDecoder) Nothing


searchRestaurants200ResponseRestaurantsInnerDecoder : Json.Decode.Decoder SearchRestaurants200ResponseRestaurantsInner
searchRestaurants200ResponseRestaurantsInnerDecoder =
    Json.Decode.succeed SearchRestaurants200ResponseRestaurantsInner
        |> maybeDecode "offers_third_party_delivery" Json.Decode.bool Nothing
        |> maybeDecode "address" searchRestaurants200ResponseRestaurantsInnerAddressDecoder Nothing
        |> maybeDecode "supports_upc_codes" Json.Decode.bool Nothing
        |> maybeDecode "is_open" Json.Decode.bool Nothing
        |> maybeDecodeNullable "description" Json.Decode.string Nothing
        |> maybeDecode "weighted_rating_value" Json.Decode.int Nothing
        |> maybeDecodeNullable "type" Json.Decode.string Nothing
        |> maybeDecode "offers_first_party_delivery" Json.Decode.bool Nothing
        |> maybeDecode "aggregated_rating_count" Json.Decode.int Nothing
        |> maybeDecode "pickup_enabled" Json.Decode.bool Nothing
        |> maybeDecode "cuisines" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecode "miles" Json.Decode.float Nothing
        |> maybeDecode "dollar_signs" Json.Decode.int Nothing
        |> maybeDecode "delivery_enabled" Json.Decode.bool Nothing
        |> maybeDecodeNullable "name" Json.Decode.string Nothing
        |> maybeDecode "phone_number" Json.Decode.float Nothing
        |> maybeDecodeNullable "_id" Json.Decode.string Nothing
        |> maybeDecode "local_hours" searchRestaurants200ResponseRestaurantsInnerLocalHoursDecoder Nothing


searchRestaurants200ResponseRestaurantsInnerAddressDecoder : Json.Decode.Decoder SearchRestaurants200ResponseRestaurantsInnerAddress
searchRestaurants200ResponseRestaurantsInnerAddressDecoder =
    Json.Decode.succeed SearchRestaurants200ResponseRestaurantsInnerAddress
        |> maybeDecodeNullable "zipcode" Json.Decode.string Nothing
        |> maybeDecodeNullable "country" Json.Decode.string Nothing
        |> maybeDecodeNullable "city" Json.Decode.string Nothing
        |> maybeDecode "latitude" Json.Decode.float Nothing
        |> maybeDecode "lon" Json.Decode.float Nothing
        |> maybeDecodeNullable "street_addr_2" Json.Decode.string Nothing
        |> maybeDecodeNullable "state" Json.Decode.string Nothing
        |> maybeDecodeNullable "street_addr" Json.Decode.string Nothing
        |> maybeDecode "lat" Json.Decode.float Nothing
        |> maybeDecode "longitude" Json.Decode.float Nothing


searchRestaurants200ResponseRestaurantsInnerLocalHoursDecoder : Json.Decode.Decoder SearchRestaurants200ResponseRestaurantsInnerLocalHours
searchRestaurants200ResponseRestaurantsInnerLocalHoursDecoder =
    Json.Decode.succeed SearchRestaurants200ResponseRestaurantsInnerLocalHours
        |> maybeDecode "operational" searchRestaurants200ResponseRestaurantsInnerLocalHoursOperationalDecoder Nothing
        |> maybeDecode "delivery" searchRestaurants200ResponseRestaurantsInnerLocalHoursOperationalDecoder Nothing
        |> maybeDecode "pickup" searchRestaurants200ResponseRestaurantsInnerLocalHoursOperationalDecoder Nothing
        |> maybeDecode "dine_in" searchRestaurants200ResponseRestaurantsInnerLocalHoursOperationalDecoder Nothing


searchRestaurants200ResponseRestaurantsInnerLocalHoursOperationalDecoder : Json.Decode.Decoder SearchRestaurants200ResponseRestaurantsInnerLocalHoursOperational
searchRestaurants200ResponseRestaurantsInnerLocalHoursOperationalDecoder =
    Json.Decode.succeed SearchRestaurants200ResponseRestaurantsInnerLocalHoursOperational
        |> maybeDecodeNullable "sunday" Json.Decode.string Nothing
        |> maybeDecodeNullable "saturday" Json.Decode.string Nothing
        |> maybeDecodeNullable "tuesday" Json.Decode.string Nothing
        |> maybeDecodeNullable "thursday" Json.Decode.string Nothing
        |> maybeDecodeNullable "friday" Json.Decode.string Nothing
        |> maybeDecodeNullable "wednesday" Json.Decode.string Nothing
        |> maybeDecodeNullable "monday" Json.Decode.string Nothing


searchRoyaltyFreeImages200ResponseDecoder : Json.Decode.Decoder SearchRoyaltyFreeImages200Response
searchRoyaltyFreeImages200ResponseDecoder =
    Json.Decode.succeed SearchRoyaltyFreeImages200Response
        |> maybeDecode "images" (Json.Decode.list searchRoyaltyFreeImages200ResponseImagesInnerDecoder) Nothing


searchRoyaltyFreeImages200ResponseImagesInnerDecoder : Json.Decode.Decoder SearchRoyaltyFreeImages200ResponseImagesInner
searchRoyaltyFreeImages200ResponseImagesInnerDecoder =
    Json.Decode.succeed SearchRoyaltyFreeImages200ResponseImagesInner
        |> maybeDecode "width" Json.Decode.int Nothing
        |> maybeDecode "license" searchRoyaltyFreeImages200ResponseImagesInnerLicenseDecoder Nothing
        |> maybeDecodeNullable "thumbnail" Json.Decode.string Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "url" Json.Decode.string Nothing
        |> maybeDecode "height" Json.Decode.int Nothing


searchRoyaltyFreeImages200ResponseImagesInnerLicenseDecoder : Json.Decode.Decoder SearchRoyaltyFreeImages200ResponseImagesInnerLicense
searchRoyaltyFreeImages200ResponseImagesInnerLicenseDecoder =
    Json.Decode.succeed SearchRoyaltyFreeImages200ResponseImagesInnerLicense
        |> maybeDecodeNullable "name" Json.Decode.string Nothing
        |> maybeDecodeNullable "link" Json.Decode.string Nothing


searchWeb200ResponseDecoder : Json.Decode.Decoder SearchWeb200Response
searchWeb200ResponseDecoder =
    Json.Decode.succeed SearchWeb200Response
        |> maybeDecode "results" (Json.Decode.list searchWeb200ResponseResultsInnerDecoder) Nothing


searchWeb200ResponseResultsInnerDecoder : Json.Decode.Decoder SearchWeb200ResponseResultsInner
searchWeb200ResponseResultsInnerDecoder =
    Json.Decode.succeed SearchWeb200ResponseResultsInner
        |> maybeDecodeNullable "title" Json.Decode.string Nothing
        |> maybeDecodeNullable "summary" Json.Decode.string Nothing
        |> maybeDecodeNullable "url" Json.Decode.string Nothing


singularizeWord200ResponseDecoder : Json.Decode.Decoder SingularizeWord200Response
singularizeWord200ResponseDecoder =
    Json.Decode.succeed SingularizeWord200Response
        |> maybeDecodeNullable "original" Json.Decode.string Nothing
        |> maybeDecodeNullable "singular" Json.Decode.string Nothing


storeKeyValueGET200ResponseDecoder : Json.Decode.Decoder StoreKeyValueGET200Response
storeKeyValueGET200ResponseDecoder =
    Json.Decode.succeed StoreKeyValueGET200Response
        |> maybeDecodeNullable "status" Json.Decode.string Nothing


textStemming200ResponseDecoder : Json.Decode.Decoder TextStemming200Response
textStemming200ResponseDecoder =
    Json.Decode.succeed TextStemming200Response
        |> maybeDecodeNullable "original" Json.Decode.string Nothing
        |> maybeDecodeNullable "stemmed" Json.Decode.string Nothing




-- HELPER


type alias EncodedField =
    Maybe ( String, Json.Encode.Value )


encodeObject : List EncodedField -> Json.Encode.Value
encodeObject =
    Json.Encode.object << List.filterMap identity


encode : String -> (a -> Json.Encode.Value) -> a -> EncodedField
encode key encoder value =
    Just ( key, encoder value )


encodeNullable : String -> (a -> Json.Encode.Value) -> Maybe a -> EncodedField
encodeNullable key encoder value =
    Just ( key, Maybe.withDefault Json.Encode.null (Maybe.map encoder value) )


maybeEncode : String -> (a -> Json.Encode.Value) -> Maybe a -> EncodedField
maybeEncode key encoder =
    Maybe.map (Tuple.pair key << encoder)


maybeEncodeNullable : String -> (a -> Json.Encode.Value) -> Maybe a -> EncodedField
maybeEncodeNullable =
    encodeNullable


decode : String -> Json.Decode.Decoder a -> Json.Decode.Decoder (a -> b) -> Json.Decode.Decoder b
decode key decoder =
    decodeChain (Json.Decode.field key decoder)


decodeLazy : (a -> c) -> String -> Json.Decode.Decoder a -> Json.Decode.Decoder (c -> b) -> Json.Decode.Decoder b
decodeLazy f key decoder =
    decodeChainLazy f (Json.Decode.field key decoder)


decodeNullable : String -> Json.Decode.Decoder a -> Json.Decode.Decoder (Maybe a -> b) -> Json.Decode.Decoder b
decodeNullable key decoder =
    decodeChain (maybeField key decoder Nothing)


decodeNullableLazy : (Maybe a -> c) -> String -> Json.Decode.Decoder a -> Json.Decode.Decoder (c -> b) -> Json.Decode.Decoder b
decodeNullableLazy f key decoder =
    decodeChainLazy f (maybeField key decoder Nothing)


maybeDecode : String -> Json.Decode.Decoder a -> Maybe a -> Json.Decode.Decoder (Maybe a -> b) -> Json.Decode.Decoder b
maybeDecode key decoder fallback =
    -- let's be kind to null-values as well
    decodeChain (maybeField key decoder fallback)


maybeDecodeLazy : (Maybe a -> c) -> String -> Json.Decode.Decoder a -> Maybe a -> Json.Decode.Decoder (c -> b) -> Json.Decode.Decoder b
maybeDecodeLazy f key decoder fallback =
    -- let's be kind to null-values as well
    decodeChainLazy f (maybeField key decoder fallback)


maybeDecodeNullable : String -> Json.Decode.Decoder a -> Maybe a -> Json.Decode.Decoder (Maybe a -> b) -> Json.Decode.Decoder b
maybeDecodeNullable key decoder fallback =
    decodeChain (maybeField key decoder fallback)


maybeDecodeNullableLazy : (Maybe a -> c) -> String -> Json.Decode.Decoder a -> Maybe a -> Json.Decode.Decoder (c -> b) -> Json.Decode.Decoder b
maybeDecodeNullableLazy f key decoder fallback =
    decodeChainLazy f (maybeField key decoder fallback)


maybeField : String -> Json.Decode.Decoder a -> Maybe a -> Json.Decode.Decoder (Maybe a)
maybeField key decoder fallback =
    let
        fieldDecoder =
            Json.Decode.field key Json.Decode.value

        valueDecoder =
            Json.Decode.oneOf [ Json.Decode.map Just decoder, Json.Decode.null fallback ]

        decodeObject rawObject =
            case Json.Decode.decodeValue fieldDecoder rawObject of
                Ok rawValue ->
                    case Json.Decode.decodeValue valueDecoder rawValue of
                        Ok value ->
                            Json.Decode.succeed value

                        Err error ->
                            Json.Decode.fail (Json.Decode.errorToString error)

                Err _ ->
                    Json.Decode.succeed fallback
    in
    Json.Decode.value
        |> Json.Decode.andThen decodeObject


decodeChain : Json.Decode.Decoder a -> Json.Decode.Decoder (a -> b) -> Json.Decode.Decoder b
decodeChain =
    Json.Decode.map2 (|>)


decodeChainLazy : (a -> c) -> Json.Decode.Decoder a -> Json.Decode.Decoder (c -> b) -> Json.Decode.Decoder b
decodeChainLazy f =
    decodeChain << Json.Decode.map f
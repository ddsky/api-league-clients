{-
   API League
   API League is a Hub for World Class APIs.

   The version of the OpenAPI document: 1.6.4
   Contact: mail@apileague.com

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git

   DO NOT EDIT THIS FILE MANUALLY.

   For more info on generating Elm code, see https://eriktim.github.io/openapi-elm/
-}


module Api.Request.Humor exposing
    ( generateNonsenseWordAPI
    , randomJokeAPI
    , randomMemeAPI
    , searchGifsAPI
    , searchJokesAPI
    , searchMemesAPI
    )

import Api
import Api.Data exposing (..)
import Dict
import Http
import Json.Decode
import Json.Encode

{-| Generate a funny sounding nonsense word. This is useful for generating random words for games, naming things, or just for fun. The response will contain the generated word and a rating of how funny it is.
-}
generateNonsenseWordAPI : Api.Request Api.Data.GenerateNonsenseWordAPI200Response
generateNonsenseWordAPI =
    Api.request
        "GET"
        "/generate-nonsense-word"
        []
        []
        []
        Nothing
        Api.Data.generateNonsenseWordAPI200ResponseDecoder


{-| This is a simple API that returns a random joke. You can filter the jokes by tags and keywords. To make sure they are safe for work, you could use the exclude-tags parameter to exclude jokes with certain tags such as \"nsfw\" or \"religious\".
-}
randomJokeAPI : Maybe String -> Maybe String -> Maybe Float -> Maybe Int -> Api.Request Api.Data.SearchJokesAPI200ResponseJokesInner
randomJokeAPI includeTags_query excludeTags_query minRating_query maxLength_query =
    Api.request
        "GET"
        "/retrieve-random-joke"
        []
        [ ( "include-tags", Maybe.map identity includeTags_query ), ( "exclude-tags", Maybe.map identity excludeTags_query ), ( "min-rating", Maybe.map String.fromFloat minRating_query ), ( "max-length", Maybe.map String.fromInt maxLength_query ) ]
        []
        Nothing
        Api.Data.searchJokesAPI200ResponseJokesInnerDecoder


{-| Get a random meme out of over 300,000+ memes. To get the latest memes, you can use the max-age-days parameter.
-}
randomMemeAPI : Maybe String -> Maybe Bool -> Maybe String -> Maybe Float -> Maybe Int -> Api.Request Api.Data.RandomMemeAPI200Response
randomMemeAPI keywords_query keywordsInImage_query mediaType_query minRating_query maxAgeDays_query =
    Api.request
        "GET"
        "/retrieve-random-meme"
        []
        [ ( "keywords", Maybe.map identity keywords_query ), ( "keywords-in-image", Maybe.map (\val -> if val then "true" else "false") keywordsInImage_query ), ( "media-type", Maybe.map identity mediaType_query ), ( "min-rating", Maybe.map String.fromFloat minRating_query ), ( "max-age-days", Maybe.map String.fromInt maxAgeDays_query ) ]
        []
        Nothing
        Api.Data.randomMemeAPI200ResponseDecoder


{-| Search through hundreds of thousands of gifs to match any reaction you want. The gifs are returned in a list with the URL, width, and height of the gif.
-}
searchGifsAPI : String -> Maybe Int -> Api.Request Api.Data.SearchGifsAPI200Response
searchGifsAPI query_query number_query =
    Api.request
        "GET"
        "/search-gifs"
        []
        [ ( "query", Just <| identity query_query ), ( "number", Maybe.map String.fromInt number_query ) ]
        []
        Nothing
        Api.Data.searchGifsAPI200ResponseDecoder


{-| With over 50,000 jokes, you should find something for any occasion. There are 27 categories/tags to choose from, but you can also search for very specific words within jokes.
-}
searchJokesAPI : Maybe String -> Maybe String -> Maybe String -> Maybe Float -> Maybe Float -> Maybe Int -> Maybe Int -> Api.Request Api.Data.SearchJokesAPI200Response
searchJokesAPI keywords_query includeTags_query excludeTags_query minRating_query maxLength_query offset_query number_query =
    Api.request
        "GET"
        "/search-jokes"
        []
        [ ( "keywords", Maybe.map identity keywords_query ), ( "include-tags", Maybe.map identity includeTags_query ), ( "exclude-tags", Maybe.map identity excludeTags_query ), ( "min-rating", Maybe.map String.fromFloat minRating_query ), ( "max-length", Maybe.map String.fromFloat maxLength_query ), ( "offset", Maybe.map String.fromInt offset_query ), ( "number", Maybe.map String.fromInt number_query ) ]
        []
        Nothing
        Api.Data.searchJokesAPI200ResponseDecoder


{-| Search over 300,000 memes by keyword, rating, and age. Most memes are stills (images) but using the media-type you can also get videos. You can even search for text within memes. You'll surely find something funny.
-}
searchMemesAPI : Maybe String -> Maybe Bool -> Maybe String -> Maybe Float -> Maybe Int -> Maybe Int -> Maybe Int -> Api.Request Api.Data.SearchMemesAPI200Response
searchMemesAPI keywords_query keywordsInImage_query mediaType_query minRating_query maxAgeDays_query offset_query number_query =
    Api.request
        "GET"
        "/search-memes"
        []
        [ ( "keywords", Maybe.map identity keywords_query ), ( "keywords-in-image", Maybe.map (\val -> if val then "true" else "false") keywordsInImage_query ), ( "media-type", Maybe.map identity mediaType_query ), ( "min-rating", Maybe.map String.fromFloat minRating_query ), ( "max-age-days", Maybe.map String.fromInt maxAgeDays_query ), ( "offset", Maybe.map String.fromInt offset_query ), ( "number", Maybe.map String.fromInt number_query ) ]
        []
        Nothing
        Api.Data.searchMemesAPI200ResponseDecoder


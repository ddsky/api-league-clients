<?php
/**
 * InlineResponse20018InterestingnessSubscores
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  com.apileague.client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * API League
 *
 * API League is a Hub for World Class APIs.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: mail@apileague.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace com.apileague.client\com.apileague.client.model;

use \ArrayAccess;
use \com.apileague.client\ObjectSerializer;

/**
 * InlineResponse20018InterestingnessSubscores Class Doc Comment
 *
 * @category Class
 * @package  com.apileague.client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class InlineResponse20018InterestingnessSubscores implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'inline_response_200_18_interestingness_subscores';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'title_rating_score' => 'int[]',
        'quote_score' => 'int[]',
        'length_score' => 'int[]',
        'link_score' => 'int[]',
        'google_hits_score' => 'int[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'title_rating_score' => null,
        'quote_score' => null,
        'length_score' => null,
        'link_score' => null,
        'google_hits_score' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'title_rating_score' => 'title_rating_score',
        'quote_score' => 'quote_score',
        'length_score' => 'length_score',
        'link_score' => 'link_score',
        'google_hits_score' => 'google_hits_score'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'title_rating_score' => 'setTitleRatingScore',
        'quote_score' => 'setQuoteScore',
        'length_score' => 'setLengthScore',
        'link_score' => 'setLinkScore',
        'google_hits_score' => 'setGoogleHitsScore'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'title_rating_score' => 'getTitleRatingScore',
        'quote_score' => 'getQuoteScore',
        'length_score' => 'getLengthScore',
        'link_score' => 'getLinkScore',
        'google_hits_score' => 'getGoogleHitsScore'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['title_rating_score'] = $data['title_rating_score'] ?? null;
        $this->container['quote_score'] = $data['quote_score'] ?? null;
        $this->container['length_score'] = $data['length_score'] ?? null;
        $this->container['link_score'] = $data['link_score'] ?? null;
        $this->container['google_hits_score'] = $data['google_hits_score'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets title_rating_score
     *
     * @return int[]|null
     */
    public function getTitleRatingScore()
    {
        return $this->container['title_rating_score'];
    }

    /**
     * Sets title_rating_score
     *
     * @param int[]|null $title_rating_score title_rating_score
     *
     * @return self
     */
    public function setTitleRatingScore($title_rating_score)
    {
        $this->container['title_rating_score'] = $title_rating_score;

        return $this;
    }

    /**
     * Gets quote_score
     *
     * @return int[]|null
     */
    public function getQuoteScore()
    {
        return $this->container['quote_score'];
    }

    /**
     * Sets quote_score
     *
     * @param int[]|null $quote_score quote_score
     *
     * @return self
     */
    public function setQuoteScore($quote_score)
    {
        $this->container['quote_score'] = $quote_score;

        return $this;
    }

    /**
     * Gets length_score
     *
     * @return int[]|null
     */
    public function getLengthScore()
    {
        return $this->container['length_score'];
    }

    /**
     * Sets length_score
     *
     * @param int[]|null $length_score length_score
     *
     * @return self
     */
    public function setLengthScore($length_score)
    {
        $this->container['length_score'] = $length_score;

        return $this;
    }

    /**
     * Gets link_score
     *
     * @return int[]|null
     */
    public function getLinkScore()
    {
        return $this->container['link_score'];
    }

    /**
     * Sets link_score
     *
     * @param int[]|null $link_score link_score
     *
     * @return self
     */
    public function setLinkScore($link_score)
    {
        $this->container['link_score'] = $link_score;

        return $this;
    }

    /**
     * Gets google_hits_score
     *
     * @return int[]|null
     */
    public function getGoogleHitsScore()
    {
        return $this->container['google_hits_score'];
    }

    /**
     * Sets google_hits_score
     *
     * @param int[]|null $google_hits_score google_hits_score
     *
     * @return self
     */
    public function setGoogleHitsScore($google_hits_score)
    {
        $this->container['google_hits_score'] = $google_hits_score;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}



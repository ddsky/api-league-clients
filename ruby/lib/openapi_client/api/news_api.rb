=begin
#API League

#API League is a Hub for World Class APIs.

The version of the OpenAPI document: 1.6.4
Contact: mail@apileague.com
Generated by: https://openapi-generator.tech
Generator version: 7.8.0-SNAPSHOT

=end

require 'cgi'

module OpenapiClient
  class NewsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Extract News API
    # Extract a news article from a website to a well structure JSON object. The API will return the title, text, URL, image, publish date, author, language, source country, and sentiment of the news article.
    # @param url [String] The url of the news.
    # @param analyze [Boolean] Whether to analyze the news (extract entities etc.)
    # @param [Hash] opts the optional parameters
    # @return [ExtractNewsAPI200Response]
    def extract_news_api(url, analyze, opts = {})
      data, _status_code, _headers = extract_news_api_with_http_info(url, analyze, opts)
      data
    end

    # Extract News API
    # Extract a news article from a website to a well structure JSON object. The API will return the title, text, URL, image, publish date, author, language, source country, and sentiment of the news article.
    # @param url [String] The url of the news.
    # @param analyze [Boolean] Whether to analyze the news (extract entities etc.)
    # @param [Hash] opts the optional parameters
    # @return [Array<(ExtractNewsAPI200Response, Integer, Hash)>] ExtractNewsAPI200Response data, response status code and response headers
    def extract_news_api_with_http_info(url, analyze, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: NewsApi.extract_news_api ...'
      end
      # verify the required parameter 'url' is set
      if @api_client.config.client_side_validation && url.nil?
        fail ArgumentError, "Missing the required parameter 'url' when calling NewsApi.extract_news_api"
      end
      if @api_client.config.client_side_validation && url.to_s.length > 1000
        fail ArgumentError, 'invalid value for "url" when calling NewsApi.extract_news_api, the character length must be smaller than or equal to 1000.'
      end

      pattern = Regexp.new(/./)
      if @api_client.config.client_side_validation && url !~ pattern
        fail ArgumentError, "invalid value for 'url' when calling NewsApi.extract_news_api, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'analyze' is set
      if @api_client.config.client_side_validation && analyze.nil?
        fail ArgumentError, "Missing the required parameter 'analyze' when calling NewsApi.extract_news_api"
      end
      # resource path
      local_var_path = '/extract-news'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'url'] = url
      query_params[:'analyze'] = analyze

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'ExtractNewsAPI200Response'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['apiKey', 'headerApiKey']

      new_options = opts.merge(
        :operation => :"NewsApi.extract_news_api",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: NewsApi#extract_news_api\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Search News API
    # Search and filter millions of news from over 200 countries in 90 languages by text, date, location, category, language, and more. The API returns a list of news articles matching the given criteria. You can set as many filtering parameters as you like, but you have to set at least one, e.g. text or language.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :text The text to match in the news content (at least 3 characters, maximum 100 characters). By default all query terms are expected, you can use an uppercase OR to search for any terms, e.g. tesla OR ford. You can also exclude terms by putting a minus sign (-) in front of the term, e.g. tesla -ford.
    # @option opts [String] :source_countries A comma-separated list of ISO 3166 country codes from which the news should originate.
    # @option opts [String] :language The ISO 6391 language code of the news.
    # @option opts [Float] :min_sentiment The minimal sentiment of the news in range [-1,1].
    # @option opts [Float] :max_sentiment The maximal sentiment of the news in range [-1,1].
    # @option opts [String] :earliest_publish_date The news must have been published after this date.
    # @option opts [String] :latest_publish_date The news must have been published before this date.
    # @option opts [String] :news_sources A comma-separated list of news sources from which the news should originate.
    # @option opts [String] :authors A comma-separated list of author names. Only news from any of the given authors will be returned.
    # @option opts [String] :categories A comma-separated list of categories. Only news from any of the given categories will be returned. Possible categories are politics, sports, business, technology, entertainment, health, science, lifestyle, travel, culture, education, environment, other.
    # @option opts [String] :entities Filter news by entities (ORG, PER, or LOC).
    # @option opts [String] :location_filter Filter news by radius around a certain location. Format is \&quot;latitude,longitude,radius in kilometers\&quot;
    # @option opts [String] :sort The sorting criteria (publish-time).
    # @option opts [String] :sort_direction Whether to sort ascending or descending (ASC or DESC).
    # @option opts [Integer] :offset The number of news to skip in range [0,10000]
    # @option opts [Integer] :number The number of news to return in range [1,100]
    # @return [SearchNewsAPI200Response]
    def search_news_api(opts = {})
      data, _status_code, _headers = search_news_api_with_http_info(opts)
      data
    end

    # Search News API
    # Search and filter millions of news from over 200 countries in 90 languages by text, date, location, category, language, and more. The API returns a list of news articles matching the given criteria. You can set as many filtering parameters as you like, but you have to set at least one, e.g. text or language.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :text The text to match in the news content (at least 3 characters, maximum 100 characters). By default all query terms are expected, you can use an uppercase OR to search for any terms, e.g. tesla OR ford. You can also exclude terms by putting a minus sign (-) in front of the term, e.g. tesla -ford.
    # @option opts [String] :source_countries A comma-separated list of ISO 3166 country codes from which the news should originate.
    # @option opts [String] :language The ISO 6391 language code of the news.
    # @option opts [Float] :min_sentiment The minimal sentiment of the news in range [-1,1].
    # @option opts [Float] :max_sentiment The maximal sentiment of the news in range [-1,1].
    # @option opts [String] :earliest_publish_date The news must have been published after this date.
    # @option opts [String] :latest_publish_date The news must have been published before this date.
    # @option opts [String] :news_sources A comma-separated list of news sources from which the news should originate.
    # @option opts [String] :authors A comma-separated list of author names. Only news from any of the given authors will be returned.
    # @option opts [String] :categories A comma-separated list of categories. Only news from any of the given categories will be returned. Possible categories are politics, sports, business, technology, entertainment, health, science, lifestyle, travel, culture, education, environment, other.
    # @option opts [String] :entities Filter news by entities (ORG, PER, or LOC).
    # @option opts [String] :location_filter Filter news by radius around a certain location. Format is \&quot;latitude,longitude,radius in kilometers\&quot;
    # @option opts [String] :sort The sorting criteria (publish-time).
    # @option opts [String] :sort_direction Whether to sort ascending or descending (ASC or DESC).
    # @option opts [Integer] :offset The number of news to skip in range [0,10000]
    # @option opts [Integer] :number The number of news to return in range [1,100]
    # @return [Array<(SearchNewsAPI200Response, Integer, Hash)>] SearchNewsAPI200Response data, response status code and response headers
    def search_news_api_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: NewsApi.search_news_api ...'
      end
      if @api_client.config.client_side_validation && !opts[:'text'].nil? && opts[:'text'].to_s.length > 100
        fail ArgumentError, 'invalid value for "opts[:"text"]" when calling NewsApi.search_news_api, the character length must be smaller than or equal to 100.'
      end

      pattern = Regexp.new(/./)
      if @api_client.config.client_side_validation && !opts[:'text'].nil? && opts[:'text'] !~ pattern
        fail ArgumentError, "invalid value for 'opts[:\"text\"]' when calling NewsApi.search_news_api, must conform to the pattern #{pattern}."
      end

      if @api_client.config.client_side_validation && !opts[:'source_countries'].nil? && opts[:'source_countries'].to_s.length > 100
        fail ArgumentError, 'invalid value for "opts[:"source_countries"]" when calling NewsApi.search_news_api, the character length must be smaller than or equal to 100.'
      end

      pattern = Regexp.new(/./)
      if @api_client.config.client_side_validation && !opts[:'source_countries'].nil? && opts[:'source_countries'] !~ pattern
        fail ArgumentError, "invalid value for 'opts[:\"source_countries\"]' when calling NewsApi.search_news_api, must conform to the pattern #{pattern}."
      end

      if @api_client.config.client_side_validation && !opts[:'language'].nil? && opts[:'language'].to_s.length > 2
        fail ArgumentError, 'invalid value for "opts[:"language"]" when calling NewsApi.search_news_api, the character length must be smaller than or equal to 2.'
      end

      pattern = Regexp.new(/./)
      if @api_client.config.client_side_validation && !opts[:'language'].nil? && opts[:'language'] !~ pattern
        fail ArgumentError, "invalid value for 'opts[:\"language\"]' when calling NewsApi.search_news_api, must conform to the pattern #{pattern}."
      end

      if @api_client.config.client_side_validation && !opts[:'min_sentiment'].nil? && opts[:'min_sentiment'] > 1
        fail ArgumentError, 'invalid value for "opts[:"min_sentiment"]" when calling NewsApi.search_news_api, must be smaller than or equal to 1.'
      end

      if @api_client.config.client_side_validation && !opts[:'min_sentiment'].nil? && opts[:'min_sentiment'] < -1
        fail ArgumentError, 'invalid value for "opts[:"min_sentiment"]" when calling NewsApi.search_news_api, must be greater than or equal to -1.'
      end

      if @api_client.config.client_side_validation && !opts[:'max_sentiment'].nil? && opts[:'max_sentiment'] > 1
        fail ArgumentError, 'invalid value for "opts[:"max_sentiment"]" when calling NewsApi.search_news_api, must be smaller than or equal to 1.'
      end

      if @api_client.config.client_side_validation && !opts[:'max_sentiment'].nil? && opts[:'max_sentiment'] < -1
        fail ArgumentError, 'invalid value for "opts[:"max_sentiment"]" when calling NewsApi.search_news_api, must be greater than or equal to -1.'
      end

      if @api_client.config.client_side_validation && !opts[:'earliest_publish_date'].nil? && opts[:'earliest_publish_date'].to_s.length > 100
        fail ArgumentError, 'invalid value for "opts[:"earliest_publish_date"]" when calling NewsApi.search_news_api, the character length must be smaller than or equal to 100.'
      end

      pattern = Regexp.new(/./)
      if @api_client.config.client_side_validation && !opts[:'earliest_publish_date'].nil? && opts[:'earliest_publish_date'] !~ pattern
        fail ArgumentError, "invalid value for 'opts[:\"earliest_publish_date\"]' when calling NewsApi.search_news_api, must conform to the pattern #{pattern}."
      end

      if @api_client.config.client_side_validation && !opts[:'latest_publish_date'].nil? && opts[:'latest_publish_date'].to_s.length > 100
        fail ArgumentError, 'invalid value for "opts[:"latest_publish_date"]" when calling NewsApi.search_news_api, the character length must be smaller than or equal to 100.'
      end

      pattern = Regexp.new(/./)
      if @api_client.config.client_side_validation && !opts[:'latest_publish_date'].nil? && opts[:'latest_publish_date'] !~ pattern
        fail ArgumentError, "invalid value for 'opts[:\"latest_publish_date\"]' when calling NewsApi.search_news_api, must conform to the pattern #{pattern}."
      end

      if @api_client.config.client_side_validation && !opts[:'news_sources'].nil? && opts[:'news_sources'].to_s.length > 10000
        fail ArgumentError, 'invalid value for "opts[:"news_sources"]" when calling NewsApi.search_news_api, the character length must be smaller than or equal to 10000.'
      end

      pattern = Regexp.new(/./)
      if @api_client.config.client_side_validation && !opts[:'news_sources'].nil? && opts[:'news_sources'] !~ pattern
        fail ArgumentError, "invalid value for 'opts[:\"news_sources\"]' when calling NewsApi.search_news_api, must conform to the pattern #{pattern}."
      end

      if @api_client.config.client_side_validation && !opts[:'authors'].nil? && opts[:'authors'].to_s.length > 300
        fail ArgumentError, 'invalid value for "opts[:"authors"]" when calling NewsApi.search_news_api, the character length must be smaller than or equal to 300.'
      end

      pattern = Regexp.new(/./)
      if @api_client.config.client_side_validation && !opts[:'authors'].nil? && opts[:'authors'] !~ pattern
        fail ArgumentError, "invalid value for 'opts[:\"authors\"]' when calling NewsApi.search_news_api, must conform to the pattern #{pattern}."
      end

      if @api_client.config.client_side_validation && !opts[:'categories'].nil? && opts[:'categories'].to_s.length > 300
        fail ArgumentError, 'invalid value for "opts[:"categories"]" when calling NewsApi.search_news_api, the character length must be smaller than or equal to 300.'
      end

      pattern = Regexp.new(/./)
      if @api_client.config.client_side_validation && !opts[:'categories'].nil? && opts[:'categories'] !~ pattern
        fail ArgumentError, "invalid value for 'opts[:\"categories\"]' when calling NewsApi.search_news_api, must conform to the pattern #{pattern}."
      end

      if @api_client.config.client_side_validation && !opts[:'entities'].nil? && opts[:'entities'].to_s.length > 10000
        fail ArgumentError, 'invalid value for "opts[:"entities"]" when calling NewsApi.search_news_api, the character length must be smaller than or equal to 10000.'
      end

      pattern = Regexp.new(/./)
      if @api_client.config.client_side_validation && !opts[:'entities'].nil? && opts[:'entities'] !~ pattern
        fail ArgumentError, "invalid value for 'opts[:\"entities\"]' when calling NewsApi.search_news_api, must conform to the pattern #{pattern}."
      end

      if @api_client.config.client_side_validation && !opts[:'location_filter'].nil? && opts[:'location_filter'].to_s.length > 100
        fail ArgumentError, 'invalid value for "opts[:"location_filter"]" when calling NewsApi.search_news_api, the character length must be smaller than or equal to 100.'
      end

      pattern = Regexp.new(/./)
      if @api_client.config.client_side_validation && !opts[:'location_filter'].nil? && opts[:'location_filter'] !~ pattern
        fail ArgumentError, "invalid value for 'opts[:\"location_filter\"]' when calling NewsApi.search_news_api, must conform to the pattern #{pattern}."
      end

      if @api_client.config.client_side_validation && !opts[:'sort'].nil? && opts[:'sort'].to_s.length > 100
        fail ArgumentError, 'invalid value for "opts[:"sort"]" when calling NewsApi.search_news_api, the character length must be smaller than or equal to 100.'
      end

      pattern = Regexp.new(/./)
      if @api_client.config.client_side_validation && !opts[:'sort'].nil? && opts[:'sort'] !~ pattern
        fail ArgumentError, "invalid value for 'opts[:\"sort\"]' when calling NewsApi.search_news_api, must conform to the pattern #{pattern}."
      end

      if @api_client.config.client_side_validation && !opts[:'sort_direction'].nil? && opts[:'sort_direction'].to_s.length > 4
        fail ArgumentError, 'invalid value for "opts[:"sort_direction"]" when calling NewsApi.search_news_api, the character length must be smaller than or equal to 4.'
      end

      pattern = Regexp.new(/./)
      if @api_client.config.client_side_validation && !opts[:'sort_direction'].nil? && opts[:'sort_direction'] !~ pattern
        fail ArgumentError, "invalid value for 'opts[:\"sort_direction\"]' when calling NewsApi.search_news_api, must conform to the pattern #{pattern}."
      end

      if @api_client.config.client_side_validation && !opts[:'offset'].nil? && opts[:'offset'] > 10000
        fail ArgumentError, 'invalid value for "opts[:"offset"]" when calling NewsApi.search_news_api, must be smaller than or equal to 10000.'
      end

      if @api_client.config.client_side_validation && !opts[:'offset'].nil? && opts[:'offset'] < 0
        fail ArgumentError, 'invalid value for "opts[:"offset"]" when calling NewsApi.search_news_api, must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && !opts[:'number'].nil? && opts[:'number'] > 100
        fail ArgumentError, 'invalid value for "opts[:"number"]" when calling NewsApi.search_news_api, must be smaller than or equal to 100.'
      end

      if @api_client.config.client_side_validation && !opts[:'number'].nil? && opts[:'number'] < 1
        fail ArgumentError, 'invalid value for "opts[:"number"]" when calling NewsApi.search_news_api, must be greater than or equal to 1.'
      end

      # resource path
      local_var_path = '/search-news'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'text'] = opts[:'text'] if !opts[:'text'].nil?
      query_params[:'source-countries'] = opts[:'source_countries'] if !opts[:'source_countries'].nil?
      query_params[:'language'] = opts[:'language'] if !opts[:'language'].nil?
      query_params[:'min-sentiment'] = opts[:'min_sentiment'] if !opts[:'min_sentiment'].nil?
      query_params[:'max-sentiment'] = opts[:'max_sentiment'] if !opts[:'max_sentiment'].nil?
      query_params[:'earliest-publish-date'] = opts[:'earliest_publish_date'] if !opts[:'earliest_publish_date'].nil?
      query_params[:'latest-publish-date'] = opts[:'latest_publish_date'] if !opts[:'latest_publish_date'].nil?
      query_params[:'news-sources'] = opts[:'news_sources'] if !opts[:'news_sources'].nil?
      query_params[:'authors'] = opts[:'authors'] if !opts[:'authors'].nil?
      query_params[:'categories'] = opts[:'categories'] if !opts[:'categories'].nil?
      query_params[:'entities'] = opts[:'entities'] if !opts[:'entities'].nil?
      query_params[:'location-filter'] = opts[:'location_filter'] if !opts[:'location_filter'].nil?
      query_params[:'sort'] = opts[:'sort'] if !opts[:'sort'].nil?
      query_params[:'sort-direction'] = opts[:'sort_direction'] if !opts[:'sort_direction'].nil?
      query_params[:'offset'] = opts[:'offset'] if !opts[:'offset'].nil?
      query_params[:'number'] = opts[:'number'] if !opts[:'number'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'SearchNewsAPI200Response'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['apiKey', 'headerApiKey']

      new_options = opts.merge(
        :operation => :"NewsApi.search_news_api",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: NewsApi#search_news_api\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Top News API
    # Get the top news from a country (over 220 are supported) in a language (over 90 are supported) for a specific date. The top news are clustered from multiple sources in the given country. The more news in a cluster the higher the cluster is ranked.
    # @param source_country [String] The ISO 3166 country code of the country for which top news should be retrieved.
    # @param language [String] The ISO 6391 language code of the top news. The language must be one spoken in the source-country.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :date The date for which the top news should be retrieved. If no date is given, the current day is assumed.
    # @option opts [Boolean] :headlines_only Whether to only return basic information such as id, title, and url of the news.
    # @return [TopNewsAPI200Response]
    def top_news_api(source_country, language, opts = {})
      data, _status_code, _headers = top_news_api_with_http_info(source_country, language, opts)
      data
    end

    # Top News API
    # Get the top news from a country (over 220 are supported) in a language (over 90 are supported) for a specific date. The top news are clustered from multiple sources in the given country. The more news in a cluster the higher the cluster is ranked.
    # @param source_country [String] The ISO 3166 country code of the country for which top news should be retrieved.
    # @param language [String] The ISO 6391 language code of the top news. The language must be one spoken in the source-country.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :date The date for which the top news should be retrieved. If no date is given, the current day is assumed.
    # @option opts [Boolean] :headlines_only Whether to only return basic information such as id, title, and url of the news.
    # @return [Array<(TopNewsAPI200Response, Integer, Hash)>] TopNewsAPI200Response data, response status code and response headers
    def top_news_api_with_http_info(source_country, language, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: NewsApi.top_news_api ...'
      end
      # verify the required parameter 'source_country' is set
      if @api_client.config.client_side_validation && source_country.nil?
        fail ArgumentError, "Missing the required parameter 'source_country' when calling NewsApi.top_news_api"
      end
      if @api_client.config.client_side_validation && source_country.to_s.length > 2
        fail ArgumentError, 'invalid value for "source_country" when calling NewsApi.top_news_api, the character length must be smaller than or equal to 2.'
      end

      pattern = Regexp.new(/./)
      if @api_client.config.client_side_validation && source_country !~ pattern
        fail ArgumentError, "invalid value for 'source_country' when calling NewsApi.top_news_api, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'language' is set
      if @api_client.config.client_side_validation && language.nil?
        fail ArgumentError, "Missing the required parameter 'language' when calling NewsApi.top_news_api"
      end
      if @api_client.config.client_side_validation && language.to_s.length > 2
        fail ArgumentError, 'invalid value for "language" when calling NewsApi.top_news_api, the character length must be smaller than or equal to 2.'
      end

      pattern = Regexp.new(/./)
      if @api_client.config.client_side_validation && language !~ pattern
        fail ArgumentError, "invalid value for 'language' when calling NewsApi.top_news_api, must conform to the pattern #{pattern}."
      end

      if @api_client.config.client_side_validation && !opts[:'date'].nil? && opts[:'date'].to_s.length > 10
        fail ArgumentError, 'invalid value for "opts[:"date"]" when calling NewsApi.top_news_api, the character length must be smaller than or equal to 10.'
      end

      pattern = Regexp.new(/./)
      if @api_client.config.client_side_validation && !opts[:'date'].nil? && opts[:'date'] !~ pattern
        fail ArgumentError, "invalid value for 'opts[:\"date\"]' when calling NewsApi.top_news_api, must conform to the pattern #{pattern}."
      end

      # resource path
      local_var_path = '/retrieve-top-news'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'source-country'] = source_country
      query_params[:'language'] = language
      query_params[:'date'] = opts[:'date'] if !opts[:'date'].nil?
      query_params[:'headlines-only'] = opts[:'headlines_only'] if !opts[:'headlines_only'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'TopNewsAPI200Response'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['apiKey', 'headerApiKey']

      new_options = opts.merge(
        :operation => :"NewsApi.top_news_api",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: NewsApi#top_news_api\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end

/*
API League

API League is a Hub for World Class APIs.

API version: 1.0
Contact: mail@apileague.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse20026 struct for InlineResponse20026
type InlineResponse20026 struct {
	Original NullableString `json:"original,omitempty"`
	Plural NullableString `json:"plural,omitempty"`
}

// NewInlineResponse20026 instantiates a new InlineResponse20026 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20026() *InlineResponse20026 {
	this := InlineResponse20026{}
	return &this
}

// NewInlineResponse20026WithDefaults instantiates a new InlineResponse20026 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20026WithDefaults() *InlineResponse20026 {
	this := InlineResponse20026{}
	return &this
}

// GetOriginal returns the Original field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20026) GetOriginal() string {
	if o == nil || o.Original.Get() == nil {
		var ret string
		return ret
	}
	return *o.Original.Get()
}

// GetOriginalOk returns a tuple with the Original field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20026) GetOriginalOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Original.Get(), o.Original.IsSet()
}

// HasOriginal returns a boolean if a field has been set.
func (o *InlineResponse20026) HasOriginal() bool {
	if o != nil && o.Original.IsSet() {
		return true
	}

	return false
}

// SetOriginal gets a reference to the given NullableString and assigns it to the Original field.
func (o *InlineResponse20026) SetOriginal(v string) {
	o.Original.Set(&v)
}
// SetOriginalNil sets the value for Original to be an explicit nil
func (o *InlineResponse20026) SetOriginalNil() {
	o.Original.Set(nil)
}

// UnsetOriginal ensures that no value is present for Original, not even an explicit nil
func (o *InlineResponse20026) UnsetOriginal() {
	o.Original.Unset()
}

// GetPlural returns the Plural field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20026) GetPlural() string {
	if o == nil || o.Plural.Get() == nil {
		var ret string
		return ret
	}
	return *o.Plural.Get()
}

// GetPluralOk returns a tuple with the Plural field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20026) GetPluralOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Plural.Get(), o.Plural.IsSet()
}

// HasPlural returns a boolean if a field has been set.
func (o *InlineResponse20026) HasPlural() bool {
	if o != nil && o.Plural.IsSet() {
		return true
	}

	return false
}

// SetPlural gets a reference to the given NullableString and assigns it to the Plural field.
func (o *InlineResponse20026) SetPlural(v string) {
	o.Plural.Set(&v)
}
// SetPluralNil sets the value for Plural to be an explicit nil
func (o *InlineResponse20026) SetPluralNil() {
	o.Plural.Set(nil)
}

// UnsetPlural ensures that no value is present for Plural, not even an explicit nil
func (o *InlineResponse20026) UnsetPlural() {
	o.Plural.Unset()
}

func (o InlineResponse20026) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Original.IsSet() {
		toSerialize["original"] = o.Original.Get()
	}
	if o.Plural.IsSet() {
		toSerialize["plural"] = o.Plural.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20026 struct {
	value *InlineResponse20026
	isSet bool
}

func (v NullableInlineResponse20026) Get() *InlineResponse20026 {
	return v.value
}

func (v *NullableInlineResponse20026) Set(val *InlineResponse20026) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20026) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20026) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20026(val *InlineResponse20026) *NullableInlineResponse20026 {
	return &NullableInlineResponse20026{value: val, isSet: true}
}

func (v NullableInlineResponse20026) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20026) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



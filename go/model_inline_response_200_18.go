/*
API League

API League is a Hub for World Class APIs.

API version: 1.0
Contact: mail@apileague.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse20018 struct for InlineResponse20018
type InlineResponse20018 struct {
	Document *InlineResponse20018Document `json:"document,omitempty"`
	Sentences []InlineResponse20018Sentences `json:"sentences,omitempty"`
}

// NewInlineResponse20018 instantiates a new InlineResponse20018 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20018() *InlineResponse20018 {
	this := InlineResponse20018{}
	return &this
}

// NewInlineResponse20018WithDefaults instantiates a new InlineResponse20018 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20018WithDefaults() *InlineResponse20018 {
	this := InlineResponse20018{}
	return &this
}

// GetDocument returns the Document field value if set, zero value otherwise.
func (o *InlineResponse20018) GetDocument() InlineResponse20018Document {
	if o == nil || o.Document == nil {
		var ret InlineResponse20018Document
		return ret
	}
	return *o.Document
}

// GetDocumentOk returns a tuple with the Document field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20018) GetDocumentOk() (*InlineResponse20018Document, bool) {
	if o == nil || o.Document == nil {
		return nil, false
	}
	return o.Document, true
}

// HasDocument returns a boolean if a field has been set.
func (o *InlineResponse20018) HasDocument() bool {
	if o != nil && o.Document != nil {
		return true
	}

	return false
}

// SetDocument gets a reference to the given InlineResponse20018Document and assigns it to the Document field.
func (o *InlineResponse20018) SetDocument(v InlineResponse20018Document) {
	o.Document = &v
}

// GetSentences returns the Sentences field value if set, zero value otherwise.
func (o *InlineResponse20018) GetSentences() []InlineResponse20018Sentences {
	if o == nil || o.Sentences == nil {
		var ret []InlineResponse20018Sentences
		return ret
	}
	return o.Sentences
}

// GetSentencesOk returns a tuple with the Sentences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20018) GetSentencesOk() ([]InlineResponse20018Sentences, bool) {
	if o == nil || o.Sentences == nil {
		return nil, false
	}
	return o.Sentences, true
}

// HasSentences returns a boolean if a field has been set.
func (o *InlineResponse20018) HasSentences() bool {
	if o != nil && o.Sentences != nil {
		return true
	}

	return false
}

// SetSentences gets a reference to the given []InlineResponse20018Sentences and assigns it to the Sentences field.
func (o *InlineResponse20018) SetSentences(v []InlineResponse20018Sentences) {
	o.Sentences = v
}

func (o InlineResponse20018) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Document != nil {
		toSerialize["document"] = o.Document
	}
	if o.Sentences != nil {
		toSerialize["sentences"] = o.Sentences
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20018 struct {
	value *InlineResponse20018
	isSet bool
}

func (v NullableInlineResponse20018) Get() *InlineResponse20018 {
	return v.value
}

func (v *NullableInlineResponse20018) Set(val *InlineResponse20018) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20018) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20018) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20018(val *InlineResponse20018) *NullableInlineResponse20018 {
	return &NullableInlineResponse20018{value: val, isSet: true}
}

func (v NullableInlineResponse20018) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20018) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
API League

API League is a Hub for World Class APIs.

API version: 1.0
Contact: mail@apileague.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse20029 struct for InlineResponse20029
type InlineResponse20029 struct {
	SpecificColor NullableString `json:"specific_color,omitempty"`
	MainColor NullableString `json:"main_color,omitempty"`
	HexCode NullableString `json:"hex_code,omitempty"`
}

// NewInlineResponse20029 instantiates a new InlineResponse20029 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20029() *InlineResponse20029 {
	this := InlineResponse20029{}
	return &this
}

// NewInlineResponse20029WithDefaults instantiates a new InlineResponse20029 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20029WithDefaults() *InlineResponse20029 {
	this := InlineResponse20029{}
	return &this
}

// GetSpecificColor returns the SpecificColor field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20029) GetSpecificColor() string {
	if o == nil || o.SpecificColor.Get() == nil {
		var ret string
		return ret
	}
	return *o.SpecificColor.Get()
}

// GetSpecificColorOk returns a tuple with the SpecificColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20029) GetSpecificColorOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SpecificColor.Get(), o.SpecificColor.IsSet()
}

// HasSpecificColor returns a boolean if a field has been set.
func (o *InlineResponse20029) HasSpecificColor() bool {
	if o != nil && o.SpecificColor.IsSet() {
		return true
	}

	return false
}

// SetSpecificColor gets a reference to the given NullableString and assigns it to the SpecificColor field.
func (o *InlineResponse20029) SetSpecificColor(v string) {
	o.SpecificColor.Set(&v)
}
// SetSpecificColorNil sets the value for SpecificColor to be an explicit nil
func (o *InlineResponse20029) SetSpecificColorNil() {
	o.SpecificColor.Set(nil)
}

// UnsetSpecificColor ensures that no value is present for SpecificColor, not even an explicit nil
func (o *InlineResponse20029) UnsetSpecificColor() {
	o.SpecificColor.Unset()
}

// GetMainColor returns the MainColor field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20029) GetMainColor() string {
	if o == nil || o.MainColor.Get() == nil {
		var ret string
		return ret
	}
	return *o.MainColor.Get()
}

// GetMainColorOk returns a tuple with the MainColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20029) GetMainColorOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MainColor.Get(), o.MainColor.IsSet()
}

// HasMainColor returns a boolean if a field has been set.
func (o *InlineResponse20029) HasMainColor() bool {
	if o != nil && o.MainColor.IsSet() {
		return true
	}

	return false
}

// SetMainColor gets a reference to the given NullableString and assigns it to the MainColor field.
func (o *InlineResponse20029) SetMainColor(v string) {
	o.MainColor.Set(&v)
}
// SetMainColorNil sets the value for MainColor to be an explicit nil
func (o *InlineResponse20029) SetMainColorNil() {
	o.MainColor.Set(nil)
}

// UnsetMainColor ensures that no value is present for MainColor, not even an explicit nil
func (o *InlineResponse20029) UnsetMainColor() {
	o.MainColor.Unset()
}

// GetHexCode returns the HexCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20029) GetHexCode() string {
	if o == nil || o.HexCode.Get() == nil {
		var ret string
		return ret
	}
	return *o.HexCode.Get()
}

// GetHexCodeOk returns a tuple with the HexCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20029) GetHexCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.HexCode.Get(), o.HexCode.IsSet()
}

// HasHexCode returns a boolean if a field has been set.
func (o *InlineResponse20029) HasHexCode() bool {
	if o != nil && o.HexCode.IsSet() {
		return true
	}

	return false
}

// SetHexCode gets a reference to the given NullableString and assigns it to the HexCode field.
func (o *InlineResponse20029) SetHexCode(v string) {
	o.HexCode.Set(&v)
}
// SetHexCodeNil sets the value for HexCode to be an explicit nil
func (o *InlineResponse20029) SetHexCodeNil() {
	o.HexCode.Set(nil)
}

// UnsetHexCode ensures that no value is present for HexCode, not even an explicit nil
func (o *InlineResponse20029) UnsetHexCode() {
	o.HexCode.Unset()
}

func (o InlineResponse20029) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SpecificColor.IsSet() {
		toSerialize["specific_color"] = o.SpecificColor.Get()
	}
	if o.MainColor.IsSet() {
		toSerialize["main_color"] = o.MainColor.Get()
	}
	if o.HexCode.IsSet() {
		toSerialize["hex_code"] = o.HexCode.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20029 struct {
	value *InlineResponse20029
	isSet bool
}

func (v NullableInlineResponse20029) Get() *InlineResponse20029 {
	return v.value
}

func (v *NullableInlineResponse20029) Set(val *InlineResponse20029) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20029) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20029) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20029(val *InlineResponse20029) *NullableInlineResponse20029 {
	return &NullableInlineResponse20029{value: val, isSet: true}
}

func (v NullableInlineResponse20029) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20029) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



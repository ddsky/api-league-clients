/*
API League

API League is a Hub for World Class APIs.

API version: 1.6.4
Contact: mail@apileague.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apileague

import (
	"encoding/json"
)

// checks if the ConvertUnitsAPI200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConvertUnitsAPI200Response{}

// ConvertUnitsAPI200Response struct for ConvertUnitsAPI200Response
type ConvertUnitsAPI200Response struct {
	TargetAmount *float32 `json:"target_amount,omitempty"`
	TargetUnit NullableString `json:"target_unit,omitempty"`
}

// NewConvertUnitsAPI200Response instantiates a new ConvertUnitsAPI200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConvertUnitsAPI200Response() *ConvertUnitsAPI200Response {
	this := ConvertUnitsAPI200Response{}
	return &this
}

// NewConvertUnitsAPI200ResponseWithDefaults instantiates a new ConvertUnitsAPI200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConvertUnitsAPI200ResponseWithDefaults() *ConvertUnitsAPI200Response {
	this := ConvertUnitsAPI200Response{}
	return &this
}

// GetTargetAmount returns the TargetAmount field value if set, zero value otherwise.
func (o *ConvertUnitsAPI200Response) GetTargetAmount() float32 {
	if o == nil || IsNil(o.TargetAmount) {
		var ret float32
		return ret
	}
	return *o.TargetAmount
}

// GetTargetAmountOk returns a tuple with the TargetAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConvertUnitsAPI200Response) GetTargetAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.TargetAmount) {
		return nil, false
	}
	return o.TargetAmount, true
}

// HasTargetAmount returns a boolean if a field has been set.
func (o *ConvertUnitsAPI200Response) HasTargetAmount() bool {
	if o != nil && !IsNil(o.TargetAmount) {
		return true
	}

	return false
}

// SetTargetAmount gets a reference to the given float32 and assigns it to the TargetAmount field.
func (o *ConvertUnitsAPI200Response) SetTargetAmount(v float32) {
	o.TargetAmount = &v
}

// GetTargetUnit returns the TargetUnit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConvertUnitsAPI200Response) GetTargetUnit() string {
	if o == nil || IsNil(o.TargetUnit.Get()) {
		var ret string
		return ret
	}
	return *o.TargetUnit.Get()
}

// GetTargetUnitOk returns a tuple with the TargetUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConvertUnitsAPI200Response) GetTargetUnitOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TargetUnit.Get(), o.TargetUnit.IsSet()
}

// HasTargetUnit returns a boolean if a field has been set.
func (o *ConvertUnitsAPI200Response) HasTargetUnit() bool {
	if o != nil && o.TargetUnit.IsSet() {
		return true
	}

	return false
}

// SetTargetUnit gets a reference to the given NullableString and assigns it to the TargetUnit field.
func (o *ConvertUnitsAPI200Response) SetTargetUnit(v string) {
	o.TargetUnit.Set(&v)
}
// SetTargetUnitNil sets the value for TargetUnit to be an explicit nil
func (o *ConvertUnitsAPI200Response) SetTargetUnitNil() {
	o.TargetUnit.Set(nil)
}

// UnsetTargetUnit ensures that no value is present for TargetUnit, not even an explicit nil
func (o *ConvertUnitsAPI200Response) UnsetTargetUnit() {
	o.TargetUnit.Unset()
}

func (o ConvertUnitsAPI200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConvertUnitsAPI200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TargetAmount) {
		toSerialize["target_amount"] = o.TargetAmount
	}
	if o.TargetUnit.IsSet() {
		toSerialize["target_unit"] = o.TargetUnit.Get()
	}
	return toSerialize, nil
}

type NullableConvertUnitsAPI200Response struct {
	value *ConvertUnitsAPI200Response
	isSet bool
}

func (v NullableConvertUnitsAPI200Response) Get() *ConvertUnitsAPI200Response {
	return v.value
}

func (v *NullableConvertUnitsAPI200Response) Set(val *ConvertUnitsAPI200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableConvertUnitsAPI200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableConvertUnitsAPI200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConvertUnitsAPI200Response(val *ConvertUnitsAPI200Response) *NullableConvertUnitsAPI200Response {
	return &NullableConvertUnitsAPI200Response{value: val, isSet: true}
}

func (v NullableConvertUnitsAPI200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConvertUnitsAPI200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



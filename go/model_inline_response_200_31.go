/*
API League

API League is a Hub for World Class APIs.

API version: 1.0
Contact: mail@apileague.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse20031 struct for InlineResponse20031
type InlineResponse20031 struct {
	Value NullableString `json:"value,omitempty"`
}

// NewInlineResponse20031 instantiates a new InlineResponse20031 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20031() *InlineResponse20031 {
	this := InlineResponse20031{}
	return &this
}

// NewInlineResponse20031WithDefaults instantiates a new InlineResponse20031 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20031WithDefaults() *InlineResponse20031 {
	this := InlineResponse20031{}
	return &this
}

// GetValue returns the Value field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20031) GetValue() string {
	if o == nil || o.Value.Get() == nil {
		var ret string
		return ret
	}
	return *o.Value.Get()
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20031) GetValueOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Value.Get(), o.Value.IsSet()
}

// HasValue returns a boolean if a field has been set.
func (o *InlineResponse20031) HasValue() bool {
	if o != nil && o.Value.IsSet() {
		return true
	}

	return false
}

// SetValue gets a reference to the given NullableString and assigns it to the Value field.
func (o *InlineResponse20031) SetValue(v string) {
	o.Value.Set(&v)
}
// SetValueNil sets the value for Value to be an explicit nil
func (o *InlineResponse20031) SetValueNil() {
	o.Value.Set(nil)
}

// UnsetValue ensures that no value is present for Value, not even an explicit nil
func (o *InlineResponse20031) UnsetValue() {
	o.Value.Unset()
}

func (o InlineResponse20031) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Value.IsSet() {
		toSerialize["value"] = o.Value.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20031 struct {
	value *InlineResponse20031
	isSet bool
}

func (v NullableInlineResponse20031) Get() *InlineResponse20031 {
	return v.value
}

func (v *NullableInlineResponse20031) Set(val *InlineResponse20031) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20031) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20031) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20031(val *InlineResponse20031) *NullableInlineResponse20031 {
	return &NullableInlineResponse20031{value: val, isSet: true}
}

func (v NullableInlineResponse20031) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20031) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



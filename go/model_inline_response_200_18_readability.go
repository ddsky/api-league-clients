/*
API League

API League is a Hub for World Class APIs.

API version: 1.0
Contact: mail@apileague.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse20018Readability struct for InlineResponse20018Readability
type InlineResponse20018Readability struct {
	Mainscores *InlineResponse20018ReadabilityMainscores `json:"mainscores,omitempty"`
	Subscores *InlineResponse20018ReadabilitySubscores `json:"subscores,omitempty"`
}

// NewInlineResponse20018Readability instantiates a new InlineResponse20018Readability object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20018Readability() *InlineResponse20018Readability {
	this := InlineResponse20018Readability{}
	return &this
}

// NewInlineResponse20018ReadabilityWithDefaults instantiates a new InlineResponse20018Readability object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20018ReadabilityWithDefaults() *InlineResponse20018Readability {
	this := InlineResponse20018Readability{}
	return &this
}

// GetMainscores returns the Mainscores field value if set, zero value otherwise.
func (o *InlineResponse20018Readability) GetMainscores() InlineResponse20018ReadabilityMainscores {
	if o == nil || o.Mainscores == nil {
		var ret InlineResponse20018ReadabilityMainscores
		return ret
	}
	return *o.Mainscores
}

// GetMainscoresOk returns a tuple with the Mainscores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20018Readability) GetMainscoresOk() (*InlineResponse20018ReadabilityMainscores, bool) {
	if o == nil || o.Mainscores == nil {
		return nil, false
	}
	return o.Mainscores, true
}

// HasMainscores returns a boolean if a field has been set.
func (o *InlineResponse20018Readability) HasMainscores() bool {
	if o != nil && o.Mainscores != nil {
		return true
	}

	return false
}

// SetMainscores gets a reference to the given InlineResponse20018ReadabilityMainscores and assigns it to the Mainscores field.
func (o *InlineResponse20018Readability) SetMainscores(v InlineResponse20018ReadabilityMainscores) {
	o.Mainscores = &v
}

// GetSubscores returns the Subscores field value if set, zero value otherwise.
func (o *InlineResponse20018Readability) GetSubscores() InlineResponse20018ReadabilitySubscores {
	if o == nil || o.Subscores == nil {
		var ret InlineResponse20018ReadabilitySubscores
		return ret
	}
	return *o.Subscores
}

// GetSubscoresOk returns a tuple with the Subscores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20018Readability) GetSubscoresOk() (*InlineResponse20018ReadabilitySubscores, bool) {
	if o == nil || o.Subscores == nil {
		return nil, false
	}
	return o.Subscores, true
}

// HasSubscores returns a boolean if a field has been set.
func (o *InlineResponse20018Readability) HasSubscores() bool {
	if o != nil && o.Subscores != nil {
		return true
	}

	return false
}

// SetSubscores gets a reference to the given InlineResponse20018ReadabilitySubscores and assigns it to the Subscores field.
func (o *InlineResponse20018Readability) SetSubscores(v InlineResponse20018ReadabilitySubscores) {
	o.Subscores = &v
}

func (o InlineResponse20018Readability) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Mainscores != nil {
		toSerialize["mainscores"] = o.Mainscores
	}
	if o.Subscores != nil {
		toSerialize["subscores"] = o.Subscores
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20018Readability struct {
	value *InlineResponse20018Readability
	isSet bool
}

func (v NullableInlineResponse20018Readability) Get() *InlineResponse20018Readability {
	return v.value
}

func (v *NullableInlineResponse20018Readability) Set(val *InlineResponse20018Readability) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20018Readability) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20018Readability) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20018Readability(val *InlineResponse20018Readability) *NullableInlineResponse20018Readability {
	return &NullableInlineResponse20018Readability{value: val, isSet: true}
}

func (v NullableInlineResponse20018Readability) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20018Readability) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



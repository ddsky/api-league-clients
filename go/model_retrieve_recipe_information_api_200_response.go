/*
API League

API League is a Hub for World Class APIs.

API version: 1.6.4
Contact: mail@apileague.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apileague

import (
	"encoding/json"
)

// checks if the RetrieveRecipeInformationAPI200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RetrieveRecipeInformationAPI200Response{}

// RetrieveRecipeInformationAPI200Response struct for RetrieveRecipeInformationAPI200Response
type RetrieveRecipeInformationAPI200Response struct {
	Id *int32 `json:"id,omitempty"`
	Title NullableString `json:"title,omitempty"`
	Servings *int32 `json:"servings,omitempty"`
	Images []*string `json:"images,omitempty"`
	DietaryProperties *RetrieveRecipeInformationAPI200ResponseDietaryProperties `json:"dietary_properties,omitempty"`
	PricePerServing *float32 `json:"price_per_serving,omitempty"`
	Times *RetrieveRecipeInformationAPI200ResponseTimes `json:"times,omitempty"`
	Nutrition *RetrieveRecipeInformationAPI200ResponseNutrition `json:"nutrition,omitempty"`
	Taste *RetrieveRecipeInformationAPI200ResponseTaste `json:"taste,omitempty"`
	Cuisines []*string `json:"cuisines,omitempty"`
	MealTypes []*string `json:"meal_types,omitempty"`
	Occasions []*string `json:"occasions,omitempty"`
	Ingredients []RetrieveRecipeInformationAPI200ResponseIngredientsInner `json:"ingredients,omitempty"`
	Instructions []RetrieveRecipeInformationAPI200ResponseInstructionsInner `json:"instructions,omitempty"`
	Credits *RetrieveRecipeInformationAPI200ResponseCredits `json:"credits,omitempty"`
	Scores *RetrieveRecipeInformationAPI200ResponseScores `json:"scores,omitempty"`
}

// NewRetrieveRecipeInformationAPI200Response instantiates a new RetrieveRecipeInformationAPI200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRetrieveRecipeInformationAPI200Response() *RetrieveRecipeInformationAPI200Response {
	this := RetrieveRecipeInformationAPI200Response{}
	return &this
}

// NewRetrieveRecipeInformationAPI200ResponseWithDefaults instantiates a new RetrieveRecipeInformationAPI200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRetrieveRecipeInformationAPI200ResponseWithDefaults() *RetrieveRecipeInformationAPI200Response {
	this := RetrieveRecipeInformationAPI200Response{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *RetrieveRecipeInformationAPI200Response) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetrieveRecipeInformationAPI200Response) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *RetrieveRecipeInformationAPI200Response) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *RetrieveRecipeInformationAPI200Response) SetId(v int32) {
	o.Id = &v
}

// GetTitle returns the Title field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RetrieveRecipeInformationAPI200Response) GetTitle() string {
	if o == nil || IsNil(o.Title.Get()) {
		var ret string
		return ret
	}
	return *o.Title.Get()
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RetrieveRecipeInformationAPI200Response) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Title.Get(), o.Title.IsSet()
}

// HasTitle returns a boolean if a field has been set.
func (o *RetrieveRecipeInformationAPI200Response) HasTitle() bool {
	if o != nil && o.Title.IsSet() {
		return true
	}

	return false
}

// SetTitle gets a reference to the given NullableString and assigns it to the Title field.
func (o *RetrieveRecipeInformationAPI200Response) SetTitle(v string) {
	o.Title.Set(&v)
}
// SetTitleNil sets the value for Title to be an explicit nil
func (o *RetrieveRecipeInformationAPI200Response) SetTitleNil() {
	o.Title.Set(nil)
}

// UnsetTitle ensures that no value is present for Title, not even an explicit nil
func (o *RetrieveRecipeInformationAPI200Response) UnsetTitle() {
	o.Title.Unset()
}

// GetServings returns the Servings field value if set, zero value otherwise.
func (o *RetrieveRecipeInformationAPI200Response) GetServings() int32 {
	if o == nil || IsNil(o.Servings) {
		var ret int32
		return ret
	}
	return *o.Servings
}

// GetServingsOk returns a tuple with the Servings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetrieveRecipeInformationAPI200Response) GetServingsOk() (*int32, bool) {
	if o == nil || IsNil(o.Servings) {
		return nil, false
	}
	return o.Servings, true
}

// HasServings returns a boolean if a field has been set.
func (o *RetrieveRecipeInformationAPI200Response) HasServings() bool {
	if o != nil && !IsNil(o.Servings) {
		return true
	}

	return false
}

// SetServings gets a reference to the given int32 and assigns it to the Servings field.
func (o *RetrieveRecipeInformationAPI200Response) SetServings(v int32) {
	o.Servings = &v
}

// GetImages returns the Images field value if set, zero value otherwise.
func (o *RetrieveRecipeInformationAPI200Response) GetImages() []*string {
	if o == nil || IsNil(o.Images) {
		var ret []*string
		return ret
	}
	return o.Images
}

// GetImagesOk returns a tuple with the Images field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetrieveRecipeInformationAPI200Response) GetImagesOk() ([]*string, bool) {
	if o == nil || IsNil(o.Images) {
		return nil, false
	}
	return o.Images, true
}

// HasImages returns a boolean if a field has been set.
func (o *RetrieveRecipeInformationAPI200Response) HasImages() bool {
	if o != nil && !IsNil(o.Images) {
		return true
	}

	return false
}

// SetImages gets a reference to the given []*string and assigns it to the Images field.
func (o *RetrieveRecipeInformationAPI200Response) SetImages(v []*string) {
	o.Images = v
}

// GetDietaryProperties returns the DietaryProperties field value if set, zero value otherwise.
func (o *RetrieveRecipeInformationAPI200Response) GetDietaryProperties() RetrieveRecipeInformationAPI200ResponseDietaryProperties {
	if o == nil || IsNil(o.DietaryProperties) {
		var ret RetrieveRecipeInformationAPI200ResponseDietaryProperties
		return ret
	}
	return *o.DietaryProperties
}

// GetDietaryPropertiesOk returns a tuple with the DietaryProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetrieveRecipeInformationAPI200Response) GetDietaryPropertiesOk() (*RetrieveRecipeInformationAPI200ResponseDietaryProperties, bool) {
	if o == nil || IsNil(o.DietaryProperties) {
		return nil, false
	}
	return o.DietaryProperties, true
}

// HasDietaryProperties returns a boolean if a field has been set.
func (o *RetrieveRecipeInformationAPI200Response) HasDietaryProperties() bool {
	if o != nil && !IsNil(o.DietaryProperties) {
		return true
	}

	return false
}

// SetDietaryProperties gets a reference to the given RetrieveRecipeInformationAPI200ResponseDietaryProperties and assigns it to the DietaryProperties field.
func (o *RetrieveRecipeInformationAPI200Response) SetDietaryProperties(v RetrieveRecipeInformationAPI200ResponseDietaryProperties) {
	o.DietaryProperties = &v
}

// GetPricePerServing returns the PricePerServing field value if set, zero value otherwise.
func (o *RetrieveRecipeInformationAPI200Response) GetPricePerServing() float32 {
	if o == nil || IsNil(o.PricePerServing) {
		var ret float32
		return ret
	}
	return *o.PricePerServing
}

// GetPricePerServingOk returns a tuple with the PricePerServing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetrieveRecipeInformationAPI200Response) GetPricePerServingOk() (*float32, bool) {
	if o == nil || IsNil(o.PricePerServing) {
		return nil, false
	}
	return o.PricePerServing, true
}

// HasPricePerServing returns a boolean if a field has been set.
func (o *RetrieveRecipeInformationAPI200Response) HasPricePerServing() bool {
	if o != nil && !IsNil(o.PricePerServing) {
		return true
	}

	return false
}

// SetPricePerServing gets a reference to the given float32 and assigns it to the PricePerServing field.
func (o *RetrieveRecipeInformationAPI200Response) SetPricePerServing(v float32) {
	o.PricePerServing = &v
}

// GetTimes returns the Times field value if set, zero value otherwise.
func (o *RetrieveRecipeInformationAPI200Response) GetTimes() RetrieveRecipeInformationAPI200ResponseTimes {
	if o == nil || IsNil(o.Times) {
		var ret RetrieveRecipeInformationAPI200ResponseTimes
		return ret
	}
	return *o.Times
}

// GetTimesOk returns a tuple with the Times field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetrieveRecipeInformationAPI200Response) GetTimesOk() (*RetrieveRecipeInformationAPI200ResponseTimes, bool) {
	if o == nil || IsNil(o.Times) {
		return nil, false
	}
	return o.Times, true
}

// HasTimes returns a boolean if a field has been set.
func (o *RetrieveRecipeInformationAPI200Response) HasTimes() bool {
	if o != nil && !IsNil(o.Times) {
		return true
	}

	return false
}

// SetTimes gets a reference to the given RetrieveRecipeInformationAPI200ResponseTimes and assigns it to the Times field.
func (o *RetrieveRecipeInformationAPI200Response) SetTimes(v RetrieveRecipeInformationAPI200ResponseTimes) {
	o.Times = &v
}

// GetNutrition returns the Nutrition field value if set, zero value otherwise.
func (o *RetrieveRecipeInformationAPI200Response) GetNutrition() RetrieveRecipeInformationAPI200ResponseNutrition {
	if o == nil || IsNil(o.Nutrition) {
		var ret RetrieveRecipeInformationAPI200ResponseNutrition
		return ret
	}
	return *o.Nutrition
}

// GetNutritionOk returns a tuple with the Nutrition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetrieveRecipeInformationAPI200Response) GetNutritionOk() (*RetrieveRecipeInformationAPI200ResponseNutrition, bool) {
	if o == nil || IsNil(o.Nutrition) {
		return nil, false
	}
	return o.Nutrition, true
}

// HasNutrition returns a boolean if a field has been set.
func (o *RetrieveRecipeInformationAPI200Response) HasNutrition() bool {
	if o != nil && !IsNil(o.Nutrition) {
		return true
	}

	return false
}

// SetNutrition gets a reference to the given RetrieveRecipeInformationAPI200ResponseNutrition and assigns it to the Nutrition field.
func (o *RetrieveRecipeInformationAPI200Response) SetNutrition(v RetrieveRecipeInformationAPI200ResponseNutrition) {
	o.Nutrition = &v
}

// GetTaste returns the Taste field value if set, zero value otherwise.
func (o *RetrieveRecipeInformationAPI200Response) GetTaste() RetrieveRecipeInformationAPI200ResponseTaste {
	if o == nil || IsNil(o.Taste) {
		var ret RetrieveRecipeInformationAPI200ResponseTaste
		return ret
	}
	return *o.Taste
}

// GetTasteOk returns a tuple with the Taste field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetrieveRecipeInformationAPI200Response) GetTasteOk() (*RetrieveRecipeInformationAPI200ResponseTaste, bool) {
	if o == nil || IsNil(o.Taste) {
		return nil, false
	}
	return o.Taste, true
}

// HasTaste returns a boolean if a field has been set.
func (o *RetrieveRecipeInformationAPI200Response) HasTaste() bool {
	if o != nil && !IsNil(o.Taste) {
		return true
	}

	return false
}

// SetTaste gets a reference to the given RetrieveRecipeInformationAPI200ResponseTaste and assigns it to the Taste field.
func (o *RetrieveRecipeInformationAPI200Response) SetTaste(v RetrieveRecipeInformationAPI200ResponseTaste) {
	o.Taste = &v
}

// GetCuisines returns the Cuisines field value if set, zero value otherwise.
func (o *RetrieveRecipeInformationAPI200Response) GetCuisines() []*string {
	if o == nil || IsNil(o.Cuisines) {
		var ret []*string
		return ret
	}
	return o.Cuisines
}

// GetCuisinesOk returns a tuple with the Cuisines field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetrieveRecipeInformationAPI200Response) GetCuisinesOk() ([]*string, bool) {
	if o == nil || IsNil(o.Cuisines) {
		return nil, false
	}
	return o.Cuisines, true
}

// HasCuisines returns a boolean if a field has been set.
func (o *RetrieveRecipeInformationAPI200Response) HasCuisines() bool {
	if o != nil && !IsNil(o.Cuisines) {
		return true
	}

	return false
}

// SetCuisines gets a reference to the given []*string and assigns it to the Cuisines field.
func (o *RetrieveRecipeInformationAPI200Response) SetCuisines(v []*string) {
	o.Cuisines = v
}

// GetMealTypes returns the MealTypes field value if set, zero value otherwise.
func (o *RetrieveRecipeInformationAPI200Response) GetMealTypes() []*string {
	if o == nil || IsNil(o.MealTypes) {
		var ret []*string
		return ret
	}
	return o.MealTypes
}

// GetMealTypesOk returns a tuple with the MealTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetrieveRecipeInformationAPI200Response) GetMealTypesOk() ([]*string, bool) {
	if o == nil || IsNil(o.MealTypes) {
		return nil, false
	}
	return o.MealTypes, true
}

// HasMealTypes returns a boolean if a field has been set.
func (o *RetrieveRecipeInformationAPI200Response) HasMealTypes() bool {
	if o != nil && !IsNil(o.MealTypes) {
		return true
	}

	return false
}

// SetMealTypes gets a reference to the given []*string and assigns it to the MealTypes field.
func (o *RetrieveRecipeInformationAPI200Response) SetMealTypes(v []*string) {
	o.MealTypes = v
}

// GetOccasions returns the Occasions field value if set, zero value otherwise.
func (o *RetrieveRecipeInformationAPI200Response) GetOccasions() []*string {
	if o == nil || IsNil(o.Occasions) {
		var ret []*string
		return ret
	}
	return o.Occasions
}

// GetOccasionsOk returns a tuple with the Occasions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetrieveRecipeInformationAPI200Response) GetOccasionsOk() ([]*string, bool) {
	if o == nil || IsNil(o.Occasions) {
		return nil, false
	}
	return o.Occasions, true
}

// HasOccasions returns a boolean if a field has been set.
func (o *RetrieveRecipeInformationAPI200Response) HasOccasions() bool {
	if o != nil && !IsNil(o.Occasions) {
		return true
	}

	return false
}

// SetOccasions gets a reference to the given []*string and assigns it to the Occasions field.
func (o *RetrieveRecipeInformationAPI200Response) SetOccasions(v []*string) {
	o.Occasions = v
}

// GetIngredients returns the Ingredients field value if set, zero value otherwise.
func (o *RetrieveRecipeInformationAPI200Response) GetIngredients() []RetrieveRecipeInformationAPI200ResponseIngredientsInner {
	if o == nil || IsNil(o.Ingredients) {
		var ret []RetrieveRecipeInformationAPI200ResponseIngredientsInner
		return ret
	}
	return o.Ingredients
}

// GetIngredientsOk returns a tuple with the Ingredients field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetrieveRecipeInformationAPI200Response) GetIngredientsOk() ([]RetrieveRecipeInformationAPI200ResponseIngredientsInner, bool) {
	if o == nil || IsNil(o.Ingredients) {
		return nil, false
	}
	return o.Ingredients, true
}

// HasIngredients returns a boolean if a field has been set.
func (o *RetrieveRecipeInformationAPI200Response) HasIngredients() bool {
	if o != nil && !IsNil(o.Ingredients) {
		return true
	}

	return false
}

// SetIngredients gets a reference to the given []RetrieveRecipeInformationAPI200ResponseIngredientsInner and assigns it to the Ingredients field.
func (o *RetrieveRecipeInformationAPI200Response) SetIngredients(v []RetrieveRecipeInformationAPI200ResponseIngredientsInner) {
	o.Ingredients = v
}

// GetInstructions returns the Instructions field value if set, zero value otherwise.
func (o *RetrieveRecipeInformationAPI200Response) GetInstructions() []RetrieveRecipeInformationAPI200ResponseInstructionsInner {
	if o == nil || IsNil(o.Instructions) {
		var ret []RetrieveRecipeInformationAPI200ResponseInstructionsInner
		return ret
	}
	return o.Instructions
}

// GetInstructionsOk returns a tuple with the Instructions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetrieveRecipeInformationAPI200Response) GetInstructionsOk() ([]RetrieveRecipeInformationAPI200ResponseInstructionsInner, bool) {
	if o == nil || IsNil(o.Instructions) {
		return nil, false
	}
	return o.Instructions, true
}

// HasInstructions returns a boolean if a field has been set.
func (o *RetrieveRecipeInformationAPI200Response) HasInstructions() bool {
	if o != nil && !IsNil(o.Instructions) {
		return true
	}

	return false
}

// SetInstructions gets a reference to the given []RetrieveRecipeInformationAPI200ResponseInstructionsInner and assigns it to the Instructions field.
func (o *RetrieveRecipeInformationAPI200Response) SetInstructions(v []RetrieveRecipeInformationAPI200ResponseInstructionsInner) {
	o.Instructions = v
}

// GetCredits returns the Credits field value if set, zero value otherwise.
func (o *RetrieveRecipeInformationAPI200Response) GetCredits() RetrieveRecipeInformationAPI200ResponseCredits {
	if o == nil || IsNil(o.Credits) {
		var ret RetrieveRecipeInformationAPI200ResponseCredits
		return ret
	}
	return *o.Credits
}

// GetCreditsOk returns a tuple with the Credits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetrieveRecipeInformationAPI200Response) GetCreditsOk() (*RetrieveRecipeInformationAPI200ResponseCredits, bool) {
	if o == nil || IsNil(o.Credits) {
		return nil, false
	}
	return o.Credits, true
}

// HasCredits returns a boolean if a field has been set.
func (o *RetrieveRecipeInformationAPI200Response) HasCredits() bool {
	if o != nil && !IsNil(o.Credits) {
		return true
	}

	return false
}

// SetCredits gets a reference to the given RetrieveRecipeInformationAPI200ResponseCredits and assigns it to the Credits field.
func (o *RetrieveRecipeInformationAPI200Response) SetCredits(v RetrieveRecipeInformationAPI200ResponseCredits) {
	o.Credits = &v
}

// GetScores returns the Scores field value if set, zero value otherwise.
func (o *RetrieveRecipeInformationAPI200Response) GetScores() RetrieveRecipeInformationAPI200ResponseScores {
	if o == nil || IsNil(o.Scores) {
		var ret RetrieveRecipeInformationAPI200ResponseScores
		return ret
	}
	return *o.Scores
}

// GetScoresOk returns a tuple with the Scores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetrieveRecipeInformationAPI200Response) GetScoresOk() (*RetrieveRecipeInformationAPI200ResponseScores, bool) {
	if o == nil || IsNil(o.Scores) {
		return nil, false
	}
	return o.Scores, true
}

// HasScores returns a boolean if a field has been set.
func (o *RetrieveRecipeInformationAPI200Response) HasScores() bool {
	if o != nil && !IsNil(o.Scores) {
		return true
	}

	return false
}

// SetScores gets a reference to the given RetrieveRecipeInformationAPI200ResponseScores and assigns it to the Scores field.
func (o *RetrieveRecipeInformationAPI200Response) SetScores(v RetrieveRecipeInformationAPI200ResponseScores) {
	o.Scores = &v
}

func (o RetrieveRecipeInformationAPI200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RetrieveRecipeInformationAPI200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.Title.IsSet() {
		toSerialize["title"] = o.Title.Get()
	}
	if !IsNil(o.Servings) {
		toSerialize["servings"] = o.Servings
	}
	if !IsNil(o.Images) {
		toSerialize["images"] = o.Images
	}
	if !IsNil(o.DietaryProperties) {
		toSerialize["dietary_properties"] = o.DietaryProperties
	}
	if !IsNil(o.PricePerServing) {
		toSerialize["price_per_serving"] = o.PricePerServing
	}
	if !IsNil(o.Times) {
		toSerialize["times"] = o.Times
	}
	if !IsNil(o.Nutrition) {
		toSerialize["nutrition"] = o.Nutrition
	}
	if !IsNil(o.Taste) {
		toSerialize["taste"] = o.Taste
	}
	if !IsNil(o.Cuisines) {
		toSerialize["cuisines"] = o.Cuisines
	}
	if !IsNil(o.MealTypes) {
		toSerialize["meal_types"] = o.MealTypes
	}
	if !IsNil(o.Occasions) {
		toSerialize["occasions"] = o.Occasions
	}
	if !IsNil(o.Ingredients) {
		toSerialize["ingredients"] = o.Ingredients
	}
	if !IsNil(o.Instructions) {
		toSerialize["instructions"] = o.Instructions
	}
	if !IsNil(o.Credits) {
		toSerialize["credits"] = o.Credits
	}
	if !IsNil(o.Scores) {
		toSerialize["scores"] = o.Scores
	}
	return toSerialize, nil
}

type NullableRetrieveRecipeInformationAPI200Response struct {
	value *RetrieveRecipeInformationAPI200Response
	isSet bool
}

func (v NullableRetrieveRecipeInformationAPI200Response) Get() *RetrieveRecipeInformationAPI200Response {
	return v.value
}

func (v *NullableRetrieveRecipeInformationAPI200Response) Set(val *RetrieveRecipeInformationAPI200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableRetrieveRecipeInformationAPI200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableRetrieveRecipeInformationAPI200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRetrieveRecipeInformationAPI200Response(val *RetrieveRecipeInformationAPI200Response) *NullableRetrieveRecipeInformationAPI200Response {
	return &NullableRetrieveRecipeInformationAPI200Response{value: val, isSet: true}
}

func (v NullableRetrieveRecipeInformationAPI200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRetrieveRecipeInformationAPI200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
API League

API League is a Hub for World Class APIs.

API version: 1.6.4
Contact: mail@apileague.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apileague

import (
	"encoding/json"
)

// checks if the ScoreReadabilityAPI200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ScoreReadabilityAPI200Response{}

// ScoreReadabilityAPI200Response struct for ScoreReadabilityAPI200Response
type ScoreReadabilityAPI200Response struct {
	Readability *ScoreTextAPI200ResponseReadability `json:"readability,omitempty"`
}

// NewScoreReadabilityAPI200Response instantiates a new ScoreReadabilityAPI200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScoreReadabilityAPI200Response() *ScoreReadabilityAPI200Response {
	this := ScoreReadabilityAPI200Response{}
	return &this
}

// NewScoreReadabilityAPI200ResponseWithDefaults instantiates a new ScoreReadabilityAPI200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScoreReadabilityAPI200ResponseWithDefaults() *ScoreReadabilityAPI200Response {
	this := ScoreReadabilityAPI200Response{}
	return &this
}

// GetReadability returns the Readability field value if set, zero value otherwise.
func (o *ScoreReadabilityAPI200Response) GetReadability() ScoreTextAPI200ResponseReadability {
	if o == nil || IsNil(o.Readability) {
		var ret ScoreTextAPI200ResponseReadability
		return ret
	}
	return *o.Readability
}

// GetReadabilityOk returns a tuple with the Readability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScoreReadabilityAPI200Response) GetReadabilityOk() (*ScoreTextAPI200ResponseReadability, bool) {
	if o == nil || IsNil(o.Readability) {
		return nil, false
	}
	return o.Readability, true
}

// HasReadability returns a boolean if a field has been set.
func (o *ScoreReadabilityAPI200Response) HasReadability() bool {
	if o != nil && !IsNil(o.Readability) {
		return true
	}

	return false
}

// SetReadability gets a reference to the given ScoreTextAPI200ResponseReadability and assigns it to the Readability field.
func (o *ScoreReadabilityAPI200Response) SetReadability(v ScoreTextAPI200ResponseReadability) {
	o.Readability = &v
}

func (o ScoreReadabilityAPI200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ScoreReadabilityAPI200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Readability) {
		toSerialize["readability"] = o.Readability
	}
	return toSerialize, nil
}

type NullableScoreReadabilityAPI200Response struct {
	value *ScoreReadabilityAPI200Response
	isSet bool
}

func (v NullableScoreReadabilityAPI200Response) Get() *ScoreReadabilityAPI200Response {
	return v.value
}

func (v *NullableScoreReadabilityAPI200Response) Set(val *ScoreReadabilityAPI200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableScoreReadabilityAPI200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableScoreReadabilityAPI200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScoreReadabilityAPI200Response(val *ScoreReadabilityAPI200Response) *NullableScoreReadabilityAPI200Response {
	return &NullableScoreReadabilityAPI200Response{value: val, isSet: true}
}

func (v NullableScoreReadabilityAPI200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScoreReadabilityAPI200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



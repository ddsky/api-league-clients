/*
API League

API League is a Hub for World Class APIs.

API version: 1.0
Contact: mail@apileague.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse20019 struct for InlineResponse20019
type InlineResponse20019 struct {
	NumberOfWords *int32 `json:"number_of_words,omitempty"`
	NumberOfSentences *int32 `json:"number_of_sentences,omitempty"`
	Readability *InlineResponse20019Readability `json:"readability,omitempty"`
	Skimmability *InlineResponse20019Skimmability `json:"skimmability,omitempty"`
	Interestingness *InlineResponse20019Interestingness `json:"interestingness,omitempty"`
	Style *InlineResponse20019Style `json:"style,omitempty"`
	TotalScore *float32 `json:"total_score,omitempty"`
}

// NewInlineResponse20019 instantiates a new InlineResponse20019 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20019() *InlineResponse20019 {
	this := InlineResponse20019{}
	return &this
}

// NewInlineResponse20019WithDefaults instantiates a new InlineResponse20019 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20019WithDefaults() *InlineResponse20019 {
	this := InlineResponse20019{}
	return &this
}

// GetNumberOfWords returns the NumberOfWords field value if set, zero value otherwise.
func (o *InlineResponse20019) GetNumberOfWords() int32 {
	if o == nil || o.NumberOfWords == nil {
		var ret int32
		return ret
	}
	return *o.NumberOfWords
}

// GetNumberOfWordsOk returns a tuple with the NumberOfWords field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20019) GetNumberOfWordsOk() (*int32, bool) {
	if o == nil || o.NumberOfWords == nil {
		return nil, false
	}
	return o.NumberOfWords, true
}

// HasNumberOfWords returns a boolean if a field has been set.
func (o *InlineResponse20019) HasNumberOfWords() bool {
	if o != nil && o.NumberOfWords != nil {
		return true
	}

	return false
}

// SetNumberOfWords gets a reference to the given int32 and assigns it to the NumberOfWords field.
func (o *InlineResponse20019) SetNumberOfWords(v int32) {
	o.NumberOfWords = &v
}

// GetNumberOfSentences returns the NumberOfSentences field value if set, zero value otherwise.
func (o *InlineResponse20019) GetNumberOfSentences() int32 {
	if o == nil || o.NumberOfSentences == nil {
		var ret int32
		return ret
	}
	return *o.NumberOfSentences
}

// GetNumberOfSentencesOk returns a tuple with the NumberOfSentences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20019) GetNumberOfSentencesOk() (*int32, bool) {
	if o == nil || o.NumberOfSentences == nil {
		return nil, false
	}
	return o.NumberOfSentences, true
}

// HasNumberOfSentences returns a boolean if a field has been set.
func (o *InlineResponse20019) HasNumberOfSentences() bool {
	if o != nil && o.NumberOfSentences != nil {
		return true
	}

	return false
}

// SetNumberOfSentences gets a reference to the given int32 and assigns it to the NumberOfSentences field.
func (o *InlineResponse20019) SetNumberOfSentences(v int32) {
	o.NumberOfSentences = &v
}

// GetReadability returns the Readability field value if set, zero value otherwise.
func (o *InlineResponse20019) GetReadability() InlineResponse20019Readability {
	if o == nil || o.Readability == nil {
		var ret InlineResponse20019Readability
		return ret
	}
	return *o.Readability
}

// GetReadabilityOk returns a tuple with the Readability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20019) GetReadabilityOk() (*InlineResponse20019Readability, bool) {
	if o == nil || o.Readability == nil {
		return nil, false
	}
	return o.Readability, true
}

// HasReadability returns a boolean if a field has been set.
func (o *InlineResponse20019) HasReadability() bool {
	if o != nil && o.Readability != nil {
		return true
	}

	return false
}

// SetReadability gets a reference to the given InlineResponse20019Readability and assigns it to the Readability field.
func (o *InlineResponse20019) SetReadability(v InlineResponse20019Readability) {
	o.Readability = &v
}

// GetSkimmability returns the Skimmability field value if set, zero value otherwise.
func (o *InlineResponse20019) GetSkimmability() InlineResponse20019Skimmability {
	if o == nil || o.Skimmability == nil {
		var ret InlineResponse20019Skimmability
		return ret
	}
	return *o.Skimmability
}

// GetSkimmabilityOk returns a tuple with the Skimmability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20019) GetSkimmabilityOk() (*InlineResponse20019Skimmability, bool) {
	if o == nil || o.Skimmability == nil {
		return nil, false
	}
	return o.Skimmability, true
}

// HasSkimmability returns a boolean if a field has been set.
func (o *InlineResponse20019) HasSkimmability() bool {
	if o != nil && o.Skimmability != nil {
		return true
	}

	return false
}

// SetSkimmability gets a reference to the given InlineResponse20019Skimmability and assigns it to the Skimmability field.
func (o *InlineResponse20019) SetSkimmability(v InlineResponse20019Skimmability) {
	o.Skimmability = &v
}

// GetInterestingness returns the Interestingness field value if set, zero value otherwise.
func (o *InlineResponse20019) GetInterestingness() InlineResponse20019Interestingness {
	if o == nil || o.Interestingness == nil {
		var ret InlineResponse20019Interestingness
		return ret
	}
	return *o.Interestingness
}

// GetInterestingnessOk returns a tuple with the Interestingness field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20019) GetInterestingnessOk() (*InlineResponse20019Interestingness, bool) {
	if o == nil || o.Interestingness == nil {
		return nil, false
	}
	return o.Interestingness, true
}

// HasInterestingness returns a boolean if a field has been set.
func (o *InlineResponse20019) HasInterestingness() bool {
	if o != nil && o.Interestingness != nil {
		return true
	}

	return false
}

// SetInterestingness gets a reference to the given InlineResponse20019Interestingness and assigns it to the Interestingness field.
func (o *InlineResponse20019) SetInterestingness(v InlineResponse20019Interestingness) {
	o.Interestingness = &v
}

// GetStyle returns the Style field value if set, zero value otherwise.
func (o *InlineResponse20019) GetStyle() InlineResponse20019Style {
	if o == nil || o.Style == nil {
		var ret InlineResponse20019Style
		return ret
	}
	return *o.Style
}

// GetStyleOk returns a tuple with the Style field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20019) GetStyleOk() (*InlineResponse20019Style, bool) {
	if o == nil || o.Style == nil {
		return nil, false
	}
	return o.Style, true
}

// HasStyle returns a boolean if a field has been set.
func (o *InlineResponse20019) HasStyle() bool {
	if o != nil && o.Style != nil {
		return true
	}

	return false
}

// SetStyle gets a reference to the given InlineResponse20019Style and assigns it to the Style field.
func (o *InlineResponse20019) SetStyle(v InlineResponse20019Style) {
	o.Style = &v
}

// GetTotalScore returns the TotalScore field value if set, zero value otherwise.
func (o *InlineResponse20019) GetTotalScore() float32 {
	if o == nil || o.TotalScore == nil {
		var ret float32
		return ret
	}
	return *o.TotalScore
}

// GetTotalScoreOk returns a tuple with the TotalScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20019) GetTotalScoreOk() (*float32, bool) {
	if o == nil || o.TotalScore == nil {
		return nil, false
	}
	return o.TotalScore, true
}

// HasTotalScore returns a boolean if a field has been set.
func (o *InlineResponse20019) HasTotalScore() bool {
	if o != nil && o.TotalScore != nil {
		return true
	}

	return false
}

// SetTotalScore gets a reference to the given float32 and assigns it to the TotalScore field.
func (o *InlineResponse20019) SetTotalScore(v float32) {
	o.TotalScore = &v
}

func (o InlineResponse20019) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NumberOfWords != nil {
		toSerialize["number_of_words"] = o.NumberOfWords
	}
	if o.NumberOfSentences != nil {
		toSerialize["number_of_sentences"] = o.NumberOfSentences
	}
	if o.Readability != nil {
		toSerialize["readability"] = o.Readability
	}
	if o.Skimmability != nil {
		toSerialize["skimmability"] = o.Skimmability
	}
	if o.Interestingness != nil {
		toSerialize["interestingness"] = o.Interestingness
	}
	if o.Style != nil {
		toSerialize["style"] = o.Style
	}
	if o.TotalScore != nil {
		toSerialize["total_score"] = o.TotalScore
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20019 struct {
	value *InlineResponse20019
	isSet bool
}

func (v NullableInlineResponse20019) Get() *InlineResponse20019 {
	return v.value
}

func (v *NullableInlineResponse20019) Set(val *InlineResponse20019) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20019) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20019) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20019(val *InlineResponse20019) *NullableInlineResponse20019 {
	return &NullableInlineResponse20019{value: val, isSet: true}
}

func (v NullableInlineResponse20019) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20019) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



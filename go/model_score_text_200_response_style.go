/*
API League

API League is a Hub for World Class APIs.

API version: 1.4.1
Contact: mail@apileague.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apileague

import (
	"encoding/json"
)

// checks if the ScoreText200ResponseStyle type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ScoreText200ResponseStyle{}

// ScoreText200ResponseStyle struct for ScoreText200ResponseStyle
type ScoreText200ResponseStyle struct {
	Mainscores *ScoreText200ResponseReadabilityMainscores `json:"mainscores,omitempty"`
	Subscores *ScoreText200ResponseStyleSubscores `json:"subscores,omitempty"`
}

// NewScoreText200ResponseStyle instantiates a new ScoreText200ResponseStyle object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScoreText200ResponseStyle() *ScoreText200ResponseStyle {
	this := ScoreText200ResponseStyle{}
	return &this
}

// NewScoreText200ResponseStyleWithDefaults instantiates a new ScoreText200ResponseStyle object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScoreText200ResponseStyleWithDefaults() *ScoreText200ResponseStyle {
	this := ScoreText200ResponseStyle{}
	return &this
}

// GetMainscores returns the Mainscores field value if set, zero value otherwise.
func (o *ScoreText200ResponseStyle) GetMainscores() ScoreText200ResponseReadabilityMainscores {
	if o == nil || IsNil(o.Mainscores) {
		var ret ScoreText200ResponseReadabilityMainscores
		return ret
	}
	return *o.Mainscores
}

// GetMainscoresOk returns a tuple with the Mainscores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScoreText200ResponseStyle) GetMainscoresOk() (*ScoreText200ResponseReadabilityMainscores, bool) {
	if o == nil || IsNil(o.Mainscores) {
		return nil, false
	}
	return o.Mainscores, true
}

// HasMainscores returns a boolean if a field has been set.
func (o *ScoreText200ResponseStyle) HasMainscores() bool {
	if o != nil && !IsNil(o.Mainscores) {
		return true
	}

	return false
}

// SetMainscores gets a reference to the given ScoreText200ResponseReadabilityMainscores and assigns it to the Mainscores field.
func (o *ScoreText200ResponseStyle) SetMainscores(v ScoreText200ResponseReadabilityMainscores) {
	o.Mainscores = &v
}

// GetSubscores returns the Subscores field value if set, zero value otherwise.
func (o *ScoreText200ResponseStyle) GetSubscores() ScoreText200ResponseStyleSubscores {
	if o == nil || IsNil(o.Subscores) {
		var ret ScoreText200ResponseStyleSubscores
		return ret
	}
	return *o.Subscores
}

// GetSubscoresOk returns a tuple with the Subscores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScoreText200ResponseStyle) GetSubscoresOk() (*ScoreText200ResponseStyleSubscores, bool) {
	if o == nil || IsNil(o.Subscores) {
		return nil, false
	}
	return o.Subscores, true
}

// HasSubscores returns a boolean if a field has been set.
func (o *ScoreText200ResponseStyle) HasSubscores() bool {
	if o != nil && !IsNil(o.Subscores) {
		return true
	}

	return false
}

// SetSubscores gets a reference to the given ScoreText200ResponseStyleSubscores and assigns it to the Subscores field.
func (o *ScoreText200ResponseStyle) SetSubscores(v ScoreText200ResponseStyleSubscores) {
	o.Subscores = &v
}

func (o ScoreText200ResponseStyle) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ScoreText200ResponseStyle) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Mainscores) {
		toSerialize["mainscores"] = o.Mainscores
	}
	if !IsNil(o.Subscores) {
		toSerialize["subscores"] = o.Subscores
	}
	return toSerialize, nil
}

type NullableScoreText200ResponseStyle struct {
	value *ScoreText200ResponseStyle
	isSet bool
}

func (v NullableScoreText200ResponseStyle) Get() *ScoreText200ResponseStyle {
	return v.value
}

func (v *NullableScoreText200ResponseStyle) Set(val *ScoreText200ResponseStyle) {
	v.value = val
	v.isSet = true
}

func (v NullableScoreText200ResponseStyle) IsSet() bool {
	return v.isSet
}

func (v *NullableScoreText200ResponseStyle) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScoreText200ResponseStyle(val *ScoreText200ResponseStyle) *NullableScoreText200ResponseStyle {
	return &NullableScoreText200ResponseStyle{value: val, isSet: true}
}

func (v NullableScoreText200ResponseStyle) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScoreText200ResponseStyle) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



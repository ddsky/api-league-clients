/*
API League

API League is a Hub for World Class APIs.

API version: 1.6.4
Contact: mail@apileague.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apileague

import (
	"encoding/json"
)

// checks if the RetrieveRecipeInformationAPI200ResponseDietaryProperties type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RetrieveRecipeInformationAPI200ResponseDietaryProperties{}

// RetrieveRecipeInformationAPI200ResponseDietaryProperties struct for RetrieveRecipeInformationAPI200ResponseDietaryProperties
type RetrieveRecipeInformationAPI200ResponseDietaryProperties struct {
	LowFodmap *bool `json:"low_fodmap,omitempty"`
	Vegetarian *bool `json:"vegetarian,omitempty"`
	Vegan *bool `json:"vegan,omitempty"`
	GlutenFree *bool `json:"gluten_free,omitempty"`
	DairyFree *bool `json:"dairy_free,omitempty"`
	Gaps NullableString `json:"gaps,omitempty"`
	Diets []*string `json:"diets,omitempty"`
}

// NewRetrieveRecipeInformationAPI200ResponseDietaryProperties instantiates a new RetrieveRecipeInformationAPI200ResponseDietaryProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRetrieveRecipeInformationAPI200ResponseDietaryProperties() *RetrieveRecipeInformationAPI200ResponseDietaryProperties {
	this := RetrieveRecipeInformationAPI200ResponseDietaryProperties{}
	return &this
}

// NewRetrieveRecipeInformationAPI200ResponseDietaryPropertiesWithDefaults instantiates a new RetrieveRecipeInformationAPI200ResponseDietaryProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRetrieveRecipeInformationAPI200ResponseDietaryPropertiesWithDefaults() *RetrieveRecipeInformationAPI200ResponseDietaryProperties {
	this := RetrieveRecipeInformationAPI200ResponseDietaryProperties{}
	return &this
}

// GetLowFodmap returns the LowFodmap field value if set, zero value otherwise.
func (o *RetrieveRecipeInformationAPI200ResponseDietaryProperties) GetLowFodmap() bool {
	if o == nil || IsNil(o.LowFodmap) {
		var ret bool
		return ret
	}
	return *o.LowFodmap
}

// GetLowFodmapOk returns a tuple with the LowFodmap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetrieveRecipeInformationAPI200ResponseDietaryProperties) GetLowFodmapOk() (*bool, bool) {
	if o == nil || IsNil(o.LowFodmap) {
		return nil, false
	}
	return o.LowFodmap, true
}

// HasLowFodmap returns a boolean if a field has been set.
func (o *RetrieveRecipeInformationAPI200ResponseDietaryProperties) HasLowFodmap() bool {
	if o != nil && !IsNil(o.LowFodmap) {
		return true
	}

	return false
}

// SetLowFodmap gets a reference to the given bool and assigns it to the LowFodmap field.
func (o *RetrieveRecipeInformationAPI200ResponseDietaryProperties) SetLowFodmap(v bool) {
	o.LowFodmap = &v
}

// GetVegetarian returns the Vegetarian field value if set, zero value otherwise.
func (o *RetrieveRecipeInformationAPI200ResponseDietaryProperties) GetVegetarian() bool {
	if o == nil || IsNil(o.Vegetarian) {
		var ret bool
		return ret
	}
	return *o.Vegetarian
}

// GetVegetarianOk returns a tuple with the Vegetarian field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetrieveRecipeInformationAPI200ResponseDietaryProperties) GetVegetarianOk() (*bool, bool) {
	if o == nil || IsNil(o.Vegetarian) {
		return nil, false
	}
	return o.Vegetarian, true
}

// HasVegetarian returns a boolean if a field has been set.
func (o *RetrieveRecipeInformationAPI200ResponseDietaryProperties) HasVegetarian() bool {
	if o != nil && !IsNil(o.Vegetarian) {
		return true
	}

	return false
}

// SetVegetarian gets a reference to the given bool and assigns it to the Vegetarian field.
func (o *RetrieveRecipeInformationAPI200ResponseDietaryProperties) SetVegetarian(v bool) {
	o.Vegetarian = &v
}

// GetVegan returns the Vegan field value if set, zero value otherwise.
func (o *RetrieveRecipeInformationAPI200ResponseDietaryProperties) GetVegan() bool {
	if o == nil || IsNil(o.Vegan) {
		var ret bool
		return ret
	}
	return *o.Vegan
}

// GetVeganOk returns a tuple with the Vegan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetrieveRecipeInformationAPI200ResponseDietaryProperties) GetVeganOk() (*bool, bool) {
	if o == nil || IsNil(o.Vegan) {
		return nil, false
	}
	return o.Vegan, true
}

// HasVegan returns a boolean if a field has been set.
func (o *RetrieveRecipeInformationAPI200ResponseDietaryProperties) HasVegan() bool {
	if o != nil && !IsNil(o.Vegan) {
		return true
	}

	return false
}

// SetVegan gets a reference to the given bool and assigns it to the Vegan field.
func (o *RetrieveRecipeInformationAPI200ResponseDietaryProperties) SetVegan(v bool) {
	o.Vegan = &v
}

// GetGlutenFree returns the GlutenFree field value if set, zero value otherwise.
func (o *RetrieveRecipeInformationAPI200ResponseDietaryProperties) GetGlutenFree() bool {
	if o == nil || IsNil(o.GlutenFree) {
		var ret bool
		return ret
	}
	return *o.GlutenFree
}

// GetGlutenFreeOk returns a tuple with the GlutenFree field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetrieveRecipeInformationAPI200ResponseDietaryProperties) GetGlutenFreeOk() (*bool, bool) {
	if o == nil || IsNil(o.GlutenFree) {
		return nil, false
	}
	return o.GlutenFree, true
}

// HasGlutenFree returns a boolean if a field has been set.
func (o *RetrieveRecipeInformationAPI200ResponseDietaryProperties) HasGlutenFree() bool {
	if o != nil && !IsNil(o.GlutenFree) {
		return true
	}

	return false
}

// SetGlutenFree gets a reference to the given bool and assigns it to the GlutenFree field.
func (o *RetrieveRecipeInformationAPI200ResponseDietaryProperties) SetGlutenFree(v bool) {
	o.GlutenFree = &v
}

// GetDairyFree returns the DairyFree field value if set, zero value otherwise.
func (o *RetrieveRecipeInformationAPI200ResponseDietaryProperties) GetDairyFree() bool {
	if o == nil || IsNil(o.DairyFree) {
		var ret bool
		return ret
	}
	return *o.DairyFree
}

// GetDairyFreeOk returns a tuple with the DairyFree field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetrieveRecipeInformationAPI200ResponseDietaryProperties) GetDairyFreeOk() (*bool, bool) {
	if o == nil || IsNil(o.DairyFree) {
		return nil, false
	}
	return o.DairyFree, true
}

// HasDairyFree returns a boolean if a field has been set.
func (o *RetrieveRecipeInformationAPI200ResponseDietaryProperties) HasDairyFree() bool {
	if o != nil && !IsNil(o.DairyFree) {
		return true
	}

	return false
}

// SetDairyFree gets a reference to the given bool and assigns it to the DairyFree field.
func (o *RetrieveRecipeInformationAPI200ResponseDietaryProperties) SetDairyFree(v bool) {
	o.DairyFree = &v
}

// GetGaps returns the Gaps field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RetrieveRecipeInformationAPI200ResponseDietaryProperties) GetGaps() string {
	if o == nil || IsNil(o.Gaps.Get()) {
		var ret string
		return ret
	}
	return *o.Gaps.Get()
}

// GetGapsOk returns a tuple with the Gaps field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RetrieveRecipeInformationAPI200ResponseDietaryProperties) GetGapsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Gaps.Get(), o.Gaps.IsSet()
}

// HasGaps returns a boolean if a field has been set.
func (o *RetrieveRecipeInformationAPI200ResponseDietaryProperties) HasGaps() bool {
	if o != nil && o.Gaps.IsSet() {
		return true
	}

	return false
}

// SetGaps gets a reference to the given NullableString and assigns it to the Gaps field.
func (o *RetrieveRecipeInformationAPI200ResponseDietaryProperties) SetGaps(v string) {
	o.Gaps.Set(&v)
}
// SetGapsNil sets the value for Gaps to be an explicit nil
func (o *RetrieveRecipeInformationAPI200ResponseDietaryProperties) SetGapsNil() {
	o.Gaps.Set(nil)
}

// UnsetGaps ensures that no value is present for Gaps, not even an explicit nil
func (o *RetrieveRecipeInformationAPI200ResponseDietaryProperties) UnsetGaps() {
	o.Gaps.Unset()
}

// GetDiets returns the Diets field value if set, zero value otherwise.
func (o *RetrieveRecipeInformationAPI200ResponseDietaryProperties) GetDiets() []*string {
	if o == nil || IsNil(o.Diets) {
		var ret []*string
		return ret
	}
	return o.Diets
}

// GetDietsOk returns a tuple with the Diets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetrieveRecipeInformationAPI200ResponseDietaryProperties) GetDietsOk() ([]*string, bool) {
	if o == nil || IsNil(o.Diets) {
		return nil, false
	}
	return o.Diets, true
}

// HasDiets returns a boolean if a field has been set.
func (o *RetrieveRecipeInformationAPI200ResponseDietaryProperties) HasDiets() bool {
	if o != nil && !IsNil(o.Diets) {
		return true
	}

	return false
}

// SetDiets gets a reference to the given []*string and assigns it to the Diets field.
func (o *RetrieveRecipeInformationAPI200ResponseDietaryProperties) SetDiets(v []*string) {
	o.Diets = v
}

func (o RetrieveRecipeInformationAPI200ResponseDietaryProperties) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RetrieveRecipeInformationAPI200ResponseDietaryProperties) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LowFodmap) {
		toSerialize["low_fodmap"] = o.LowFodmap
	}
	if !IsNil(o.Vegetarian) {
		toSerialize["vegetarian"] = o.Vegetarian
	}
	if !IsNil(o.Vegan) {
		toSerialize["vegan"] = o.Vegan
	}
	if !IsNil(o.GlutenFree) {
		toSerialize["gluten_free"] = o.GlutenFree
	}
	if !IsNil(o.DairyFree) {
		toSerialize["dairy_free"] = o.DairyFree
	}
	if o.Gaps.IsSet() {
		toSerialize["gaps"] = o.Gaps.Get()
	}
	if !IsNil(o.Diets) {
		toSerialize["diets"] = o.Diets
	}
	return toSerialize, nil
}

type NullableRetrieveRecipeInformationAPI200ResponseDietaryProperties struct {
	value *RetrieveRecipeInformationAPI200ResponseDietaryProperties
	isSet bool
}

func (v NullableRetrieveRecipeInformationAPI200ResponseDietaryProperties) Get() *RetrieveRecipeInformationAPI200ResponseDietaryProperties {
	return v.value
}

func (v *NullableRetrieveRecipeInformationAPI200ResponseDietaryProperties) Set(val *RetrieveRecipeInformationAPI200ResponseDietaryProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableRetrieveRecipeInformationAPI200ResponseDietaryProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableRetrieveRecipeInformationAPI200ResponseDietaryProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRetrieveRecipeInformationAPI200ResponseDietaryProperties(val *RetrieveRecipeInformationAPI200ResponseDietaryProperties) *NullableRetrieveRecipeInformationAPI200ResponseDietaryProperties {
	return &NullableRetrieveRecipeInformationAPI200ResponseDietaryProperties{value: val, isSet: true}
}

func (v NullableRetrieveRecipeInformationAPI200ResponseDietaryProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRetrieveRecipeInformationAPI200ResponseDietaryProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
API League

API League is a Hub for World Class APIs.

API version: 1.6.4
Contact: mail@apileague.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apileague

import (
	"encoding/json"
)

// checks if the SearchRestaurantsAPI200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchRestaurantsAPI200Response{}

// SearchRestaurantsAPI200Response struct for SearchRestaurantsAPI200Response
type SearchRestaurantsAPI200Response struct {
	Restaurants []SearchRestaurantsAPI200ResponseRestaurantsInner `json:"restaurants,omitempty"`
}

// NewSearchRestaurantsAPI200Response instantiates a new SearchRestaurantsAPI200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchRestaurantsAPI200Response() *SearchRestaurantsAPI200Response {
	this := SearchRestaurantsAPI200Response{}
	return &this
}

// NewSearchRestaurantsAPI200ResponseWithDefaults instantiates a new SearchRestaurantsAPI200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchRestaurantsAPI200ResponseWithDefaults() *SearchRestaurantsAPI200Response {
	this := SearchRestaurantsAPI200Response{}
	return &this
}

// GetRestaurants returns the Restaurants field value if set, zero value otherwise.
func (o *SearchRestaurantsAPI200Response) GetRestaurants() []SearchRestaurantsAPI200ResponseRestaurantsInner {
	if o == nil || IsNil(o.Restaurants) {
		var ret []SearchRestaurantsAPI200ResponseRestaurantsInner
		return ret
	}
	return o.Restaurants
}

// GetRestaurantsOk returns a tuple with the Restaurants field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchRestaurantsAPI200Response) GetRestaurantsOk() ([]SearchRestaurantsAPI200ResponseRestaurantsInner, bool) {
	if o == nil || IsNil(o.Restaurants) {
		return nil, false
	}
	return o.Restaurants, true
}

// HasRestaurants returns a boolean if a field has been set.
func (o *SearchRestaurantsAPI200Response) HasRestaurants() bool {
	if o != nil && !IsNil(o.Restaurants) {
		return true
	}

	return false
}

// SetRestaurants gets a reference to the given []SearchRestaurantsAPI200ResponseRestaurantsInner and assigns it to the Restaurants field.
func (o *SearchRestaurantsAPI200Response) SetRestaurants(v []SearchRestaurantsAPI200ResponseRestaurantsInner) {
	o.Restaurants = v
}

func (o SearchRestaurantsAPI200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchRestaurantsAPI200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Restaurants) {
		toSerialize["restaurants"] = o.Restaurants
	}
	return toSerialize, nil
}

type NullableSearchRestaurantsAPI200Response struct {
	value *SearchRestaurantsAPI200Response
	isSet bool
}

func (v NullableSearchRestaurantsAPI200Response) Get() *SearchRestaurantsAPI200Response {
	return v.value
}

func (v *NullableSearchRestaurantsAPI200Response) Set(val *SearchRestaurantsAPI200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchRestaurantsAPI200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchRestaurantsAPI200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchRestaurantsAPI200Response(val *SearchRestaurantsAPI200Response) *NullableSearchRestaurantsAPI200Response {
	return &NullableSearchRestaurantsAPI200Response{value: val, isSet: true}
}

func (v NullableSearchRestaurantsAPI200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchRestaurantsAPI200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



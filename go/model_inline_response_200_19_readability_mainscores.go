/*
API League

API League is a Hub for World Class APIs.

API version: 1.0
Contact: mail@apileague.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse20019ReadabilityMainscores struct for InlineResponse20019ReadabilityMainscores
type InlineResponse20019ReadabilityMainscores struct {
	TotalPossible *int32 `json:"total_possible,omitempty"`
	Total *int32 `json:"total,omitempty"`
}

// NewInlineResponse20019ReadabilityMainscores instantiates a new InlineResponse20019ReadabilityMainscores object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20019ReadabilityMainscores() *InlineResponse20019ReadabilityMainscores {
	this := InlineResponse20019ReadabilityMainscores{}
	return &this
}

// NewInlineResponse20019ReadabilityMainscoresWithDefaults instantiates a new InlineResponse20019ReadabilityMainscores object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20019ReadabilityMainscoresWithDefaults() *InlineResponse20019ReadabilityMainscores {
	this := InlineResponse20019ReadabilityMainscores{}
	return &this
}

// GetTotalPossible returns the TotalPossible field value if set, zero value otherwise.
func (o *InlineResponse20019ReadabilityMainscores) GetTotalPossible() int32 {
	if o == nil || o.TotalPossible == nil {
		var ret int32
		return ret
	}
	return *o.TotalPossible
}

// GetTotalPossibleOk returns a tuple with the TotalPossible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20019ReadabilityMainscores) GetTotalPossibleOk() (*int32, bool) {
	if o == nil || o.TotalPossible == nil {
		return nil, false
	}
	return o.TotalPossible, true
}

// HasTotalPossible returns a boolean if a field has been set.
func (o *InlineResponse20019ReadabilityMainscores) HasTotalPossible() bool {
	if o != nil && o.TotalPossible != nil {
		return true
	}

	return false
}

// SetTotalPossible gets a reference to the given int32 and assigns it to the TotalPossible field.
func (o *InlineResponse20019ReadabilityMainscores) SetTotalPossible(v int32) {
	o.TotalPossible = &v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *InlineResponse20019ReadabilityMainscores) GetTotal() int32 {
	if o == nil || o.Total == nil {
		var ret int32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20019ReadabilityMainscores) GetTotalOk() (*int32, bool) {
	if o == nil || o.Total == nil {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *InlineResponse20019ReadabilityMainscores) HasTotal() bool {
	if o != nil && o.Total != nil {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int32 and assigns it to the Total field.
func (o *InlineResponse20019ReadabilityMainscores) SetTotal(v int32) {
	o.Total = &v
}

func (o InlineResponse20019ReadabilityMainscores) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TotalPossible != nil {
		toSerialize["total_possible"] = o.TotalPossible
	}
	if o.Total != nil {
		toSerialize["total"] = o.Total
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20019ReadabilityMainscores struct {
	value *InlineResponse20019ReadabilityMainscores
	isSet bool
}

func (v NullableInlineResponse20019ReadabilityMainscores) Get() *InlineResponse20019ReadabilityMainscores {
	return v.value
}

func (v *NullableInlineResponse20019ReadabilityMainscores) Set(val *InlineResponse20019ReadabilityMainscores) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20019ReadabilityMainscores) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20019ReadabilityMainscores) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20019ReadabilityMainscores(val *InlineResponse20019ReadabilityMainscores) *NullableInlineResponse20019ReadabilityMainscores {
	return &NullableInlineResponse20019ReadabilityMainscores{value: val, isSet: true}
}

func (v NullableInlineResponse20019ReadabilityMainscores) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20019ReadabilityMainscores) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



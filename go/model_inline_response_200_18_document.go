/*
API League

API League is a Hub for World Class APIs.

API version: 1.0
Contact: mail@apileague.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse20018Document struct for InlineResponse20018Document
type InlineResponse20018Document struct {
	Sentiment NullableString `json:"sentiment,omitempty"`
	Confidence *int32 `json:"confidence,omitempty"`
	AverageConfidence *int32 `json:"average_confidence,omitempty"`
}

// NewInlineResponse20018Document instantiates a new InlineResponse20018Document object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20018Document() *InlineResponse20018Document {
	this := InlineResponse20018Document{}
	return &this
}

// NewInlineResponse20018DocumentWithDefaults instantiates a new InlineResponse20018Document object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20018DocumentWithDefaults() *InlineResponse20018Document {
	this := InlineResponse20018Document{}
	return &this
}

// GetSentiment returns the Sentiment field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20018Document) GetSentiment() string {
	if o == nil || o.Sentiment.Get() == nil {
		var ret string
		return ret
	}
	return *o.Sentiment.Get()
}

// GetSentimentOk returns a tuple with the Sentiment field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20018Document) GetSentimentOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Sentiment.Get(), o.Sentiment.IsSet()
}

// HasSentiment returns a boolean if a field has been set.
func (o *InlineResponse20018Document) HasSentiment() bool {
	if o != nil && o.Sentiment.IsSet() {
		return true
	}

	return false
}

// SetSentiment gets a reference to the given NullableString and assigns it to the Sentiment field.
func (o *InlineResponse20018Document) SetSentiment(v string) {
	o.Sentiment.Set(&v)
}
// SetSentimentNil sets the value for Sentiment to be an explicit nil
func (o *InlineResponse20018Document) SetSentimentNil() {
	o.Sentiment.Set(nil)
}

// UnsetSentiment ensures that no value is present for Sentiment, not even an explicit nil
func (o *InlineResponse20018Document) UnsetSentiment() {
	o.Sentiment.Unset()
}

// GetConfidence returns the Confidence field value if set, zero value otherwise.
func (o *InlineResponse20018Document) GetConfidence() int32 {
	if o == nil || o.Confidence == nil {
		var ret int32
		return ret
	}
	return *o.Confidence
}

// GetConfidenceOk returns a tuple with the Confidence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20018Document) GetConfidenceOk() (*int32, bool) {
	if o == nil || o.Confidence == nil {
		return nil, false
	}
	return o.Confidence, true
}

// HasConfidence returns a boolean if a field has been set.
func (o *InlineResponse20018Document) HasConfidence() bool {
	if o != nil && o.Confidence != nil {
		return true
	}

	return false
}

// SetConfidence gets a reference to the given int32 and assigns it to the Confidence field.
func (o *InlineResponse20018Document) SetConfidence(v int32) {
	o.Confidence = &v
}

// GetAverageConfidence returns the AverageConfidence field value if set, zero value otherwise.
func (o *InlineResponse20018Document) GetAverageConfidence() int32 {
	if o == nil || o.AverageConfidence == nil {
		var ret int32
		return ret
	}
	return *o.AverageConfidence
}

// GetAverageConfidenceOk returns a tuple with the AverageConfidence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20018Document) GetAverageConfidenceOk() (*int32, bool) {
	if o == nil || o.AverageConfidence == nil {
		return nil, false
	}
	return o.AverageConfidence, true
}

// HasAverageConfidence returns a boolean if a field has been set.
func (o *InlineResponse20018Document) HasAverageConfidence() bool {
	if o != nil && o.AverageConfidence != nil {
		return true
	}

	return false
}

// SetAverageConfidence gets a reference to the given int32 and assigns it to the AverageConfidence field.
func (o *InlineResponse20018Document) SetAverageConfidence(v int32) {
	o.AverageConfidence = &v
}

func (o InlineResponse20018Document) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Sentiment.IsSet() {
		toSerialize["sentiment"] = o.Sentiment.Get()
	}
	if o.Confidence != nil {
		toSerialize["confidence"] = o.Confidence
	}
	if o.AverageConfidence != nil {
		toSerialize["average_confidence"] = o.AverageConfidence
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20018Document struct {
	value *InlineResponse20018Document
	isSet bool
}

func (v NullableInlineResponse20018Document) Get() *InlineResponse20018Document {
	return v.value
}

func (v *NullableInlineResponse20018Document) Set(val *InlineResponse20018Document) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20018Document) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20018Document) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20018Document(val *InlineResponse20018Document) *NullableInlineResponse20018Document {
	return &NullableInlineResponse20018Document{value: val, isSet: true}
}

func (v NullableInlineResponse20018Document) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20018Document) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



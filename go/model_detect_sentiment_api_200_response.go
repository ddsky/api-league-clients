/*
API League

API League is a Hub for World Class APIs.

API version: 1.6.4
Contact: mail@apileague.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apileague

import (
	"encoding/json"
)

// checks if the DetectSentimentAPI200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DetectSentimentAPI200Response{}

// DetectSentimentAPI200Response struct for DetectSentimentAPI200Response
type DetectSentimentAPI200Response struct {
	Document *DetectSentimentAPI200ResponseDocument `json:"document,omitempty"`
	Sentences []DetectSentimentAPI200ResponseSentencesInner `json:"sentences,omitempty"`
}

// NewDetectSentimentAPI200Response instantiates a new DetectSentimentAPI200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDetectSentimentAPI200Response() *DetectSentimentAPI200Response {
	this := DetectSentimentAPI200Response{}
	return &this
}

// NewDetectSentimentAPI200ResponseWithDefaults instantiates a new DetectSentimentAPI200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDetectSentimentAPI200ResponseWithDefaults() *DetectSentimentAPI200Response {
	this := DetectSentimentAPI200Response{}
	return &this
}

// GetDocument returns the Document field value if set, zero value otherwise.
func (o *DetectSentimentAPI200Response) GetDocument() DetectSentimentAPI200ResponseDocument {
	if o == nil || IsNil(o.Document) {
		var ret DetectSentimentAPI200ResponseDocument
		return ret
	}
	return *o.Document
}

// GetDocumentOk returns a tuple with the Document field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetectSentimentAPI200Response) GetDocumentOk() (*DetectSentimentAPI200ResponseDocument, bool) {
	if o == nil || IsNil(o.Document) {
		return nil, false
	}
	return o.Document, true
}

// HasDocument returns a boolean if a field has been set.
func (o *DetectSentimentAPI200Response) HasDocument() bool {
	if o != nil && !IsNil(o.Document) {
		return true
	}

	return false
}

// SetDocument gets a reference to the given DetectSentimentAPI200ResponseDocument and assigns it to the Document field.
func (o *DetectSentimentAPI200Response) SetDocument(v DetectSentimentAPI200ResponseDocument) {
	o.Document = &v
}

// GetSentences returns the Sentences field value if set, zero value otherwise.
func (o *DetectSentimentAPI200Response) GetSentences() []DetectSentimentAPI200ResponseSentencesInner {
	if o == nil || IsNil(o.Sentences) {
		var ret []DetectSentimentAPI200ResponseSentencesInner
		return ret
	}
	return o.Sentences
}

// GetSentencesOk returns a tuple with the Sentences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetectSentimentAPI200Response) GetSentencesOk() ([]DetectSentimentAPI200ResponseSentencesInner, bool) {
	if o == nil || IsNil(o.Sentences) {
		return nil, false
	}
	return o.Sentences, true
}

// HasSentences returns a boolean if a field has been set.
func (o *DetectSentimentAPI200Response) HasSentences() bool {
	if o != nil && !IsNil(o.Sentences) {
		return true
	}

	return false
}

// SetSentences gets a reference to the given []DetectSentimentAPI200ResponseSentencesInner and assigns it to the Sentences field.
func (o *DetectSentimentAPI200Response) SetSentences(v []DetectSentimentAPI200ResponseSentencesInner) {
	o.Sentences = v
}

func (o DetectSentimentAPI200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DetectSentimentAPI200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Document) {
		toSerialize["document"] = o.Document
	}
	if !IsNil(o.Sentences) {
		toSerialize["sentences"] = o.Sentences
	}
	return toSerialize, nil
}

type NullableDetectSentimentAPI200Response struct {
	value *DetectSentimentAPI200Response
	isSet bool
}

func (v NullableDetectSentimentAPI200Response) Get() *DetectSentimentAPI200Response {
	return v.value
}

func (v *NullableDetectSentimentAPI200Response) Set(val *DetectSentimentAPI200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableDetectSentimentAPI200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableDetectSentimentAPI200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDetectSentimentAPI200Response(val *DetectSentimentAPI200Response) *NullableDetectSentimentAPI200Response {
	return &NullableDetectSentimentAPI200Response{value: val, isSet: true}
}

func (v NullableDetectSentimentAPI200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDetectSentimentAPI200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



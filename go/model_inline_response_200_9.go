/*
API League

API League is a Hub for World Class APIs.

API version: 1.0
Contact: mail@apileague.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse2009 struct for InlineResponse2009
type InlineResponse2009 struct {
	Trivia NullableString `json:"trivia,omitempty"`
}

// NewInlineResponse2009 instantiates a new InlineResponse2009 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse2009() *InlineResponse2009 {
	this := InlineResponse2009{}
	return &this
}

// NewInlineResponse2009WithDefaults instantiates a new InlineResponse2009 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse2009WithDefaults() *InlineResponse2009 {
	this := InlineResponse2009{}
	return &this
}

// GetTrivia returns the Trivia field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse2009) GetTrivia() string {
	if o == nil || o.Trivia.Get() == nil {
		var ret string
		return ret
	}
	return *o.Trivia.Get()
}

// GetTriviaOk returns a tuple with the Trivia field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse2009) GetTriviaOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Trivia.Get(), o.Trivia.IsSet()
}

// HasTrivia returns a boolean if a field has been set.
func (o *InlineResponse2009) HasTrivia() bool {
	if o != nil && o.Trivia.IsSet() {
		return true
	}

	return false
}

// SetTrivia gets a reference to the given NullableString and assigns it to the Trivia field.
func (o *InlineResponse2009) SetTrivia(v string) {
	o.Trivia.Set(&v)
}
// SetTriviaNil sets the value for Trivia to be an explicit nil
func (o *InlineResponse2009) SetTriviaNil() {
	o.Trivia.Set(nil)
}

// UnsetTrivia ensures that no value is present for Trivia, not even an explicit nil
func (o *InlineResponse2009) UnsetTrivia() {
	o.Trivia.Unset()
}

func (o InlineResponse2009) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Trivia.IsSet() {
		toSerialize["trivia"] = o.Trivia.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse2009 struct {
	value *InlineResponse2009
	isSet bool
}

func (v NullableInlineResponse2009) Get() *InlineResponse2009 {
	return v.value
}

func (v *NullableInlineResponse2009) Set(val *InlineResponse2009) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse2009) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse2009) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse2009(val *InlineResponse2009) *NullableInlineResponse2009 {
	return &NullableInlineResponse2009{value: val, isSet: true}
}

func (v NullableInlineResponse2009) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse2009) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



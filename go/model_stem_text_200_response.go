/*
API League

API League is a Hub for World Class APIs.

API version: 1.4.2
Contact: mail@apileague.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apileague

import (
	"encoding/json"
)

// checks if the StemText200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StemText200Response{}

// StemText200Response struct for StemText200Response
type StemText200Response struct {
	Original NullableString `json:"original,omitempty"`
	Stemmed NullableString `json:"stemmed,omitempty"`
}

// NewStemText200Response instantiates a new StemText200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStemText200Response() *StemText200Response {
	this := StemText200Response{}
	return &this
}

// NewStemText200ResponseWithDefaults instantiates a new StemText200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStemText200ResponseWithDefaults() *StemText200Response {
	this := StemText200Response{}
	return &this
}

// GetOriginal returns the Original field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *StemText200Response) GetOriginal() string {
	if o == nil || IsNil(o.Original.Get()) {
		var ret string
		return ret
	}
	return *o.Original.Get()
}

// GetOriginalOk returns a tuple with the Original field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StemText200Response) GetOriginalOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Original.Get(), o.Original.IsSet()
}

// HasOriginal returns a boolean if a field has been set.
func (o *StemText200Response) HasOriginal() bool {
	if o != nil && o.Original.IsSet() {
		return true
	}

	return false
}

// SetOriginal gets a reference to the given NullableString and assigns it to the Original field.
func (o *StemText200Response) SetOriginal(v string) {
	o.Original.Set(&v)
}
// SetOriginalNil sets the value for Original to be an explicit nil
func (o *StemText200Response) SetOriginalNil() {
	o.Original.Set(nil)
}

// UnsetOriginal ensures that no value is present for Original, not even an explicit nil
func (o *StemText200Response) UnsetOriginal() {
	o.Original.Unset()
}

// GetStemmed returns the Stemmed field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *StemText200Response) GetStemmed() string {
	if o == nil || IsNil(o.Stemmed.Get()) {
		var ret string
		return ret
	}
	return *o.Stemmed.Get()
}

// GetStemmedOk returns a tuple with the Stemmed field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StemText200Response) GetStemmedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Stemmed.Get(), o.Stemmed.IsSet()
}

// HasStemmed returns a boolean if a field has been set.
func (o *StemText200Response) HasStemmed() bool {
	if o != nil && o.Stemmed.IsSet() {
		return true
	}

	return false
}

// SetStemmed gets a reference to the given NullableString and assigns it to the Stemmed field.
func (o *StemText200Response) SetStemmed(v string) {
	o.Stemmed.Set(&v)
}
// SetStemmedNil sets the value for Stemmed to be an explicit nil
func (o *StemText200Response) SetStemmedNil() {
	o.Stemmed.Set(nil)
}

// UnsetStemmed ensures that no value is present for Stemmed, not even an explicit nil
func (o *StemText200Response) UnsetStemmed() {
	o.Stemmed.Unset()
}

func (o StemText200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StemText200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Original.IsSet() {
		toSerialize["original"] = o.Original.Get()
	}
	if o.Stemmed.IsSet() {
		toSerialize["stemmed"] = o.Stemmed.Get()
	}
	return toSerialize, nil
}

type NullableStemText200Response struct {
	value *StemText200Response
	isSet bool
}

func (v NullableStemText200Response) Get() *StemText200Response {
	return v.value
}

func (v *NullableStemText200Response) Set(val *StemText200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableStemText200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableStemText200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStemText200Response(val *StemText200Response) *NullableStemText200Response {
	return &NullableStemText200Response{value: val, isSet: true}
}

func (v NullableStemText200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStemText200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



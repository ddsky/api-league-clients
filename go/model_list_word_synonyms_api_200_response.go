/*
API League

API League is a Hub for World Class APIs.

API version: 1.6.4
Contact: mail@apileague.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apileague

import (
	"encoding/json"
)

// checks if the ListWordSynonymsAPI200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListWordSynonymsAPI200Response{}

// ListWordSynonymsAPI200Response struct for ListWordSynonymsAPI200Response
type ListWordSynonymsAPI200Response struct {
	Synonyms []*string `json:"synonyms,omitempty"`
}

// NewListWordSynonymsAPI200Response instantiates a new ListWordSynonymsAPI200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListWordSynonymsAPI200Response() *ListWordSynonymsAPI200Response {
	this := ListWordSynonymsAPI200Response{}
	return &this
}

// NewListWordSynonymsAPI200ResponseWithDefaults instantiates a new ListWordSynonymsAPI200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListWordSynonymsAPI200ResponseWithDefaults() *ListWordSynonymsAPI200Response {
	this := ListWordSynonymsAPI200Response{}
	return &this
}

// GetSynonyms returns the Synonyms field value if set, zero value otherwise.
func (o *ListWordSynonymsAPI200Response) GetSynonyms() []*string {
	if o == nil || IsNil(o.Synonyms) {
		var ret []*string
		return ret
	}
	return o.Synonyms
}

// GetSynonymsOk returns a tuple with the Synonyms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWordSynonymsAPI200Response) GetSynonymsOk() ([]*string, bool) {
	if o == nil || IsNil(o.Synonyms) {
		return nil, false
	}
	return o.Synonyms, true
}

// HasSynonyms returns a boolean if a field has been set.
func (o *ListWordSynonymsAPI200Response) HasSynonyms() bool {
	if o != nil && !IsNil(o.Synonyms) {
		return true
	}

	return false
}

// SetSynonyms gets a reference to the given []*string and assigns it to the Synonyms field.
func (o *ListWordSynonymsAPI200Response) SetSynonyms(v []*string) {
	o.Synonyms = v
}

func (o ListWordSynonymsAPI200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListWordSynonymsAPI200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Synonyms) {
		toSerialize["synonyms"] = o.Synonyms
	}
	return toSerialize, nil
}

type NullableListWordSynonymsAPI200Response struct {
	value *ListWordSynonymsAPI200Response
	isSet bool
}

func (v NullableListWordSynonymsAPI200Response) Get() *ListWordSynonymsAPI200Response {
	return v.value
}

func (v *NullableListWordSynonymsAPI200Response) Set(val *ListWordSynonymsAPI200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListWordSynonymsAPI200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListWordSynonymsAPI200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListWordSynonymsAPI200Response(val *ListWordSynonymsAPI200Response) *NullableListWordSynonymsAPI200Response {
	return &NullableListWordSynonymsAPI200Response{value: val, isSet: true}
}

func (v NullableListWordSynonymsAPI200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListWordSynonymsAPI200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



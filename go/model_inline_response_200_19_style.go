/*
API League

API League is a Hub for World Class APIs.

API version: 1.0
Contact: mail@apileague.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse20019Style struct for InlineResponse20019Style
type InlineResponse20019Style struct {
	Mainscores *InlineResponse20019ReadabilityMainscores `json:"mainscores,omitempty"`
	Subscores *InlineResponse20019StyleSubscores `json:"subscores,omitempty"`
}

// NewInlineResponse20019Style instantiates a new InlineResponse20019Style object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20019Style() *InlineResponse20019Style {
	this := InlineResponse20019Style{}
	return &this
}

// NewInlineResponse20019StyleWithDefaults instantiates a new InlineResponse20019Style object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20019StyleWithDefaults() *InlineResponse20019Style {
	this := InlineResponse20019Style{}
	return &this
}

// GetMainscores returns the Mainscores field value if set, zero value otherwise.
func (o *InlineResponse20019Style) GetMainscores() InlineResponse20019ReadabilityMainscores {
	if o == nil || o.Mainscores == nil {
		var ret InlineResponse20019ReadabilityMainscores
		return ret
	}
	return *o.Mainscores
}

// GetMainscoresOk returns a tuple with the Mainscores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20019Style) GetMainscoresOk() (*InlineResponse20019ReadabilityMainscores, bool) {
	if o == nil || o.Mainscores == nil {
		return nil, false
	}
	return o.Mainscores, true
}

// HasMainscores returns a boolean if a field has been set.
func (o *InlineResponse20019Style) HasMainscores() bool {
	if o != nil && o.Mainscores != nil {
		return true
	}

	return false
}

// SetMainscores gets a reference to the given InlineResponse20019ReadabilityMainscores and assigns it to the Mainscores field.
func (o *InlineResponse20019Style) SetMainscores(v InlineResponse20019ReadabilityMainscores) {
	o.Mainscores = &v
}

// GetSubscores returns the Subscores field value if set, zero value otherwise.
func (o *InlineResponse20019Style) GetSubscores() InlineResponse20019StyleSubscores {
	if o == nil || o.Subscores == nil {
		var ret InlineResponse20019StyleSubscores
		return ret
	}
	return *o.Subscores
}

// GetSubscoresOk returns a tuple with the Subscores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20019Style) GetSubscoresOk() (*InlineResponse20019StyleSubscores, bool) {
	if o == nil || o.Subscores == nil {
		return nil, false
	}
	return o.Subscores, true
}

// HasSubscores returns a boolean if a field has been set.
func (o *InlineResponse20019Style) HasSubscores() bool {
	if o != nil && o.Subscores != nil {
		return true
	}

	return false
}

// SetSubscores gets a reference to the given InlineResponse20019StyleSubscores and assigns it to the Subscores field.
func (o *InlineResponse20019Style) SetSubscores(v InlineResponse20019StyleSubscores) {
	o.Subscores = &v
}

func (o InlineResponse20019Style) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Mainscores != nil {
		toSerialize["mainscores"] = o.Mainscores
	}
	if o.Subscores != nil {
		toSerialize["subscores"] = o.Subscores
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20019Style struct {
	value *InlineResponse20019Style
	isSet bool
}

func (v NullableInlineResponse20019Style) Get() *InlineResponse20019Style {
	return v.value
}

func (v *NullableInlineResponse20019Style) Set(val *InlineResponse20019Style) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20019Style) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20019Style) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20019Style(val *InlineResponse20019Style) *NullableInlineResponse20019Style {
	return &NullableInlineResponse20019Style{value: val, isSet: true}
}

func (v NullableInlineResponse20019Style) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20019Style) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



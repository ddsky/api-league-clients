/*
API League

API League is a Hub for World Class APIs.

API version: 1.0
Contact: mail@apileague.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse2007Images struct for InlineResponse2007Images
type InlineResponse2007Images struct {
	Width *int32 `json:"width,omitempty"`
	Url NullableString `json:"url,omitempty"`
	Height *int32 `json:"height,omitempty"`
}

// NewInlineResponse2007Images instantiates a new InlineResponse2007Images object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse2007Images() *InlineResponse2007Images {
	this := InlineResponse2007Images{}
	return &this
}

// NewInlineResponse2007ImagesWithDefaults instantiates a new InlineResponse2007Images object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse2007ImagesWithDefaults() *InlineResponse2007Images {
	this := InlineResponse2007Images{}
	return &this
}

// GetWidth returns the Width field value if set, zero value otherwise.
func (o *InlineResponse2007Images) GetWidth() int32 {
	if o == nil || o.Width == nil {
		var ret int32
		return ret
	}
	return *o.Width
}

// GetWidthOk returns a tuple with the Width field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2007Images) GetWidthOk() (*int32, bool) {
	if o == nil || o.Width == nil {
		return nil, false
	}
	return o.Width, true
}

// HasWidth returns a boolean if a field has been set.
func (o *InlineResponse2007Images) HasWidth() bool {
	if o != nil && o.Width != nil {
		return true
	}

	return false
}

// SetWidth gets a reference to the given int32 and assigns it to the Width field.
func (o *InlineResponse2007Images) SetWidth(v int32) {
	o.Width = &v
}

// GetUrl returns the Url field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse2007Images) GetUrl() string {
	if o == nil || o.Url.Get() == nil {
		var ret string
		return ret
	}
	return *o.Url.Get()
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse2007Images) GetUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Url.Get(), o.Url.IsSet()
}

// HasUrl returns a boolean if a field has been set.
func (o *InlineResponse2007Images) HasUrl() bool {
	if o != nil && o.Url.IsSet() {
		return true
	}

	return false
}

// SetUrl gets a reference to the given NullableString and assigns it to the Url field.
func (o *InlineResponse2007Images) SetUrl(v string) {
	o.Url.Set(&v)
}
// SetUrlNil sets the value for Url to be an explicit nil
func (o *InlineResponse2007Images) SetUrlNil() {
	o.Url.Set(nil)
}

// UnsetUrl ensures that no value is present for Url, not even an explicit nil
func (o *InlineResponse2007Images) UnsetUrl() {
	o.Url.Unset()
}

// GetHeight returns the Height field value if set, zero value otherwise.
func (o *InlineResponse2007Images) GetHeight() int32 {
	if o == nil || o.Height == nil {
		var ret int32
		return ret
	}
	return *o.Height
}

// GetHeightOk returns a tuple with the Height field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2007Images) GetHeightOk() (*int32, bool) {
	if o == nil || o.Height == nil {
		return nil, false
	}
	return o.Height, true
}

// HasHeight returns a boolean if a field has been set.
func (o *InlineResponse2007Images) HasHeight() bool {
	if o != nil && o.Height != nil {
		return true
	}

	return false
}

// SetHeight gets a reference to the given int32 and assigns it to the Height field.
func (o *InlineResponse2007Images) SetHeight(v int32) {
	o.Height = &v
}

func (o InlineResponse2007Images) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Width != nil {
		toSerialize["width"] = o.Width
	}
	if o.Url.IsSet() {
		toSerialize["url"] = o.Url.Get()
	}
	if o.Height != nil {
		toSerialize["height"] = o.Height
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse2007Images struct {
	value *InlineResponse2007Images
	isSet bool
}

func (v NullableInlineResponse2007Images) Get() *InlineResponse2007Images {
	return v.value
}

func (v *NullableInlineResponse2007Images) Set(val *InlineResponse2007Images) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse2007Images) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse2007Images) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse2007Images(val *InlineResponse2007Images) *NullableInlineResponse2007Images {
	return &NullableInlineResponse2007Images{value: val, isSet: true}
}

func (v NullableInlineResponse2007Images) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse2007Images) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



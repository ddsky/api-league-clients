/*
API League

API League is a Hub for World Class APIs.

API version: 1.0
Contact: mail@apileague.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse2002News struct for InlineResponse2002News
type InlineResponse2002News struct {
	Summary NullableString `json:"summary,omitempty"`
	Image NullableString `json:"image,omitempty"`
	Sentiment *float32 `json:"sentiment,omitempty"`
	SourceCountry NullableString `json:"source_country,omitempty"`
	Language NullableString `json:"language,omitempty"`
	Id *int32 `json:"id,omitempty"`
	Text NullableString `json:"text,omitempty"`
	Title NullableString `json:"title,omitempty"`
	PublishDate NullableString `json:"publish_date,omitempty"`
	Url NullableString `json:"url,omitempty"`
	Authors []*string `json:"authors,omitempty"`
}

// NewInlineResponse2002News instantiates a new InlineResponse2002News object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse2002News() *InlineResponse2002News {
	this := InlineResponse2002News{}
	return &this
}

// NewInlineResponse2002NewsWithDefaults instantiates a new InlineResponse2002News object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse2002NewsWithDefaults() *InlineResponse2002News {
	this := InlineResponse2002News{}
	return &this
}

// GetSummary returns the Summary field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse2002News) GetSummary() string {
	if o == nil || o.Summary.Get() == nil {
		var ret string
		return ret
	}
	return *o.Summary.Get()
}

// GetSummaryOk returns a tuple with the Summary field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse2002News) GetSummaryOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Summary.Get(), o.Summary.IsSet()
}

// HasSummary returns a boolean if a field has been set.
func (o *InlineResponse2002News) HasSummary() bool {
	if o != nil && o.Summary.IsSet() {
		return true
	}

	return false
}

// SetSummary gets a reference to the given NullableString and assigns it to the Summary field.
func (o *InlineResponse2002News) SetSummary(v string) {
	o.Summary.Set(&v)
}
// SetSummaryNil sets the value for Summary to be an explicit nil
func (o *InlineResponse2002News) SetSummaryNil() {
	o.Summary.Set(nil)
}

// UnsetSummary ensures that no value is present for Summary, not even an explicit nil
func (o *InlineResponse2002News) UnsetSummary() {
	o.Summary.Unset()
}

// GetImage returns the Image field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse2002News) GetImage() string {
	if o == nil || o.Image.Get() == nil {
		var ret string
		return ret
	}
	return *o.Image.Get()
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse2002News) GetImageOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Image.Get(), o.Image.IsSet()
}

// HasImage returns a boolean if a field has been set.
func (o *InlineResponse2002News) HasImage() bool {
	if o != nil && o.Image.IsSet() {
		return true
	}

	return false
}

// SetImage gets a reference to the given NullableString and assigns it to the Image field.
func (o *InlineResponse2002News) SetImage(v string) {
	o.Image.Set(&v)
}
// SetImageNil sets the value for Image to be an explicit nil
func (o *InlineResponse2002News) SetImageNil() {
	o.Image.Set(nil)
}

// UnsetImage ensures that no value is present for Image, not even an explicit nil
func (o *InlineResponse2002News) UnsetImage() {
	o.Image.Unset()
}

// GetSentiment returns the Sentiment field value if set, zero value otherwise.
func (o *InlineResponse2002News) GetSentiment() float32 {
	if o == nil || o.Sentiment == nil {
		var ret float32
		return ret
	}
	return *o.Sentiment
}

// GetSentimentOk returns a tuple with the Sentiment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2002News) GetSentimentOk() (*float32, bool) {
	if o == nil || o.Sentiment == nil {
		return nil, false
	}
	return o.Sentiment, true
}

// HasSentiment returns a boolean if a field has been set.
func (o *InlineResponse2002News) HasSentiment() bool {
	if o != nil && o.Sentiment != nil {
		return true
	}

	return false
}

// SetSentiment gets a reference to the given float32 and assigns it to the Sentiment field.
func (o *InlineResponse2002News) SetSentiment(v float32) {
	o.Sentiment = &v
}

// GetSourceCountry returns the SourceCountry field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse2002News) GetSourceCountry() string {
	if o == nil || o.SourceCountry.Get() == nil {
		var ret string
		return ret
	}
	return *o.SourceCountry.Get()
}

// GetSourceCountryOk returns a tuple with the SourceCountry field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse2002News) GetSourceCountryOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SourceCountry.Get(), o.SourceCountry.IsSet()
}

// HasSourceCountry returns a boolean if a field has been set.
func (o *InlineResponse2002News) HasSourceCountry() bool {
	if o != nil && o.SourceCountry.IsSet() {
		return true
	}

	return false
}

// SetSourceCountry gets a reference to the given NullableString and assigns it to the SourceCountry field.
func (o *InlineResponse2002News) SetSourceCountry(v string) {
	o.SourceCountry.Set(&v)
}
// SetSourceCountryNil sets the value for SourceCountry to be an explicit nil
func (o *InlineResponse2002News) SetSourceCountryNil() {
	o.SourceCountry.Set(nil)
}

// UnsetSourceCountry ensures that no value is present for SourceCountry, not even an explicit nil
func (o *InlineResponse2002News) UnsetSourceCountry() {
	o.SourceCountry.Unset()
}

// GetLanguage returns the Language field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse2002News) GetLanguage() string {
	if o == nil || o.Language.Get() == nil {
		var ret string
		return ret
	}
	return *o.Language.Get()
}

// GetLanguageOk returns a tuple with the Language field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse2002News) GetLanguageOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Language.Get(), o.Language.IsSet()
}

// HasLanguage returns a boolean if a field has been set.
func (o *InlineResponse2002News) HasLanguage() bool {
	if o != nil && o.Language.IsSet() {
		return true
	}

	return false
}

// SetLanguage gets a reference to the given NullableString and assigns it to the Language field.
func (o *InlineResponse2002News) SetLanguage(v string) {
	o.Language.Set(&v)
}
// SetLanguageNil sets the value for Language to be an explicit nil
func (o *InlineResponse2002News) SetLanguageNil() {
	o.Language.Set(nil)
}

// UnsetLanguage ensures that no value is present for Language, not even an explicit nil
func (o *InlineResponse2002News) UnsetLanguage() {
	o.Language.Unset()
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InlineResponse2002News) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2002News) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InlineResponse2002News) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *InlineResponse2002News) SetId(v int32) {
	o.Id = &v
}

// GetText returns the Text field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse2002News) GetText() string {
	if o == nil || o.Text.Get() == nil {
		var ret string
		return ret
	}
	return *o.Text.Get()
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse2002News) GetTextOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Text.Get(), o.Text.IsSet()
}

// HasText returns a boolean if a field has been set.
func (o *InlineResponse2002News) HasText() bool {
	if o != nil && o.Text.IsSet() {
		return true
	}

	return false
}

// SetText gets a reference to the given NullableString and assigns it to the Text field.
func (o *InlineResponse2002News) SetText(v string) {
	o.Text.Set(&v)
}
// SetTextNil sets the value for Text to be an explicit nil
func (o *InlineResponse2002News) SetTextNil() {
	o.Text.Set(nil)
}

// UnsetText ensures that no value is present for Text, not even an explicit nil
func (o *InlineResponse2002News) UnsetText() {
	o.Text.Unset()
}

// GetTitle returns the Title field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse2002News) GetTitle() string {
	if o == nil || o.Title.Get() == nil {
		var ret string
		return ret
	}
	return *o.Title.Get()
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse2002News) GetTitleOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Title.Get(), o.Title.IsSet()
}

// HasTitle returns a boolean if a field has been set.
func (o *InlineResponse2002News) HasTitle() bool {
	if o != nil && o.Title.IsSet() {
		return true
	}

	return false
}

// SetTitle gets a reference to the given NullableString and assigns it to the Title field.
func (o *InlineResponse2002News) SetTitle(v string) {
	o.Title.Set(&v)
}
// SetTitleNil sets the value for Title to be an explicit nil
func (o *InlineResponse2002News) SetTitleNil() {
	o.Title.Set(nil)
}

// UnsetTitle ensures that no value is present for Title, not even an explicit nil
func (o *InlineResponse2002News) UnsetTitle() {
	o.Title.Unset()
}

// GetPublishDate returns the PublishDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse2002News) GetPublishDate() string {
	if o == nil || o.PublishDate.Get() == nil {
		var ret string
		return ret
	}
	return *o.PublishDate.Get()
}

// GetPublishDateOk returns a tuple with the PublishDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse2002News) GetPublishDateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PublishDate.Get(), o.PublishDate.IsSet()
}

// HasPublishDate returns a boolean if a field has been set.
func (o *InlineResponse2002News) HasPublishDate() bool {
	if o != nil && o.PublishDate.IsSet() {
		return true
	}

	return false
}

// SetPublishDate gets a reference to the given NullableString and assigns it to the PublishDate field.
func (o *InlineResponse2002News) SetPublishDate(v string) {
	o.PublishDate.Set(&v)
}
// SetPublishDateNil sets the value for PublishDate to be an explicit nil
func (o *InlineResponse2002News) SetPublishDateNil() {
	o.PublishDate.Set(nil)
}

// UnsetPublishDate ensures that no value is present for PublishDate, not even an explicit nil
func (o *InlineResponse2002News) UnsetPublishDate() {
	o.PublishDate.Unset()
}

// GetUrl returns the Url field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse2002News) GetUrl() string {
	if o == nil || o.Url.Get() == nil {
		var ret string
		return ret
	}
	return *o.Url.Get()
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse2002News) GetUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Url.Get(), o.Url.IsSet()
}

// HasUrl returns a boolean if a field has been set.
func (o *InlineResponse2002News) HasUrl() bool {
	if o != nil && o.Url.IsSet() {
		return true
	}

	return false
}

// SetUrl gets a reference to the given NullableString and assigns it to the Url field.
func (o *InlineResponse2002News) SetUrl(v string) {
	o.Url.Set(&v)
}
// SetUrlNil sets the value for Url to be an explicit nil
func (o *InlineResponse2002News) SetUrlNil() {
	o.Url.Set(nil)
}

// UnsetUrl ensures that no value is present for Url, not even an explicit nil
func (o *InlineResponse2002News) UnsetUrl() {
	o.Url.Unset()
}

// GetAuthors returns the Authors field value if set, zero value otherwise.
func (o *InlineResponse2002News) GetAuthors() []*string {
	if o == nil || o.Authors == nil {
		var ret []*string
		return ret
	}
	return o.Authors
}

// GetAuthorsOk returns a tuple with the Authors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2002News) GetAuthorsOk() ([]*string, bool) {
	if o == nil || o.Authors == nil {
		return nil, false
	}
	return o.Authors, true
}

// HasAuthors returns a boolean if a field has been set.
func (o *InlineResponse2002News) HasAuthors() bool {
	if o != nil && o.Authors != nil {
		return true
	}

	return false
}

// SetAuthors gets a reference to the given []*string and assigns it to the Authors field.
func (o *InlineResponse2002News) SetAuthors(v []*string) {
	o.Authors = v
}

func (o InlineResponse2002News) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Summary.IsSet() {
		toSerialize["summary"] = o.Summary.Get()
	}
	if o.Image.IsSet() {
		toSerialize["image"] = o.Image.Get()
	}
	if o.Sentiment != nil {
		toSerialize["sentiment"] = o.Sentiment
	}
	if o.SourceCountry.IsSet() {
		toSerialize["source_country"] = o.SourceCountry.Get()
	}
	if o.Language.IsSet() {
		toSerialize["language"] = o.Language.Get()
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Text.IsSet() {
		toSerialize["text"] = o.Text.Get()
	}
	if o.Title.IsSet() {
		toSerialize["title"] = o.Title.Get()
	}
	if o.PublishDate.IsSet() {
		toSerialize["publish_date"] = o.PublishDate.Get()
	}
	if o.Url.IsSet() {
		toSerialize["url"] = o.Url.Get()
	}
	if o.Authors != nil {
		toSerialize["authors"] = o.Authors
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse2002News struct {
	value *InlineResponse2002News
	isSet bool
}

func (v NullableInlineResponse2002News) Get() *InlineResponse2002News {
	return v.value
}

func (v *NullableInlineResponse2002News) Set(val *InlineResponse2002News) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse2002News) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse2002News) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse2002News(val *InlineResponse2002News) *NullableInlineResponse2002News {
	return &NullableInlineResponse2002News{value: val, isSet: true}
}

func (v NullableInlineResponse2002News) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse2002News) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
API League

API League is a Hub for World Class APIs.

API version: 1.4.0
Contact: mail@apileague.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apileague

import (
	"encoding/json"
)

// checks if the ScoreText200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ScoreText200Response{}

// ScoreText200Response struct for ScoreText200Response
type ScoreText200Response struct {
	NumberOfWords *int32 `json:"number_of_words,omitempty"`
	NumberOfSentences *int32 `json:"number_of_sentences,omitempty"`
	Readability *ScoreText200ResponseReadability `json:"readability,omitempty"`
	Skimmability *ScoreText200ResponseSkimmability `json:"skimmability,omitempty"`
	Interestingness *ScoreText200ResponseInterestingness `json:"interestingness,omitempty"`
	Style *ScoreText200ResponseStyle `json:"style,omitempty"`
	TotalScore *float32 `json:"total_score,omitempty"`
}

// NewScoreText200Response instantiates a new ScoreText200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScoreText200Response() *ScoreText200Response {
	this := ScoreText200Response{}
	return &this
}

// NewScoreText200ResponseWithDefaults instantiates a new ScoreText200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScoreText200ResponseWithDefaults() *ScoreText200Response {
	this := ScoreText200Response{}
	return &this
}

// GetNumberOfWords returns the NumberOfWords field value if set, zero value otherwise.
func (o *ScoreText200Response) GetNumberOfWords() int32 {
	if o == nil || IsNil(o.NumberOfWords) {
		var ret int32
		return ret
	}
	return *o.NumberOfWords
}

// GetNumberOfWordsOk returns a tuple with the NumberOfWords field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScoreText200Response) GetNumberOfWordsOk() (*int32, bool) {
	if o == nil || IsNil(o.NumberOfWords) {
		return nil, false
	}
	return o.NumberOfWords, true
}

// HasNumberOfWords returns a boolean if a field has been set.
func (o *ScoreText200Response) HasNumberOfWords() bool {
	if o != nil && !IsNil(o.NumberOfWords) {
		return true
	}

	return false
}

// SetNumberOfWords gets a reference to the given int32 and assigns it to the NumberOfWords field.
func (o *ScoreText200Response) SetNumberOfWords(v int32) {
	o.NumberOfWords = &v
}

// GetNumberOfSentences returns the NumberOfSentences field value if set, zero value otherwise.
func (o *ScoreText200Response) GetNumberOfSentences() int32 {
	if o == nil || IsNil(o.NumberOfSentences) {
		var ret int32
		return ret
	}
	return *o.NumberOfSentences
}

// GetNumberOfSentencesOk returns a tuple with the NumberOfSentences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScoreText200Response) GetNumberOfSentencesOk() (*int32, bool) {
	if o == nil || IsNil(o.NumberOfSentences) {
		return nil, false
	}
	return o.NumberOfSentences, true
}

// HasNumberOfSentences returns a boolean if a field has been set.
func (o *ScoreText200Response) HasNumberOfSentences() bool {
	if o != nil && !IsNil(o.NumberOfSentences) {
		return true
	}

	return false
}

// SetNumberOfSentences gets a reference to the given int32 and assigns it to the NumberOfSentences field.
func (o *ScoreText200Response) SetNumberOfSentences(v int32) {
	o.NumberOfSentences = &v
}

// GetReadability returns the Readability field value if set, zero value otherwise.
func (o *ScoreText200Response) GetReadability() ScoreText200ResponseReadability {
	if o == nil || IsNil(o.Readability) {
		var ret ScoreText200ResponseReadability
		return ret
	}
	return *o.Readability
}

// GetReadabilityOk returns a tuple with the Readability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScoreText200Response) GetReadabilityOk() (*ScoreText200ResponseReadability, bool) {
	if o == nil || IsNil(o.Readability) {
		return nil, false
	}
	return o.Readability, true
}

// HasReadability returns a boolean if a field has been set.
func (o *ScoreText200Response) HasReadability() bool {
	if o != nil && !IsNil(o.Readability) {
		return true
	}

	return false
}

// SetReadability gets a reference to the given ScoreText200ResponseReadability and assigns it to the Readability field.
func (o *ScoreText200Response) SetReadability(v ScoreText200ResponseReadability) {
	o.Readability = &v
}

// GetSkimmability returns the Skimmability field value if set, zero value otherwise.
func (o *ScoreText200Response) GetSkimmability() ScoreText200ResponseSkimmability {
	if o == nil || IsNil(o.Skimmability) {
		var ret ScoreText200ResponseSkimmability
		return ret
	}
	return *o.Skimmability
}

// GetSkimmabilityOk returns a tuple with the Skimmability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScoreText200Response) GetSkimmabilityOk() (*ScoreText200ResponseSkimmability, bool) {
	if o == nil || IsNil(o.Skimmability) {
		return nil, false
	}
	return o.Skimmability, true
}

// HasSkimmability returns a boolean if a field has been set.
func (o *ScoreText200Response) HasSkimmability() bool {
	if o != nil && !IsNil(o.Skimmability) {
		return true
	}

	return false
}

// SetSkimmability gets a reference to the given ScoreText200ResponseSkimmability and assigns it to the Skimmability field.
func (o *ScoreText200Response) SetSkimmability(v ScoreText200ResponseSkimmability) {
	o.Skimmability = &v
}

// GetInterestingness returns the Interestingness field value if set, zero value otherwise.
func (o *ScoreText200Response) GetInterestingness() ScoreText200ResponseInterestingness {
	if o == nil || IsNil(o.Interestingness) {
		var ret ScoreText200ResponseInterestingness
		return ret
	}
	return *o.Interestingness
}

// GetInterestingnessOk returns a tuple with the Interestingness field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScoreText200Response) GetInterestingnessOk() (*ScoreText200ResponseInterestingness, bool) {
	if o == nil || IsNil(o.Interestingness) {
		return nil, false
	}
	return o.Interestingness, true
}

// HasInterestingness returns a boolean if a field has been set.
func (o *ScoreText200Response) HasInterestingness() bool {
	if o != nil && !IsNil(o.Interestingness) {
		return true
	}

	return false
}

// SetInterestingness gets a reference to the given ScoreText200ResponseInterestingness and assigns it to the Interestingness field.
func (o *ScoreText200Response) SetInterestingness(v ScoreText200ResponseInterestingness) {
	o.Interestingness = &v
}

// GetStyle returns the Style field value if set, zero value otherwise.
func (o *ScoreText200Response) GetStyle() ScoreText200ResponseStyle {
	if o == nil || IsNil(o.Style) {
		var ret ScoreText200ResponseStyle
		return ret
	}
	return *o.Style
}

// GetStyleOk returns a tuple with the Style field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScoreText200Response) GetStyleOk() (*ScoreText200ResponseStyle, bool) {
	if o == nil || IsNil(o.Style) {
		return nil, false
	}
	return o.Style, true
}

// HasStyle returns a boolean if a field has been set.
func (o *ScoreText200Response) HasStyle() bool {
	if o != nil && !IsNil(o.Style) {
		return true
	}

	return false
}

// SetStyle gets a reference to the given ScoreText200ResponseStyle and assigns it to the Style field.
func (o *ScoreText200Response) SetStyle(v ScoreText200ResponseStyle) {
	o.Style = &v
}

// GetTotalScore returns the TotalScore field value if set, zero value otherwise.
func (o *ScoreText200Response) GetTotalScore() float32 {
	if o == nil || IsNil(o.TotalScore) {
		var ret float32
		return ret
	}
	return *o.TotalScore
}

// GetTotalScoreOk returns a tuple with the TotalScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScoreText200Response) GetTotalScoreOk() (*float32, bool) {
	if o == nil || IsNil(o.TotalScore) {
		return nil, false
	}
	return o.TotalScore, true
}

// HasTotalScore returns a boolean if a field has been set.
func (o *ScoreText200Response) HasTotalScore() bool {
	if o != nil && !IsNil(o.TotalScore) {
		return true
	}

	return false
}

// SetTotalScore gets a reference to the given float32 and assigns it to the TotalScore field.
func (o *ScoreText200Response) SetTotalScore(v float32) {
	o.TotalScore = &v
}

func (o ScoreText200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ScoreText200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NumberOfWords) {
		toSerialize["number_of_words"] = o.NumberOfWords
	}
	if !IsNil(o.NumberOfSentences) {
		toSerialize["number_of_sentences"] = o.NumberOfSentences
	}
	if !IsNil(o.Readability) {
		toSerialize["readability"] = o.Readability
	}
	if !IsNil(o.Skimmability) {
		toSerialize["skimmability"] = o.Skimmability
	}
	if !IsNil(o.Interestingness) {
		toSerialize["interestingness"] = o.Interestingness
	}
	if !IsNil(o.Style) {
		toSerialize["style"] = o.Style
	}
	if !IsNil(o.TotalScore) {
		toSerialize["total_score"] = o.TotalScore
	}
	return toSerialize, nil
}

type NullableScoreText200Response struct {
	value *ScoreText200Response
	isSet bool
}

func (v NullableScoreText200Response) Get() *ScoreText200Response {
	return v.value
}

func (v *NullableScoreText200Response) Set(val *ScoreText200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableScoreText200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableScoreText200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScoreText200Response(val *ScoreText200Response) *NullableScoreText200Response {
	return &NullableScoreText200Response{value: val, isSet: true}
}

func (v NullableScoreText200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScoreText200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


